# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1DocumentFieldTypeSignatureValueTypeMetadata(UniversalBaseModel):
    """
    Metadata about the signature field. Only present for value type `ValueType_Signature`
    """

    legal_text: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="legalText")] = pydantic.Field(
        default=None
    )
    """
    Legal text displayed alongside signature
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
