# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .hos_clocks import HosClocks
import typing_extensions
from .current_duty_status import CurrentDutyStatus
from ..core.serialization import FieldMetadata
from .vehicle_tiny_response import VehicleTinyResponse
from .driver_tiny_response import DriverTinyResponse
from .hos_violations import HosViolations
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class HosClocksForDriver(UniversalBaseModel):
    """
    HOS clock values for a specific driver, including remaining times and violations.
    """

    clocks: typing.Optional[HosClocks] = None
    current_duty_status: typing_extensions.Annotated[
        typing.Optional[CurrentDutyStatus], FieldMetadata(alias="currentDutyStatus")
    ] = None
    current_vehicle: typing_extensions.Annotated[
        typing.Optional[VehicleTinyResponse], FieldMetadata(alias="currentVehicle")
    ] = None
    driver: typing.Optional[DriverTinyResponse] = None
    violations: typing.Optional[HosViolations] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
