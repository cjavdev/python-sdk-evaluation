# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class FormsTableColumnObjectResponseBody(UniversalBaseModel):
    """
    Defines a column in a table form input field.
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the column.
    """

    label: str = pydantic.Field()
    """
    Label of the column.
    """

    type: typing.Literal["text, number, datetime, check_boxes, multiple_choice, signature, media, person"] = (
        pydantic.Field(default="text, number, datetime, check_boxes, multiple_choice, signature, media, person")
    )
    """
    Type of the column field.  Valid values: `text, number, datetime, check_boxes, multiple_choice, signature, media, person`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
