# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .idling_report_event_response_body import IdlingReportEventResponseBody
import pydantic
from .goa_pagination_response_response_body import GoaPaginationResponseResponseBody
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class IdlingReportsGetVehicleIdlingReportsResponseBody(UniversalBaseModel):
    data: typing.List[IdlingReportEventResponseBody] = pydantic.Field()
    """
    Multiple idling events.
    """

    pagination: GoaPaginationResponseResponseBody
    request_end_time: typing_extensions.Annotated[str, FieldMetadata(alias="requestEndTime")] = pydantic.Field()
    """
    The requested end time in RFC 3339 format.
    """

    request_start_time: typing_extensions.Annotated[str, FieldMetadata(alias="requestStartTime")] = pydantic.Field()
    """
    The requested start time in RFC 3339 format.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
