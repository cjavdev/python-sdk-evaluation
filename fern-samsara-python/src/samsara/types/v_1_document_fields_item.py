# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .v_1_document_fields_item_barcode_value_item import V1DocumentFieldsItemBarcodeValueItem
from ..core.serialization import FieldMetadata
import pydantic
from .v_1_document_fields_item_date_time_value import V1DocumentFieldsItemDateTimeValue
from .v_1_document_fields_item_multiple_choice_value_item import V1DocumentFieldsItemMultipleChoiceValueItem
from .v_1_document_fields_item_photo_value_item import V1DocumentFieldsItemPhotoValueItem
from .v_1_document_fields_item_signature_value import V1DocumentFieldsItemSignatureValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1DocumentFieldsItem(UniversalBaseModel):
    barcode_value: typing_extensions.Annotated[
        typing.Optional[typing.List[V1DocumentFieldsItemBarcodeValueItem]], FieldMetadata(alias="barcodeValue")
    ] = pydantic.Field(default=None)
    """
    The value of a barcode scanning field. Only present for barcode scanning fields
    """

    date_time_value: typing_extensions.Annotated[
        typing.Optional[V1DocumentFieldsItemDateTimeValue], FieldMetadata(alias="dateTimeValue")
    ] = pydantic.Field(default=None)
    """
    The value of a date time field. Only present for date time fields.
    """

    label: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of a field.
    """

    multiple_choice_value: typing_extensions.Annotated[
        typing.Optional[typing.List[V1DocumentFieldsItemMultipleChoiceValueItem]],
        FieldMetadata(alias="multipleChoiceValue"),
    ] = pydantic.Field(default=None)
    """
    The value of a multiple choice field. Only present for multiple choice fields.
    """

    number_value: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="numberValue")] = (
        pydantic.Field(default=None)
    )
    """
    The value of a number field. Only present for number fields.
    """

    photo_value: typing_extensions.Annotated[
        typing.Optional[typing.List[V1DocumentFieldsItemPhotoValueItem]], FieldMetadata(alias="photoValue")
    ] = pydantic.Field(default=None)
    """
    The value of a photo or document scanning field. Only present for photo or document scanning fields.
    """

    signature_value: typing_extensions.Annotated[
        typing.Optional[V1DocumentFieldsItemSignatureValue], FieldMetadata(alias="signatureValue")
    ] = pydantic.Field(default=None)
    """
    The value of a signature field. Only present for signature fields.
    """

    string_value: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="stringValue")] = (
        pydantic.Field(default=None)
    )
    """
    The value of a string field. Only present for string fields.
    """

    value: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    The value of a field. Type varies by field type.
    """

    value_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="valueType")] = pydantic.Field(
        default=None
    )
    """
    The value type of a field.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
