# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .equipment_time import EquipmentTime
from .equipment_engine_state_value import EquipmentEngineStateValue
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class EquipmentEngineState(UniversalBaseModel):
    """
    [DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`.
    """

    time: EquipmentTime
    value: EquipmentEngineStateValue = pydantic.Field()
    """
    An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Valid values: `Off`, `On`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
