# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from .hos_violation_trigger_details_object_response_body_violation import (
    HosViolationTriggerDetailsObjectResponseBodyViolation,
)
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class HosViolationTriggerDetailsObjectResponseBody(UniversalBaseModel):
    """
    Details specific to HOS Violation
    """

    max_until_violation_milliseconds: typing_extensions.Annotated[
        int, FieldMetadata(alias="maxUntilViolationMilliseconds")
    ] = pydantic.Field()
    """
    Alert if driver has this specified time until driving causes an HOS violation.
    """

    violation: HosViolationTriggerDetailsObjectResponseBodyViolation = pydantic.Field()
    """
    The type of HOS violation.  Valid values: `CaliforniaMealbreakMissed`, `CycleHoursOn`, `DailyDrivingHours`, `DailyOnDutyHours`, `Invalid`, `RestbreakMissed`, `ShiftDrivingHours`, `ShiftHours`, `ShiftOnDutyHours`, `UnsubmittedLogs`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
