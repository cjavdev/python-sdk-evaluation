# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1DocumentFieldTypeNumberValueTypeMetadata(UniversalBaseModel):
    """
    Metadata about the number field. Only present for value type `ValueType_Number`
    """

    num_decimal_places: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="numDecimalPlaces")] = (
        pydantic.Field(default=None)
    )
    """
    The number of decimal places allowed for this number field
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
