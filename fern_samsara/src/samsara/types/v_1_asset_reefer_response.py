# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from .v_1_asset_reefer_response_reefer_stats import V1AssetReeferResponseReeferStats
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1AssetReeferResponse(UniversalBaseModel):
    """
    Reefer-specific asset details
    """

    asset_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="assetType")] = pydantic.Field(
        default=None
    )
    """
    Asset type
    """

    id: typing.Optional[int] = pydantic.Field(default=None)
    """
    Asset ID
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Asset name
    """

    reefer_stats: typing_extensions.Annotated[
        typing.Optional[V1AssetReeferResponseReeferStats], FieldMetadata(alias="reeferStats")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
