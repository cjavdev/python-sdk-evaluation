# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from .alert_event import AlertEvent
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class WebhookEvent(UniversalBaseModel):
    event_id: typing_extensions.Annotated[str, FieldMetadata(alias="eventId")] = pydantic.Field()
    """
    Unique identifier for the event
    """

    event_ms: typing_extensions.Annotated[int, FieldMetadata(alias="eventMs")] = pydantic.Field()
    """
    Timestamp when the event was sent (Unix epoch in milliseconds)
    """

    event_type: typing_extensions.Annotated[str, FieldMetadata(alias="eventType")] = pydantic.Field()
    """
    Type of the event
    """

    event: AlertEvent

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
