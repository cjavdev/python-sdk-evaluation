# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1DvirBaseNextDriverSignature(UniversalBaseModel):
    """
    The next driver signature for the DVIR.
    """

    driver_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="driverId")] = pydantic.Field(
        default=None
    )
    """
    ID of the driver who signed the DVIR
    """

    email: typing.Optional[str] = pydantic.Field(default=None)
    """
    Email of the  driver who signed the next DVIR on this vehicle.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the driver who signed the next DVIR on this vehicle.
    """

    signed_at: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="signedAt")] = pydantic.Field(
        default=None
    )
    """
    The time in millis when the next driver signed the DVIR on this vehicle.
    """

    type: typing.Optional[str] = pydantic.Field(default=None)
    """
    Type corresponds to driver.
    """

    username: typing.Optional[str] = pydantic.Field(default=None)
    """
    Username of the  driver who signed the next DVIR on this vehicle.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
