# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from .v_1_driver_daily_log_response_days_vehicle_ids import V1DriverDailyLogResponseDaysVehicleIds
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1DriverDailyLogResponseDays(UniversalBaseModel):
    active_hours: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="activeHours")] = (
        pydantic.Field(default=None)
    )
    """
    Hours spent on duty or driving, rounded to two decimal places.
    """

    active_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="activeMs")] = pydantic.Field(
        default=None
    )
    """
    Milliseconds spent on duty or driving.
    """

    certified: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether this HOS day chart was certified by the driver.
    """

    certified_at_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="certifiedAtMs")] = (
        pydantic.Field(default=None)
    )
    """
    Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0.
    """

    distance_miles: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="distanceMiles")] = (
        pydantic.Field(default=None)
    )
    """
    Distance driven in miles, rounded to two decimal places.
    """

    end_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="endMs")] = pydantic.Field(
        default=None
    )
    """
    End of the HOS day, specified in milliseconds UNIX time.
    """

    shipping_doc_ids: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="shippingDocIds")
    ] = pydantic.Field(default=None)
    """
    List of customer shipping document IDs associated with the driver for the day.
    """

    start_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="startMs")] = pydantic.Field(
        default=None
    )
    """
    Start of the HOS day, specified in milliseconds UNIX time.
    """

    trailer_ids: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="trailerIds")] = (
        pydantic.Field(default=None)
    )
    """
    List of trailer ID's associated with the driver for the day.
    """

    vehicle_ids: typing_extensions.Annotated[
        typing.Optional[V1DriverDailyLogResponseDaysVehicleIds], FieldMetadata(alias="vehicleIds")
    ] = pydantic.Field(default=None)
    """
    List of vehicle ID's associated with the driver for the day.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
