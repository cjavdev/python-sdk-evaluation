# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1HosLogsResponseLogs(UniversalBaseModel):
    codriver_ids: typing_extensions.Annotated[
        typing.Optional[typing.List[float]], FieldMetadata(alias="codriverIds")
    ] = None
    driver_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="driverId")] = pydantic.Field(
        default=None
    )
    """
    ID of the driver.
    """

    group_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="groupId")] = pydantic.Field(
        default=None
    )
    """
    Deprecated.
    """

    hos_status_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="hosStatusType")] = (
        pydantic.Field(default=None)
    )
    """
    The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.
    """

    loc_city: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="locCity")] = pydantic.Field(
        default=None
    )
    """
    City in which the log was recorded.
    """

    loc_lat: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="locLat")] = pydantic.Field(
        default=None
    )
    """
    Latitude at which the log was recorded.
    """

    loc_lng: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="locLng")] = pydantic.Field(
        default=None
    )
    """
    Longitude at which the log was recorded.
    """

    loc_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="locName")] = pydantic.Field(
        default=None
    )
    """
    Name of location at which the log was recorded.
    """

    loc_state: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="locState")] = pydantic.Field(
        default=None
    )
    """
    State in which the log was recorded.
    """

    log_start_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="logStartMs")] = pydantic.Field(
        default=None
    )
    """
    The time at which the log/HOS status started in UNIX milliseconds.
    """

    remark: typing.Optional[str] = pydantic.Field(default=None)
    """
    Remark associated with the log entry.
    """

    vehicle_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="vehicleId")] = pydantic.Field(
        default=None
    )
    """
    ID of the vehicle.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
