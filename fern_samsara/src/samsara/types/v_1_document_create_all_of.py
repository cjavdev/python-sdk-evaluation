# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from .v_1_document_create_fields import V1DocumentCreateFields
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class V1DocumentCreateAllOf(UniversalBaseModel):
    """
    Arguments to create a document.
    """

    document_type_uuid: typing_extensions.Annotated[str, FieldMetadata(alias="documentTypeUuid")] = pydantic.Field()
    """
    Universally unique identifier for the document type that this document is being created for.
    """

    fields: V1DocumentCreateFields

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
