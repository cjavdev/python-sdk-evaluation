"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DvirSubmissionTypes(str, Enum):
    r"""DVIR submission type  Valid values: `SAFE_NO_DEFECTS`, `SAFE_WITH_DEFECTS`, `UNSAFE`"""

    SAFE_NO_DEFECTS = "SAFE_NO_DEFECTS"
    SAFE_WITH_DEFECTS = "SAFE_WITH_DEFECTS"
    UNSAFE = "UNSAFE"


class DVIRSubmittedDeviceTriggerDetailsObjectResponseBodyTypedDict(TypedDict):
    r"""Details specific to DVIR Submitted by Device"""

    dvir_min_duration_milliseconds: NotRequired[int]
    r"""The trigger will only fire if the selected DVIR types are submitted within the duration."""
    dvir_submission_types: NotRequired[List[DvirSubmissionTypes]]
    r"""Filter to these types of DVIR submissions."""


class DVIRSubmittedDeviceTriggerDetailsObjectResponseBody(BaseModel):
    r"""Details specific to DVIR Submitted by Device"""

    dvir_min_duration_milliseconds: Annotated[
        Optional[int], pydantic.Field(alias="dvirMinDurationMilliseconds")
    ] = None
    r"""The trigger will only fire if the selected DVIR types are submitted within the duration."""

    dvir_submission_types: Annotated[
        Optional[List[DvirSubmissionTypes]], pydantic.Field(alias="dvirSubmissionTypes")
    ] = None
    r"""Filter to these types of DVIR submissions."""
