"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .cumulativeoperatinghoursresponsebody import (
    CumulativeOperatingHoursResponseBody,
    CumulativeOperatingHoursResponseBodyTypedDict,
)
from .defremainingresponsebody import (
    DEFRemainingResponseBody,
    DEFRemainingResponseBodyTypedDict,
)
from .distanceresponsebody import DistanceResponseBody, DistanceResponseBodyTypedDict
from .enginestatusresponsebody import (
    EngineStatusResponseBody,
    EngineStatusResponseBodyTypedDict,
)
from .equipmentheaderwithadditionalfieldsresponsebody import (
    EquipmentHeaderWithAdditionalFieldsResponseBody,
    EquipmentHeaderWithAdditionalFieldsResponseBodyTypedDict,
)
from .fuelremainingresponsebody import (
    FuelRemainingResponseBody,
    FuelRemainingResponseBodyTypedDict,
)
from .locationresponsebody import LocationResponseBody, LocationResponseBodyTypedDict
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AempEquipmentWithAdditionalFieldsResponseBodyTypedDict(TypedDict):
    r"""Contains equipment fields."""

    equipment_header: EquipmentHeaderWithAdditionalFieldsResponseBodyTypedDict
    r"""Equipment header fields."""
    location: LocationResponseBodyTypedDict
    r"""Equipment location."""
    cumulative_operating_hours: NotRequired[
        CumulativeOperatingHoursResponseBodyTypedDict
    ]
    r"""Equipment operating hours."""
    def_remaining: NotRequired[DEFRemainingResponseBodyTypedDict]
    r"""DEF remaining in equipment."""
    distance: NotRequired[DistanceResponseBodyTypedDict]
    r"""Equipment odometer distance."""
    engine_status: NotRequired[EngineStatusResponseBodyTypedDict]
    r"""Equipment engine status."""
    fuel_remaining: NotRequired[FuelRemainingResponseBodyTypedDict]
    r"""Fuel remaining in equipment."""


class AempEquipmentWithAdditionalFieldsResponseBody(BaseModel):
    r"""Contains equipment fields."""

    equipment_header: Annotated[
        EquipmentHeaderWithAdditionalFieldsResponseBody,
        pydantic.Field(alias="EquipmentHeader"),
    ]
    r"""Equipment header fields."""

    location: Annotated[LocationResponseBody, pydantic.Field(alias="Location")]
    r"""Equipment location."""

    cumulative_operating_hours: Annotated[
        Optional[CumulativeOperatingHoursResponseBody],
        pydantic.Field(alias="CumulativeOperatingHours"),
    ] = None
    r"""Equipment operating hours."""

    def_remaining: Annotated[
        Optional[DEFRemainingResponseBody], pydantic.Field(alias="DEFRemaining")
    ] = None
    r"""DEF remaining in equipment."""

    distance: Annotated[
        Optional[DistanceResponseBody], pydantic.Field(alias="Distance")
    ] = None
    r"""Equipment odometer distance."""

    engine_status: Annotated[
        Optional[EngineStatusResponseBody], pydantic.Field(alias="EngineStatus")
    ] = None
    r"""Equipment engine status."""

    fuel_remaining: Annotated[
        Optional[FuelRemainingResponseBody], pydantic.Field(alias="FuelRemaining")
    ] = None
    r"""Fuel remaining in equipment."""
