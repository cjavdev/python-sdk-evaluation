"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .goadrivertinyresponseresponsebody import (
    GoaDriverTinyResponseResponseBody,
    GoaDriverTinyResponseResponseBodyTypedDict,
)
from .hosviolationdayobjectresponsebody import (
    HosViolationDayObjectResponseBody,
    HosViolationDayObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing_extensions import Annotated, TypedDict


class HosViolationObjectResponseBodyType(str, Enum):
    r"""The string value of the violation type.  Valid values: `NONE`, `californiaMealbreakMissed`, `cycleHoursOn`, `cycleOffHoursAfterOnDutyHours`, `dailyDrivingHours`, `dailyOffDutyDeferralAddToDay2Consecutive`, `dailyOffDutyDeferralNotPartMandatory`, `dailyOffDutyDeferralTwoDayDrivingLimit`, `dailyOffDutyDeferralTwoDayOffDuty`, `dailyOffDutyNonResetHours`, `dailyOffDutyTotalHours`, `dailyOnDutyHours`, `mandatory24HoursOffDuty`, `restbreakMissed`, `shiftDrivingHours`, `shiftHours`, `shiftOnDutyHours`, `unsubmittedLogs`"""

    NONE = "NONE"
    CALIFORNIA_MEALBREAK_MISSED = "californiaMealbreakMissed"
    CYCLE_HOURS_ON = "cycleHoursOn"
    CYCLE_OFF_HOURS_AFTER_ON_DUTY_HOURS = "cycleOffHoursAfterOnDutyHours"
    DAILY_DRIVING_HOURS = "dailyDrivingHours"
    DAILY_OFF_DUTY_DEFERRAL_ADD_TO_DAY2_CONSECUTIVE = (
        "dailyOffDutyDeferralAddToDay2Consecutive"
    )
    DAILY_OFF_DUTY_DEFERRAL_NOT_PART_MANDATORY = "dailyOffDutyDeferralNotPartMandatory"
    DAILY_OFF_DUTY_DEFERRAL_TWO_DAY_DRIVING_LIMIT = (
        "dailyOffDutyDeferralTwoDayDrivingLimit"
    )
    DAILY_OFF_DUTY_DEFERRAL_TWO_DAY_OFF_DUTY = "dailyOffDutyDeferralTwoDayOffDuty"
    DAILY_OFF_DUTY_NON_RESET_HOURS = "dailyOffDutyNonResetHours"
    DAILY_OFF_DUTY_TOTAL_HOURS = "dailyOffDutyTotalHours"
    DAILY_ON_DUTY_HOURS = "dailyOnDutyHours"
    MANDATORY24_HOURS_OFF_DUTY = "mandatory24HoursOffDuty"
    RESTBREAK_MISSED = "restbreakMissed"
    SHIFT_DRIVING_HOURS = "shiftDrivingHours"
    SHIFT_HOURS = "shiftHours"
    SHIFT_ON_DUTY_HOURS = "shiftOnDutyHours"
    UNSUBMITTED_LOGS = "unsubmittedLogs"


class HosViolationObjectResponseBodyTypedDict(TypedDict):
    day: HosViolationDayObjectResponseBodyTypedDict
    description: str
    r"""Description containing violation type, region, and other metadata. This field can assume the following formats for the following types:
    californiaMealbreakMissed, restbreakMissed: \"[description] ([max on duty hours] hours)\" 
    cycleHoursOn, dailyDrivingHours, dailyOffDutyNonResetHours, dailyOffDutyTotalHours, dailyOnDutyHours, shiftDrivingHours, shiftHours, shiftOnDutyHours: \"[description] ([region]-[max hours in duty status] hours)\" 
    cycleOffHoursAfterOnDutyHours: \"[description] ([region]): [minimum hours consecutive rest] hours off duty required after [max hours before consecutive rest] hours on-duty time\" 
    dailyOffDutyDeferralAddToDay2Consecutive, dailyOffDutyDeferralNotPartMandatory, dailyOffDutyDeferralTwoDayDrivingLimit, dailyOffDutyDeferralTwoDayOffDuty, mandatory24HoursOffDuty: \"[description] ([region])\" 
    unsubmittedLogs: \"Missing Driver Certification\" 
    """
    driver: GoaDriverTinyResponseResponseBodyTypedDict
    r"""A minified driver object. This object is only returned if the route is assigned to the driver."""
    duration_ms: int
    r"""Duration the driver was in violation in milliseconds. This is the time between the time the driver starts being in violation until the end of the time window for violations that have one (e.g. `shiftDrivingHours`) or until the end of the day. The duration of some violations may cover the whole day (e.g. `unsubmittedLogs`)."""
    type: HosViolationObjectResponseBodyType
    r"""The string value of the violation type.  Valid values: `NONE`, `californiaMealbreakMissed`, `cycleHoursOn`, `cycleOffHoursAfterOnDutyHours`, `dailyDrivingHours`, `dailyOffDutyDeferralAddToDay2Consecutive`, `dailyOffDutyDeferralNotPartMandatory`, `dailyOffDutyDeferralTwoDayDrivingLimit`, `dailyOffDutyDeferralTwoDayOffDuty`, `dailyOffDutyNonResetHours`, `dailyOffDutyTotalHours`, `dailyOnDutyHours`, `mandatory24HoursOffDuty`, `restbreakMissed`, `shiftDrivingHours`, `shiftHours`, `shiftOnDutyHours`, `unsubmittedLogs`"""
    violation_start_time: str
    r"""The start time of the violation in RFC 3339 format."""


class HosViolationObjectResponseBody(BaseModel):
    day: HosViolationDayObjectResponseBody

    description: str
    r"""Description containing violation type, region, and other metadata. This field can assume the following formats for the following types:
    californiaMealbreakMissed, restbreakMissed: \"[description] ([max on duty hours] hours)\" 
    cycleHoursOn, dailyDrivingHours, dailyOffDutyNonResetHours, dailyOffDutyTotalHours, dailyOnDutyHours, shiftDrivingHours, shiftHours, shiftOnDutyHours: \"[description] ([region]-[max hours in duty status] hours)\" 
    cycleOffHoursAfterOnDutyHours: \"[description] ([region]): [minimum hours consecutive rest] hours off duty required after [max hours before consecutive rest] hours on-duty time\" 
    dailyOffDutyDeferralAddToDay2Consecutive, dailyOffDutyDeferralNotPartMandatory, dailyOffDutyDeferralTwoDayDrivingLimit, dailyOffDutyDeferralTwoDayOffDuty, mandatory24HoursOffDuty: \"[description] ([region])\" 
    unsubmittedLogs: \"Missing Driver Certification\" 
    """

    driver: GoaDriverTinyResponseResponseBody
    r"""A minified driver object. This object is only returned if the route is assigned to the driver."""

    duration_ms: Annotated[int, pydantic.Field(alias="durationMs")]
    r"""Duration the driver was in violation in milliseconds. This is the time between the time the driver starts being in violation until the end of the time window for violations that have one (e.g. `shiftDrivingHours`) or until the end of the day. The duration of some violations may cover the whole day (e.g. `unsubmittedLogs`)."""

    type: HosViolationObjectResponseBodyType
    r"""The string value of the violation type.  Valid values: `NONE`, `californiaMealbreakMissed`, `cycleHoursOn`, `cycleOffHoursAfterOnDutyHours`, `dailyDrivingHours`, `dailyOffDutyDeferralAddToDay2Consecutive`, `dailyOffDutyDeferralNotPartMandatory`, `dailyOffDutyDeferralTwoDayDrivingLimit`, `dailyOffDutyDeferralTwoDayOffDuty`, `dailyOffDutyNonResetHours`, `dailyOffDutyTotalHours`, `dailyOnDutyHours`, `mandatory24HoursOffDuty`, `restbreakMissed`, `shiftDrivingHours`, `shiftHours`, `shiftOnDutyHours`, `unsubmittedLogs`"""

    violation_start_time: Annotated[str, pydantic.Field(alias="violationStartTime")]
    r"""The start time of the violation in RFC 3339 format."""
