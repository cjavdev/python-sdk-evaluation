"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .assetpatch import AssetPatch, AssetPatchTypedDict
from .inline_response_200 import InlineResponse200, InlineResponse200TypedDict
from .standarderrorresponse import StandardErrorResponse, StandardErrorResponseTypedDict
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class PatchIndustrialAssetRequestTypedDict(TypedDict):
    id: str
    r"""Id of the asset to be updated"""
    asset_patch: NotRequired[AssetPatchTypedDict]
    r"""The updated asset fields"""


class PatchIndustrialAssetRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Id of the asset to be updated"""

    asset_patch: Annotated[
        Optional[AssetPatch],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
    r"""The updated asset fields"""


PatchIndustrialAssetResponseTypedDict = TypeAliasType(
    "PatchIndustrialAssetResponseTypedDict",
    Union[InlineResponse200TypedDict, StandardErrorResponseTypedDict],
)


PatchIndustrialAssetResponse = TypeAliasType(
    "PatchIndustrialAssetResponse", Union[InlineResponse200, StandardErrorResponse]
)
