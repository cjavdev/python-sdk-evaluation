"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .tripsgettripsbadrequesterrorresponsebody import (
    TripsGetTripsBadRequestErrorResponseBody,
    TripsGetTripsBadRequestErrorResponseBodyTypedDict,
)
from .tripsgettripsresponsebody import (
    TripsGetTripsResponseBody,
    TripsGetTripsResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class QueryParamCompletionStatus(str, Enum):
    r"""Filters trips based on a specific completion status  Valid values: `inProgress`, `completed`, `all`"""

    IN_PROGRESS = "inProgress"
    COMPLETED = "completed"
    ALL = "all"


class QueryParamQueryBy(str, Enum):
    r"""Decide which timestamp the `startTime` and `endTime` are compared to.  Valid values: `updatedAtTime`, `tripStartTime`"""

    UPDATED_AT_TIME = "updatedAtTime"
    TRIP_START_TIME = "tripStartTime"


class GetTripsRequestTypedDict(TypedDict):
    start_time: str
    r"""RFC 3339 timestamp that indicates when to begin receiving data. Value is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter."""
    ids: List[str]
    r"""Comma-separated list of asset IDs. Include up to 50 asset IDs."""
    include_asset: NotRequired[bool]
    r"""Indicates whether or not to return expanded “asset” data"""
    completion_status: NotRequired[QueryParamCompletionStatus]
    r"""Filters trips based on a specific completion status  Valid values: `inProgress`, `completed`, `all`"""
    end_time: NotRequired[str]
    r"""RFC 3339 timestamp which is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter. If not provided then the endpoint behaves as an unending feed of changes."""
    query_by: NotRequired[QueryParamQueryBy]
    r"""Decide which timestamp the `startTime` and `endTime` are compared to.  Valid values: `updatedAtTime`, `tripStartTime`"""
    after: NotRequired[str]
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""


class GetTripsRequest(BaseModel):
    start_time: Annotated[
        str,
        pydantic.Field(alias="startTime"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""RFC 3339 timestamp that indicates when to begin receiving data. Value is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter."""

    ids: Annotated[
        List[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=False))
    ]
    r"""Comma-separated list of asset IDs. Include up to 50 asset IDs."""

    include_asset: Annotated[
        Optional[bool],
        pydantic.Field(alias="includeAsset"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False
    r"""Indicates whether or not to return expanded “asset” data"""

    completion_status: Annotated[
        Optional[QueryParamCompletionStatus],
        pydantic.Field(alias="completionStatus"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = QueryParamCompletionStatus.ALL
    r"""Filters trips based on a specific completion status  Valid values: `inProgress`, `completed`, `all`"""

    end_time: Annotated[
        Optional[str],
        pydantic.Field(alias="endTime"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""RFC 3339 timestamp which is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter. If not provided then the endpoint behaves as an unending feed of changes."""

    query_by: Annotated[
        Optional[QueryParamQueryBy],
        pydantic.Field(alias="queryBy"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = QueryParamQueryBy.UPDATED_AT_TIME
    r"""Decide which timestamp the `startTime` and `endTime` are compared to.  Valid values: `updatedAtTime`, `tripStartTime`"""

    after: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""


GetTripsResponseTypedDict = TypeAliasType(
    "GetTripsResponseTypedDict",
    Union[
        TripsGetTripsResponseBodyTypedDict,
        TripsGetTripsBadRequestErrorResponseBodyTypedDict,
    ],
)


GetTripsResponse = TypeAliasType(
    "GetTripsResponse",
    Union[TripsGetTripsResponseBody, TripsGetTripsBadRequestErrorResponseBody],
)
