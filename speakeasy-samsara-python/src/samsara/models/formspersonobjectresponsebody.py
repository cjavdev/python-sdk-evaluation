"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .formspolymorphicuserobjectresponsebody import (
    FormsPolymorphicUserObjectResponseBody,
    FormsPolymorphicUserObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FormsPersonObjectResponseBodyEntryType(str, Enum):
    r"""The type of entry for the person.  Valid values: `tracked`, `untracked`"""

    TRACKED = "tracked"
    UNTRACKED = "untracked"


class FormsPersonObjectResponseBodyTypedDict(TypedDict):
    r"""Tracked or untracked (i.e. manually entered) person object."""

    entry_type: FormsPersonObjectResponseBodyEntryType
    r"""The type of entry for the person.  Valid values: `tracked`, `untracked`"""
    name: NotRequired[str]
    r"""Name of an untracked (i.e. manually entered) person."""
    polymorphic_user_id: NotRequired[FormsPolymorphicUserObjectResponseBodyTypedDict]
    r"""User or driver object."""


class FormsPersonObjectResponseBody(BaseModel):
    r"""Tracked or untracked (i.e. manually entered) person object."""

    entry_type: Annotated[
        FormsPersonObjectResponseBodyEntryType, pydantic.Field(alias="entryType")
    ]
    r"""The type of entry for the person.  Valid values: `tracked`, `untracked`"""

    name: Optional[str] = None
    r"""Name of an untracked (i.e. manually entered) person."""

    polymorphic_user_id: Annotated[
        Optional[FormsPolymorphicUserObjectResponseBody],
        pydantic.Field(alias="polymorphicUserId"),
    ] = None
    r"""User or driver object."""
