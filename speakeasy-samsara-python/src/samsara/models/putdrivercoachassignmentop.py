"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .drivercoachassignmentsputdrivercoachassignmentbadrequesterrorresponsebody import (
    DriverCoachAssignmentsPutDriverCoachAssignmentBadRequestErrorResponseBody,
    DriverCoachAssignmentsPutDriverCoachAssignmentBadRequestErrorResponseBodyTypedDict,
)
from .drivercoachassignmentsputdrivercoachassignmentresponsebody import (
    DriverCoachAssignmentsPutDriverCoachAssignmentResponseBody,
    DriverCoachAssignmentsPutDriverCoachAssignmentResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class PutDriverCoachAssignmentRequestTypedDict(TypedDict):
    driver_id: str
    r"""Required string ID of the driver. This is a unique Samsara ID of a driver."""
    coach_id: NotRequired[str]
    r"""Optional string ID of the coach. This is a unique Samsara user ID. If not provided, existing coach assignment will be removed."""


class PutDriverCoachAssignmentRequest(BaseModel):
    driver_id: Annotated[
        str,
        pydantic.Field(alias="driverId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Required string ID of the driver. This is a unique Samsara ID of a driver."""

    coach_id: Annotated[
        Optional[str],
        pydantic.Field(alias="coachId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Optional string ID of the coach. This is a unique Samsara user ID. If not provided, existing coach assignment will be removed."""


PutDriverCoachAssignmentResponseTypedDict = TypeAliasType(
    "PutDriverCoachAssignmentResponseTypedDict",
    Union[
        DriverCoachAssignmentsPutDriverCoachAssignmentResponseBodyTypedDict,
        DriverCoachAssignmentsPutDriverCoachAssignmentBadRequestErrorResponseBodyTypedDict,
    ],
)


PutDriverCoachAssignmentResponse = TypeAliasType(
    "PutDriverCoachAssignmentResponse",
    Union[
        DriverCoachAssignmentsPutDriverCoachAssignmentResponseBody,
        DriverCoachAssignmentsPutDriverCoachAssignmentBadRequestErrorResponseBody,
    ],
)
