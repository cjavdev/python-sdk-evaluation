"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .formsselectoptionobjectresponsebody import (
    FormsSelectOptionObjectResponseBody,
    FormsSelectOptionObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AllowedAssetTypes(str, Enum):
    r"""Valid values: `Vehicle`, `Trailer`, `Equipment`, `UnpoweredAsset`"""

    VEHICLE = "Vehicle"
    TRAILER = "Trailer"
    EQUIPMENT = "Equipment"
    UNPOWERED_ASSET = "UnpoweredAsset"


class AllowedDateTimeValueType(str, Enum):
    r"""Type of date/time entry allowed for this question. Only present for datetime fields.  Valid values: `datetime`, `date`, `time`"""

    DATETIME = "datetime"
    DATE = "date"
    TIME = "time"


class FormsFieldDefinitionObjectResponseBodyType(str, Enum):
    r"""Type of the field.  Valid values: `number`, `text`, `multiple_choice`, `check_boxes`, `media`, `datetime`, `signature`, `asset`, `person`, `geofence`, `instruction`, `media_instruction`"""

    NUMBER = "number"
    TEXT = "text"
    MULTIPLE_CHOICE = "multiple_choice"
    CHECK_BOXES = "check_boxes"
    MEDIA = "media"
    DATETIME = "datetime"
    SIGNATURE = "signature"
    ASSET = "asset"
    PERSON = "person"
    GEOFENCE = "geofence"
    INSTRUCTION = "instruction"
    MEDIA_INSTRUCTION = "media_instruction"


class FormsFieldDefinitionObjectResponseBodyTypedDict(TypedDict):
    r"""Forms field definition object."""

    id: str
    r"""Identifier of the field."""
    is_required: bool
    r"""Indicates whether the form field is required to be filled out by the user."""
    label: str
    r"""Label of the field."""
    type: FormsFieldDefinitionObjectResponseBodyType
    r"""Type of the field.  Valid values: `number`, `text`, `multiple_choice`, `check_boxes`, `media`, `datetime`, `signature`, `asset`, `person`, `geofence`, `instruction`, `media_instruction`"""
    allow_manual_entry: NotRequired[bool]
    r"""Indicates whether the field allows manual entry of a person. Only present for person fields."""
    allowed_asset_types: NotRequired[List[AllowedAssetTypes]]
    r"""List of allowed asset types that can be selected for this field. Only present for asset fields."""
    allowed_date_time_value_type: NotRequired[AllowedDateTimeValueType]
    r"""Type of date/time entry allowed for this question. Only present for datetime fields.  Valid values: `datetime`, `date`, `time`"""
    filter_by_current_driver_tags: NotRequired[bool]
    r"""Indicates whether the person search filters by the current logged in worker's tags. Only present for person fields."""
    filter_by_role_ids: NotRequired[List[str]]
    r"""List of role IDs to filter org users by, representing which roles are selectable people for this field. Only present for person fields."""
    include_drivers: NotRequired[bool]
    r"""Indicates whether the field includes drivers as selectable people. Only present for person fields."""
    include_users: NotRequired[bool]
    r"""Indicates whether the field includes users as selectable people. Only present for person fields."""
    legal_text: NotRequired[str]
    r"""Legal text for the field. Only present for signature fields."""
    num_decimal_places: NotRequired[int]
    r"""Number of decimal places allowed. Only present for number fields."""
    options: NotRequired[List[FormsSelectOptionObjectResponseBodyTypedDict]]
    r"""List of select options for checkboxes or multiple choice fields."""
    question_weight: NotRequired[int]
    r"""The maximum possible score weight for this field. For multiple choice fields, this number is the highest option score weight of the given options. For checkboxes fields, this number is the sum of the score weights for all scored options. Only present for multiple choice or checkboxes fields that have scoring."""


class FormsFieldDefinitionObjectResponseBody(BaseModel):
    r"""Forms field definition object."""

    id: str
    r"""Identifier of the field."""

    is_required: Annotated[bool, pydantic.Field(alias="isRequired")]
    r"""Indicates whether the form field is required to be filled out by the user."""

    label: str
    r"""Label of the field."""

    type: FormsFieldDefinitionObjectResponseBodyType
    r"""Type of the field.  Valid values: `number`, `text`, `multiple_choice`, `check_boxes`, `media`, `datetime`, `signature`, `asset`, `person`, `geofence`, `instruction`, `media_instruction`"""

    allow_manual_entry: Annotated[
        Optional[bool], pydantic.Field(alias="allowManualEntry")
    ] = None
    r"""Indicates whether the field allows manual entry of a person. Only present for person fields."""

    allowed_asset_types: Annotated[
        Optional[List[AllowedAssetTypes]], pydantic.Field(alias="allowedAssetTypes")
    ] = None
    r"""List of allowed asset types that can be selected for this field. Only present for asset fields."""

    allowed_date_time_value_type: Annotated[
        Optional[AllowedDateTimeValueType],
        pydantic.Field(alias="allowedDateTimeValueType"),
    ] = None
    r"""Type of date/time entry allowed for this question. Only present for datetime fields.  Valid values: `datetime`, `date`, `time`"""

    filter_by_current_driver_tags: Annotated[
        Optional[bool], pydantic.Field(alias="filterByCurrentDriverTags")
    ] = None
    r"""Indicates whether the person search filters by the current logged in worker's tags. Only present for person fields."""

    filter_by_role_ids: Annotated[
        Optional[List[str]], pydantic.Field(alias="filterByRoleIds")
    ] = None
    r"""List of role IDs to filter org users by, representing which roles are selectable people for this field. Only present for person fields."""

    include_drivers: Annotated[
        Optional[bool], pydantic.Field(alias="includeDrivers")
    ] = None
    r"""Indicates whether the field includes drivers as selectable people. Only present for person fields."""

    include_users: Annotated[Optional[bool], pydantic.Field(alias="includeUsers")] = (
        None
    )
    r"""Indicates whether the field includes users as selectable people. Only present for person fields."""

    legal_text: Annotated[Optional[str], pydantic.Field(alias="legalText")] = None
    r"""Legal text for the field. Only present for signature fields."""

    num_decimal_places: Annotated[
        Optional[int], pydantic.Field(alias="numDecimalPlaces")
    ] = None
    r"""Number of decimal places allowed. Only present for number fields."""

    options: Optional[List[FormsSelectOptionObjectResponseBody]] = None
    r"""List of select options for checkboxes or multiple choice fields."""

    question_weight: Annotated[
        Optional[int], pydantic.Field(alias="questionWeight")
    ] = None
    r"""The maximum possible score weight for this field. For multiple choice fields, this number is the highest option score weight of the given options. For checkboxes fields, this number is the sum of the score weights for all scored options. Only present for multiple choice or checkboxes fields that have scoring."""
