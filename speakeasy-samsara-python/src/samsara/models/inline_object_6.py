"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ._v1_sensors_history_series import (
    V1SensorsHistorySeries,
    V1SensorsHistorySeriesTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FillMissing(str, Enum):
    WITH_NULL = "withNull"
    WITH_PREVIOUS = "withPrevious"


class InlineObject6TypedDict(TypedDict):
    end_ms: int
    r"""End of the time range, specified in milliseconds UNIX time."""
    series: List[V1SensorsHistorySeriesTypedDict]
    start_ms: int
    r"""Beginning of the time range, specified in milliseconds UNIX time."""
    step_ms: int
    r"""Time resolution for which data should be returned, in milliseconds. Specifying 3600000 will return data at hour intervals."""
    fill_missing: NotRequired[FillMissing]


class InlineObject6(BaseModel):
    end_ms: Annotated[int, pydantic.Field(alias="endMs")]
    r"""End of the time range, specified in milliseconds UNIX time."""

    series: List[V1SensorsHistorySeries]

    start_ms: Annotated[int, pydantic.Field(alias="startMs")]
    r"""Beginning of the time range, specified in milliseconds UNIX time."""

    step_ms: Annotated[int, pydantic.Field(alias="stepMs")]
    r"""Time resolution for which data should be returned, in milliseconds. Specifying 3600000 will return data at hour intervals."""

    fill_missing: Annotated[
        Optional[FillMissing], pydantic.Field(alias="fillMissing")
    ] = FillMissing.WITH_NULL
