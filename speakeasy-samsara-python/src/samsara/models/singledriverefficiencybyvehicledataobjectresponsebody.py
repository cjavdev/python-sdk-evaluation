"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .driverefficiencydataobjectresponsebody import (
    DriverEfficiencyDataObjectResponseBody,
    DriverEfficiencyDataObjectResponseBodyTypedDict,
)
from .driverefficiencydifficultyscoredataobjectresponsebody import (
    DriverEfficiencyDifficultyScoreDataObjectResponseBody,
    DriverEfficiencyDifficultyScoreDataObjectResponseBodyTypedDict,
)
from .driverefficiencypercentagedataobjectresponsebody import (
    DriverEfficiencyPercentageDataObjectResponseBody,
    DriverEfficiencyPercentageDataObjectResponseBodyTypedDict,
)
from .driverefficiencyrawdataobjectresponsebody import (
    DriverEfficiencyRawDataObjectResponseBody,
    DriverEfficiencyRawDataObjectResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SingleDriverEfficiencyByVehicleDataObjectResponseBodyTypedDict(TypedDict):
    r"""singleDriverEfficiencyByVehicleDataObject"""

    vehicle_id: str
    r"""ID of the vehicle."""
    difficulty_score: NotRequired[
        DriverEfficiencyDifficultyScoreDataObjectResponseBodyTypedDict
    ]
    r"""Difficulty score won't be available if there is no data to compute it against."""
    percentage_data: NotRequired[
        DriverEfficiencyPercentageDataObjectResponseBodyTypedDict
    ]
    r"""Driver Efficiency percentage data. This object is returned when the “percentage” format is specified in “dataFormats”."""
    raw_data: NotRequired[DriverEfficiencyRawDataObjectResponseBodyTypedDict]
    r"""Driver Efficiency raw data. This object is returned when the “raw” format is specified in “dataFormats”."""
    score_data: NotRequired[DriverEfficiencyDataObjectResponseBodyTypedDict]
    r"""Driver Efficiency score data. This object is returned by default or when the “score” format is specified in “dataFormats”."""


class SingleDriverEfficiencyByVehicleDataObjectResponseBody(BaseModel):
    r"""singleDriverEfficiencyByVehicleDataObject"""

    vehicle_id: Annotated[str, pydantic.Field(alias="vehicleId")]
    r"""ID of the vehicle."""

    difficulty_score: Annotated[
        Optional[DriverEfficiencyDifficultyScoreDataObjectResponseBody],
        pydantic.Field(alias="difficultyScore"),
    ] = None
    r"""Difficulty score won't be available if there is no data to compute it against."""

    percentage_data: Annotated[
        Optional[DriverEfficiencyPercentageDataObjectResponseBody],
        pydantic.Field(alias="percentageData"),
    ] = None
    r"""Driver Efficiency percentage data. This object is returned when the “percentage” format is specified in “dataFormats”."""

    raw_data: Annotated[
        Optional[DriverEfficiencyRawDataObjectResponseBody],
        pydantic.Field(alias="rawData"),
    ] = None
    r"""Driver Efficiency raw data. This object is returned when the “raw” format is specified in “dataFormats”."""

    score_data: Annotated[
        Optional[DriverEfficiencyDataObjectResponseBody],
        pydantic.Field(alias="scoreData"),
    ] = None
    r"""Driver Efficiency score data. This object is returned by default or when the “score” format is specified in “dataFormats”."""
