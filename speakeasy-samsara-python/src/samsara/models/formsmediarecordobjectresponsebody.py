"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ProcessingStatus(str, Enum):
    r"""Status of the media record.  Valid values: `unknown`, `processing`, `finished`"""

    UNKNOWN = "unknown"
    PROCESSING = "processing"
    FINISHED = "finished"


class FormsMediaRecordObjectResponseBodyTypedDict(TypedDict):
    r"""Forms media record object."""

    id: str
    r"""ID of the media record."""
    processing_status: ProcessingStatus
    r"""Status of the media record.  Valid values: `unknown`, `processing`, `finished`"""
    url: NotRequired[str]
    r"""URL containing a link to associated media content. Included if 'processingStatus' is 'finished'."""
    url_expires_at: NotRequired[datetime]
    r"""Expiration time of the media record 'url'. UTC timestamp in RFC 3339 format."""


class FormsMediaRecordObjectResponseBody(BaseModel):
    r"""Forms media record object."""

    id: str
    r"""ID of the media record."""

    processing_status: Annotated[
        ProcessingStatus, pydantic.Field(alias="processingStatus")
    ]
    r"""Status of the media record.  Valid values: `unknown`, `processing`, `finished`"""

    url: Optional[str] = None
    r"""URL containing a link to associated media content. Included if 'processingStatus' is 'finished'."""

    url_expires_at: Annotated[
        Optional[datetime], pydantic.Field(alias="urlExpiresAt")
    ] = None
    r"""Expiration time of the media record 'url'. UTC timestamp in RFC 3339 format."""
