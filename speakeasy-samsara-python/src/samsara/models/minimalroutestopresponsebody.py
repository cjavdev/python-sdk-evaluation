"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class MinimalRouteStopResponseBodyState(str, Enum):
    r"""The current state of the route stop.  Valid values: `unassigned`, `scheduled`, `en route`, `skipped`, `arrived`, `departed`"""

    UNASSIGNED = "unassigned"
    SCHEDULED = "scheduled"
    EN_ROUTE = "en route"
    SKIPPED = "skipped"
    ARRIVED = "arrived"
    DEPARTED = "departed"


class MinimalRouteStopResponseBodyTypedDict(TypedDict):
    r"""A single route stop for a route."""

    id: str
    r"""Unique identifier for the route stop."""
    state: MinimalRouteStopResponseBodyState
    r"""The current state of the route stop.  Valid values: `unassigned`, `scheduled`, `en route`, `skipped`, `arrived`, `departed`"""
    actual_arrival_time: NotRequired[datetime]
    r"""Actual arrival time, if it exists, for the route stop in RFC 3339 format."""
    actual_departure_time: NotRequired[datetime]
    r"""Actual departure time, if it exists, for the route stop in RFC 3339 format."""
    en_route_time: NotRequired[datetime]
    r"""The time the stop became en-route, in RFC 3339 format."""
    eta: NotRequired[datetime]
    r"""Estimated time of arrival, if this stop is currently en-route, in RFC 3339 format."""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    live_sharing_url: NotRequired[str]
    r"""The shareable url of the stop's current status."""
    skipped_time: NotRequired[datetime]
    r"""Skipped time, if it exists, for the route stop in RFC 3339 format."""


class MinimalRouteStopResponseBody(BaseModel):
    r"""A single route stop for a route."""

    id: str
    r"""Unique identifier for the route stop."""

    state: MinimalRouteStopResponseBodyState
    r"""The current state of the route stop.  Valid values: `unassigned`, `scheduled`, `en route`, `skipped`, `arrived`, `departed`"""

    actual_arrival_time: Annotated[
        Optional[datetime], pydantic.Field(alias="actualArrivalTime")
    ] = None
    r"""Actual arrival time, if it exists, for the route stop in RFC 3339 format."""

    actual_departure_time: Annotated[
        Optional[datetime], pydantic.Field(alias="actualDepartureTime")
    ] = None
    r"""Actual departure time, if it exists, for the route stop in RFC 3339 format."""

    en_route_time: Annotated[
        Optional[datetime], pydantic.Field(alias="enRouteTime")
    ] = None
    r"""The time the stop became en-route, in RFC 3339 format."""

    eta: Optional[datetime] = None
    r"""Estimated time of arrival, if this stop is currently en-route, in RFC 3339 format."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    live_sharing_url: Annotated[
        Optional[str], pydantic.Field(alias="liveSharingUrl")
    ] = None
    r"""The shareable url of the stop's current status."""

    skipped_time: Annotated[Optional[datetime], pydantic.Field(alias="skippedTime")] = (
        None
    )
    r"""Skipped time, if it exists, for the route stop in RFC 3339 format."""
