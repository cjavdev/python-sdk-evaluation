"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .createdriverrequest_attributes import (
    CreateDriverRequestAttributes,
    CreateDriverRequestAttributesTypedDict,
)
from .drivercarriersettings import DriverCarrierSettings, DriverCarrierSettingsTypedDict
from .updatedriverrequest_hossetting import (
    UpdateDriverRequestHosSetting,
    UpdateDriverRequestHosSettingTypedDict,
)
from .usdriverrulesetoverride import (
    UsDriverRulesetOverride,
    UsDriverRulesetOverrideTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateDriverRequestDriverActivationStatus(str, Enum):
    r"""A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`."""

    ACTIVE = "active"
    DEACTIVATED = "deactivated"


class UpdateDriverRequestLocale(str, Enum):
    r"""Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`."""

    US = "us"
    AT = "at"
    BE = "be"
    CA = "ca"
    GB = "gb"
    FR = "fr"
    DE = "de"
    IE = "ie"
    IT = "it"
    LU = "lu"
    MX = "mx"
    NL = "nl"
    ES = "es"
    CH = "ch"
    PR = "pr"


class UpdateDriverRequestTypedDict(TypedDict):
    r"""Driver that should be updated."""

    attributes: NotRequired[List[CreateDriverRequestAttributesTypedDict]]
    carrier_settings: NotRequired[DriverCarrierSettingsTypedDict]
    r"""Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver."""
    current_id_card_code: NotRequired[str]
    r"""The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature."""
    deactivated_at_time: NotRequired[str]
    r"""The date and time this driver is considered to be deactivated in RFC 3339 format."""
    driver_activation_status: NotRequired[UpdateDriverRequestDriverActivationStatus]
    r"""A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`."""
    eld_adverse_weather_exemption_enabled: NotRequired[bool]
    r"""Flag indicating this driver may use Adverse Weather exemptions in ELD logs."""
    eld_big_day_exemption_enabled: NotRequired[bool]
    r"""Flag indicating this driver may use Big Day exemption in ELD logs."""
    eld_day_start_hour: NotRequired[int]
    r"""`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours."""
    eld_exempt: NotRequired[bool]
    r"""Flag indicating this driver is exempt from the Electronic Logging Mandate."""
    eld_exempt_reason: NotRequired[str]
    r"""Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt)."""
    eld_pc_enabled: NotRequired[bool]
    r"""Flag indicating this driver may select the Personal Conveyance duty status in ELD logs."""
    eld_ym_enabled: NotRequired[bool]
    r"""Flag indicating this driver may select the Yard Move duty status in ELD logs."""
    external_ids: NotRequired[Dict[str, str]]
    r"""The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object."""
    has_driving_features_hidden: NotRequired[bool]
    r"""A boolean indicating whether the driver has driving-related features hidden in the Driver App, including Vehicle selection, HOS, Routing, Team Driving, Documents, and Trip Logs. Default value is false if omitted. Note: only available to customers of Connected Forms."""
    hos_setting: NotRequired[UpdateDriverRequestHosSettingTypedDict]
    r"""Hos settings for a driver."""
    license_number: NotRequired[str]
    r"""Driver's state issued license number. The combination of this number and `licenseState` must be unique."""
    license_state: NotRequired[str]
    r"""Abbreviation of US state, Canadian province, or US territory that issued driver's license."""
    locale: NotRequired[UpdateDriverRequestLocale]
    r"""Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`."""
    name: NotRequired[str]
    r"""Driver's name."""
    notes: NotRequired[str]
    r"""Notes about the driver."""
    password: NotRequired[str]
    r"""Password that the driver can use to login to the Samsara driver app."""
    peer_group_tag_id: NotRequired[str]
    r"""The peer group tag id this driver belong to, leave blank to be in group with everyone, used for gamification."""
    phone: NotRequired[str]
    r"""Phone number of the driver."""
    static_assigned_vehicle_id: NotRequired[str]
    r"""ID of vehicle that the driver is permanently assigned to. (uncommon)."""
    tachograph_card_number: NotRequired[str]
    r"""Driver's assigned tachograph card number (Europe specific)"""
    tag_ids: NotRequired[List[str]]
    r"""IDs of tags the driver is associated with. If your access to the API is scoped by one or more tags, this field is required to pass in."""
    timezone: NotRequired[str]
    r"""Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html)."""
    us_driver_ruleset_override: NotRequired[UsDriverRulesetOverrideTypedDict]
    r"""US Driver Ruleset override for a given driver. If the driver is operating under a ruleset different from the organization default, the override is used. Updating this value only updates the override setting for this driver. Explicitly setting this field to `null` will delete driver's ruleset override. If the driver does not have an override ruleset set, the response will not include any usDriverRulesetOverride information."""
    username: NotRequired[str]
    r"""Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique."""
    vehicle_group_tag_id: NotRequired[str]
    r"""Tag ID which determines which vehicles a driver will see when selecting vehicles."""
    waiting_time_duty_status_enabled: NotRequired[bool]
    r"""Flag indicating this driver may select waiting time duty status in ELD logs"""


class UpdateDriverRequest(BaseModel):
    r"""Driver that should be updated."""

    attributes: Optional[List[CreateDriverRequestAttributes]] = None

    carrier_settings: Annotated[
        Optional[DriverCarrierSettings], pydantic.Field(alias="carrierSettings")
    ] = None
    r"""Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver."""

    current_id_card_code: Annotated[
        Optional[str], pydantic.Field(alias="currentIdCardCode")
    ] = None
    r"""The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature."""

    deactivated_at_time: Annotated[
        Optional[str], pydantic.Field(alias="deactivatedAtTime")
    ] = None
    r"""The date and time this driver is considered to be deactivated in RFC 3339 format."""

    driver_activation_status: Annotated[
        Optional[UpdateDriverRequestDriverActivationStatus],
        pydantic.Field(alias="driverActivationStatus"),
    ] = None
    r"""A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`."""

    eld_adverse_weather_exemption_enabled: Annotated[
        Optional[bool], pydantic.Field(alias="eldAdverseWeatherExemptionEnabled")
    ] = None
    r"""Flag indicating this driver may use Adverse Weather exemptions in ELD logs."""

    eld_big_day_exemption_enabled: Annotated[
        Optional[bool], pydantic.Field(alias="eldBigDayExemptionEnabled")
    ] = None
    r"""Flag indicating this driver may use Big Day exemption in ELD logs."""

    eld_day_start_hour: Annotated[
        Optional[int], pydantic.Field(alias="eldDayStartHour")
    ] = None
    r"""`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours."""

    eld_exempt: Annotated[Optional[bool], pydantic.Field(alias="eldExempt")] = None
    r"""Flag indicating this driver is exempt from the Electronic Logging Mandate."""

    eld_exempt_reason: Annotated[
        Optional[str], pydantic.Field(alias="eldExemptReason")
    ] = None
    r"""Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt)."""

    eld_pc_enabled: Annotated[Optional[bool], pydantic.Field(alias="eldPcEnabled")] = (
        None
    )
    r"""Flag indicating this driver may select the Personal Conveyance duty status in ELD logs."""

    eld_ym_enabled: Annotated[Optional[bool], pydantic.Field(alias="eldYmEnabled")] = (
        None
    )
    r"""Flag indicating this driver may select the Yard Move duty status in ELD logs."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object."""

    has_driving_features_hidden: Annotated[
        Optional[bool], pydantic.Field(alias="hasDrivingFeaturesHidden")
    ] = None
    r"""A boolean indicating whether the driver has driving-related features hidden in the Driver App, including Vehicle selection, HOS, Routing, Team Driving, Documents, and Trip Logs. Default value is false if omitted. Note: only available to customers of Connected Forms."""

    hos_setting: Annotated[
        Optional[UpdateDriverRequestHosSetting], pydantic.Field(alias="hosSetting")
    ] = None
    r"""Hos settings for a driver."""

    license_number: Annotated[Optional[str], pydantic.Field(alias="licenseNumber")] = (
        None
    )
    r"""Driver's state issued license number. The combination of this number and `licenseState` must be unique."""

    license_state: Annotated[Optional[str], pydantic.Field(alias="licenseState")] = None
    r"""Abbreviation of US state, Canadian province, or US territory that issued driver's license."""

    locale: Optional[UpdateDriverRequestLocale] = None
    r"""Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`."""

    name: Optional[str] = None
    r"""Driver's name."""

    notes: Optional[str] = None
    r"""Notes about the driver."""

    password: Optional[str] = None
    r"""Password that the driver can use to login to the Samsara driver app."""

    peer_group_tag_id: Annotated[
        Optional[str], pydantic.Field(alias="peerGroupTagId")
    ] = None
    r"""The peer group tag id this driver belong to, leave blank to be in group with everyone, used for gamification."""

    phone: Optional[str] = None
    r"""Phone number of the driver."""

    static_assigned_vehicle_id: Annotated[
        Optional[str], pydantic.Field(alias="staticAssignedVehicleId")
    ] = None
    r"""ID of vehicle that the driver is permanently assigned to. (uncommon)."""

    tachograph_card_number: Annotated[
        Optional[str], pydantic.Field(alias="tachographCardNumber")
    ] = None
    r"""Driver's assigned tachograph card number (Europe specific)"""

    tag_ids: Annotated[Optional[List[str]], pydantic.Field(alias="tagIds")] = None
    r"""IDs of tags the driver is associated with. If your access to the API is scoped by one or more tags, this field is required to pass in."""

    timezone: Optional[str] = None
    r"""Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html)."""

    us_driver_ruleset_override: Annotated[
        Optional[UsDriverRulesetOverride],
        pydantic.Field(alias="usDriverRulesetOverride"),
    ] = None
    r"""US Driver Ruleset override for a given driver. If the driver is operating under a ruleset different from the organization default, the override is used. Updating this value only updates the override setting for this driver. Explicitly setting this field to `null` will delete driver's ruleset override. If the driver does not have an override ruleset set, the response will not include any usDriverRulesetOverride information."""

    username: Optional[str] = None
    r"""Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique."""

    vehicle_group_tag_id: Annotated[
        Optional[str], pydantic.Field(alias="vehicleGroupTagId")
    ] = None
    r"""Tag ID which determines which vehicles a driver will see when selecting vehicles."""

    waiting_time_duty_status_enabled: Annotated[
        Optional[bool], pydantic.Field(alias="waitingTimeDutyStatusEnabled")
    ] = None
    r"""Flag indicating this driver may select waiting time duty status in ELD logs"""
