"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class DefectResolvedByType(str, Enum):
    r"""Indicates whether this defect was resolved by a `driver` or a `mechanic`."""

    DRIVER = "driver"
    MECHANIC = "mechanic"


class DefectResolvedByTypedDict(TypedDict):
    r"""The person who resolved this defect.  Will not be returned if the defect is unresolved."""

    id: NotRequired[str]
    r"""ID of the entity that resolved this defect. If the defect was resolved by a driver, this will be a Samsara Driver ID. If the defect was resolved by a mechanic, this will be the Samsara Dashboard User ID of the mechanic."""
    name: NotRequired[str]
    r"""Name of the person who resolved this defect."""
    type: NotRequired[DefectResolvedByType]
    r"""Indicates whether this defect was resolved by a `driver` or a `mechanic`."""


class DefectResolvedBy(BaseModel):
    r"""The person who resolved this defect.  Will not be returned if the defect is unresolved."""

    id: Optional[str] = None
    r"""ID of the entity that resolved this defect. If the defect was resolved by a driver, this will be a Samsara Driver ID. If the defect was resolved by a mechanic, this will be the Samsara Dashboard User ID of the mechanic."""

    name: Optional[str] = None
    r"""Name of the person who resolved this defect."""

    type: Optional[DefectResolvedByType] = None
    r"""Indicates whether this defect was resolved by a `driver` or a `mechanic`."""
