"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1assetsreefer_reeferstats import (
    V1AssetsReeferReeferStats,
    V1AssetsReeferReeferStatsTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1AssetsReeferTypedDict(TypedDict):
    r"""Reefer-specific details"""

    asset_type: NotRequired[str]
    r"""Asset type"""
    id: NotRequired[int]
    r"""Asset ID"""
    name: NotRequired[str]
    r"""Asset name"""
    reefer_stats: NotRequired[V1AssetsReeferReeferStatsTypedDict]
    r"""Contains all the state changes of the reefer for the included stat types. Each state change is recorded independently, so the number of records in each array may differ depending on when that stat changed state. Stat types with a continuous value (such as temperature) will be recorded at different rates depending on the reefer, but generally readings have a frequency on the order of seconds."""


class V1AssetsReefer(BaseModel):
    r"""Reefer-specific details"""

    asset_type: Annotated[Optional[str], pydantic.Field(alias="assetType")] = None
    r"""Asset type"""

    id: Optional[int] = None
    r"""Asset ID"""

    name: Optional[str] = None
    r"""Asset name"""

    reefer_stats: Annotated[
        Optional[V1AssetsReeferReeferStats], pydantic.Field(alias="reeferStats")
    ] = None
    r"""Contains all the state changes of the reefer for the included stat types. Each state change is recorded independently, so the number of records in each array may differ depending on when that stat changed state. Stat types with a continuous value (such as temperature) will be recorded at different rates depending on the reefer, but generally readings have a frequency on the order of seconds."""
