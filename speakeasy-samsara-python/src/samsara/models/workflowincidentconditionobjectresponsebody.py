"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .workflowincidentdetailsobjectresponsebody import (
    WorkflowIncidentDetailsObjectResponseBody,
    WorkflowIncidentDetailsObjectResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing_extensions import Annotated, TypedDict


class WorkflowIncidentConditionObjectResponseBodyTypedDict(TypedDict):
    r"""Object representing the granular details of the condition. These details will vary depending on the condition."""

    description: str
    r"""Descriptive name of the condition."""
    details: WorkflowIncidentDetailsObjectResponseBodyTypedDict
    r"""Object representing the granular details of the condition. These details will vary depending on the condition."""
    trigger_id: int
    r"""Unique identifier describing the type of condition being represented."""


class WorkflowIncidentConditionObjectResponseBody(BaseModel):
    r"""Object representing the granular details of the condition. These details will vary depending on the condition."""

    description: str
    r"""Descriptive name of the condition."""

    details: WorkflowIncidentDetailsObjectResponseBody
    r"""Object representing the granular details of the condition. These details will vary depending on the condition."""

    trigger_id: Annotated[int, pydantic.Field(alias="triggerId")]
    r"""Unique identifier describing the type of condition being represented."""
