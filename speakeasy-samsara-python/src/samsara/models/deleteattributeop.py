"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .standarderrorresponse import StandardErrorResponse, StandardErrorResponseTypedDict
from enum import Enum
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class DeleteAttributeQueryParamEntityType(str, Enum):
    r"""Denotes the type of entity, driver or asset."""

    DRIVER = "driver"
    ASSET = "asset"


class DeleteAttributeRequestTypedDict(TypedDict):
    id: str
    r"""Samsara-provided UUID of the attribute."""
    entity_type: DeleteAttributeQueryParamEntityType
    r"""Denotes the type of entity, driver or asset."""


class DeleteAttributeRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Samsara-provided UUID of the attribute."""

    entity_type: Annotated[
        DeleteAttributeQueryParamEntityType,
        pydantic.Field(alias="entityType"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Denotes the type of entity, driver or asset."""


DeleteAttributeResponseTypedDict = TypeAliasType(
    "DeleteAttributeResponseTypedDict", Union[StandardErrorResponseTypedDict, str]
)


DeleteAttributeResponse = TypeAliasType(
    "DeleteAttributeResponse", Union[StandardErrorResponse, str]
)
