"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1TemperatureResponseSensorsTypedDict(TypedDict):
    ambient_temperature: NotRequired[int]
    r"""Currently reported ambient temperature in millidegrees celsius."""
    ambient_temperature_time: NotRequired[str]
    r"""The timestamp of reported ambient temperature, specified in RFC 3339 time."""
    id: NotRequired[int]
    r"""ID of the sensor."""
    name: NotRequired[str]
    r"""Name of the sensor."""
    probe_temperature: NotRequired[int]
    r"""Currently reported probe temperature in millidegrees celsius. If no probe is connected, this parameter will not be reported."""
    probe_temperature_time: NotRequired[str]
    r"""The timestamp of reported probe temperature, specified in RFC 3339 time."""
    trailer_id: NotRequired[int]
    r"""ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported."""
    vehicle_id: NotRequired[int]
    r"""ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported."""


class V1TemperatureResponseSensors(BaseModel):
    ambient_temperature: Annotated[
        Optional[int], pydantic.Field(alias="ambientTemperature")
    ] = None
    r"""Currently reported ambient temperature in millidegrees celsius."""

    ambient_temperature_time: Annotated[
        Optional[str], pydantic.Field(alias="ambientTemperatureTime")
    ] = None
    r"""The timestamp of reported ambient temperature, specified in RFC 3339 time."""

    id: Optional[int] = None
    r"""ID of the sensor."""

    name: Optional[str] = None
    r"""Name of the sensor."""

    probe_temperature: Annotated[
        Optional[int], pydantic.Field(alias="probeTemperature")
    ] = None
    r"""Currently reported probe temperature in millidegrees celsius. If no probe is connected, this parameter will not be reported."""

    probe_temperature_time: Annotated[
        Optional[str], pydantic.Field(alias="probeTemperatureTime")
    ] = None
    r"""The timestamp of reported probe temperature, specified in RFC 3339 time."""

    trailer_id: Annotated[Optional[int], pydantic.Field(alias="trailerId")] = None
    r"""ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported."""

    vehicle_id: Annotated[Optional[int], pydantic.Field(alias="vehicleId")] = None
    r"""ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported."""
