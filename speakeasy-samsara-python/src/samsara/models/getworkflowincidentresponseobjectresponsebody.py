"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .workflowincidentconditionobjectresponsebody import (
    WorkflowIncidentConditionObjectResponseBody,
    WorkflowIncidentConditionObjectResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetWorkflowIncidentResponseObjectResponseBodyTypedDict(TypedDict):
    conditions: List[WorkflowIncidentConditionObjectResponseBodyTypedDict]
    r"""An array of conditions associated with the incident."""
    configuration_id: str
    r"""Unique ID of the alert configuration."""
    happened_at_time: str
    r"""Time and date that the alert incident occurred in RFC 3339 format."""
    incident_url: str
    r"""Url of alert incident in the cloud dashboard."""
    is_resolved: bool
    r"""Indicates whether the incident is resolved or not."""
    updated_at_time: str
    r"""Time and date that the alert incident updated in RFC 3339 format."""
    resolved_at_time: NotRequired[str]
    r"""Time and date that the alert incident was resolved in RFC 3339 format."""


class GetWorkflowIncidentResponseObjectResponseBody(BaseModel):
    conditions: List[WorkflowIncidentConditionObjectResponseBody]
    r"""An array of conditions associated with the incident."""

    configuration_id: Annotated[str, pydantic.Field(alias="configurationId")]
    r"""Unique ID of the alert configuration."""

    happened_at_time: Annotated[str, pydantic.Field(alias="happenedAtTime")]
    r"""Time and date that the alert incident occurred in RFC 3339 format."""

    incident_url: Annotated[str, pydantic.Field(alias="incidentUrl")]
    r"""Url of alert incident in the cloud dashboard."""

    is_resolved: Annotated[bool, pydantic.Field(alias="isResolved")]
    r"""Indicates whether the incident is resolved or not."""

    updated_at_time: Annotated[str, pydantic.Field(alias="updatedAtTime")]
    r"""Time and date that the alert incident updated in RFC 3339 format."""

    resolved_at_time: Annotated[
        Optional[str], pydantic.Field(alias="resolvedAtTime")
    ] = None
    r"""Time and date that the alert incident was resolved in RFC 3339 format."""
