"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1vehiclesafetyscoreresponse import (
    V1VehicleSafetyScoreResponse,
    V1VehicleSafetyScoreResponseTypedDict,
)
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class V1getVehicleSafetyScoreRequestTypedDict(TypedDict):
    vehicle_id: int
    r"""ID of the vehicle. Must contain only digits 0-9."""
    start_ms: int
    r"""Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."""
    end_ms: int
    r"""Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."""


class V1getVehicleSafetyScoreRequest(BaseModel):
    vehicle_id: Annotated[
        int,
        pydantic.Field(alias="vehicleId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""ID of the vehicle. Must contain only digits 0-9."""

    start_ms: Annotated[
        int,
        pydantic.Field(alias="startMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."""

    end_ms: Annotated[
        int,
        pydantic.Field(alias="endMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour."""


V1getVehicleSafetyScoreResponseTypedDict = TypeAliasType(
    "V1getVehicleSafetyScoreResponseTypedDict",
    Union[V1VehicleSafetyScoreResponseTypedDict, str],
)


V1getVehicleSafetyScoreResponse = TypeAliasType(
    "V1getVehicleSafetyScoreResponse", Union[V1VehicleSafetyScoreResponse, str]
)
