"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .hosdailylogsgethosdailylogsbadrequesterrorresponsebody import (
    HosDailyLogsGetHosDailyLogsBadRequestErrorResponseBody,
    HosDailyLogsGetHosDailyLogsBadRequestErrorResponseBodyTypedDict,
)
from .hosdailylogsgethosdailylogsresponsebody import (
    HosDailyLogsGetHosDailyLogsResponseBody,
    HosDailyLogsGetHosDailyLogsResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetHosDailyLogsQueryParamDriverActivationStatus(str, Enum):
    r"""If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"""

    ACTIVE = "active"
    DEACTIVATED = "deactivated"


class Expand(str, Enum):
    r"""Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.

    Valid value: `vehicle`  Valid values: `vehicle`
    """

    VEHICLE = "vehicle"


class GetHosDailyLogsRequestTypedDict(TypedDict):
    driver_ids: NotRequired[List[str]]
    r"""A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"""
    start_date: NotRequired[str]
    r"""A start date in YYYY-MM-DD. This is a date only without an associated time. Example: `2019-06-13`. This is a required field"""
    end_date: NotRequired[str]
    r"""An end date in YYYY-MM-DD. This is a date only without an associated time. Must be greater than or equal to the start date. Example: `2019-07-21`. This is a required field"""
    tag_ids: NotRequired[str]
    r"""A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"""
    parent_tag_ids: NotRequired[str]
    r"""A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"""
    driver_activation_status: NotRequired[
        GetHosDailyLogsQueryParamDriverActivationStatus
    ]
    r"""If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"""
    after: NotRequired[str]
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""
    expand: NotRequired[Expand]
    r"""Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.

    Valid value: `vehicle`  Valid values: `vehicle`
    """


class GetHosDailyLogsRequest(BaseModel):
    driver_ids: Annotated[
        Optional[List[str]],
        pydantic.Field(alias="driverIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"""

    start_date: Annotated[
        Optional[str],
        pydantic.Field(alias="startDate"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A start date in YYYY-MM-DD. This is a date only without an associated time. Example: `2019-06-13`. This is a required field"""

    end_date: Annotated[
        Optional[str],
        pydantic.Field(alias="endDate"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""An end date in YYYY-MM-DD. This is a date only without an associated time. Must be greater than or equal to the start date. Example: `2019-07-21`. This is a required field"""

    tag_ids: Annotated[
        Optional[str],
        pydantic.Field(alias="tagIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`"""

    parent_tag_ids: Annotated[
        Optional[str],
        pydantic.Field(alias="parentTagIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"""

    driver_activation_status: Annotated[
        Optional[GetHosDailyLogsQueryParamDriverActivationStatus],
        pydantic.Field(alias="driverActivationStatus"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = GetHosDailyLogsQueryParamDriverActivationStatus.ACTIVE
    r"""If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"""

    after: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""

    expand: Annotated[
        Optional[Expand],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.

    Valid value: `vehicle`  Valid values: `vehicle`
    """


GetHosDailyLogsResponseTypedDict = TypeAliasType(
    "GetHosDailyLogsResponseTypedDict",
    Union[
        HosDailyLogsGetHosDailyLogsResponseBodyTypedDict,
        HosDailyLogsGetHosDailyLogsBadRequestErrorResponseBodyTypedDict,
    ],
)


GetHosDailyLogsResponse = TypeAliasType(
    "GetHosDailyLogsResponse",
    Union[
        HosDailyLogsGetHosDailyLogsResponseBody,
        HosDailyLogsGetHosDailyLogsBadRequestErrorResponseBody,
    ],
)
