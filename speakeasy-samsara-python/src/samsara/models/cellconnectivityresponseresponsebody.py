"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SignalBar(str, Enum):
    r"""The cellular signal strength indicator.  Valid values: `1/4`, `2/4`, `3/4`, `4/4`, `unknown`"""

    ONE_4 = "1/4"
    TWO_4 = "2/4"
    THREE_4 = "3/4"
    FOUR_4 = "4/4"
    UNKNOWN = "unknown"


class CellConnectivityResponseResponseBodyTypedDict(TypedDict):
    r"""Gateway cellular connectivity information."""

    operator: NotRequired[str]
    r"""The cellular network provider name."""
    signal_bar: NotRequired[SignalBar]
    r"""The cellular signal strength indicator.  Valid values: `1/4`, `2/4`, `3/4`, `4/4`, `unknown`"""


class CellConnectivityResponseResponseBody(BaseModel):
    r"""Gateway cellular connectivity information."""

    operator: Optional[str] = None
    r"""The cellular network provider name."""

    signal_bar: Annotated[Optional[SignalBar], pydantic.Field(alias="signalBar")] = None
    r"""The cellular signal strength indicator.  Valid values: `1/4`, `2/4`, `3/4`, `4/4`, `unknown`"""
