"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dvirresolvedbyobjectresponsebody import (
    DvirResolvedByObjectResponseBody,
    DvirResolvedByObjectResponseBodyTypedDict,
)
from .goatrailertinyresponseresponsebody import (
    GoaTrailerTinyResponseResponseBody,
    GoaTrailerTinyResponseResponseBodyTypedDict,
)
from .vehiclewithgatewaytinyresponseresponsebody import (
    VehicleWithGatewayTinyResponseResponseBody,
    VehicleWithGatewayTinyResponseResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DvirDefectsObjectV20220913ResponseBodyTypedDict(TypedDict):
    r"""A description of a DVIR defect"""

    created_at_time: str
    r"""Time when the defect was created. UTC timestamp in RFC 3339 format."""
    defect_type: str
    r"""The type of DVIR defect."""
    id: str
    r"""The ID of the defect."""
    is_resolved: bool
    r"""Signifies if this defect is resolved."""
    comment: NotRequired[str]
    r"""Comment on the defect."""
    mechanic_notes: NotRequired[str]
    r"""The mechanic notes on this defect."""
    mechanic_notes_updated_at_time: NotRequired[str]
    r"""Time when mechanic notes were last updated. UTC timestamp in RFC 3339 format."""
    resolved_at_time: NotRequired[str]
    r"""Time when this defect was resolved. Will not be returned if the defect is unresolved. UTC timestamp in RFC 3339 format."""
    resolved_by: NotRequired[DvirResolvedByObjectResponseBodyTypedDict]
    r"""The person who resolved this defect."""
    trailer: NotRequired[GoaTrailerTinyResponseResponseBodyTypedDict]
    r"""A minified trailer object"""
    vehicle: NotRequired[VehicleWithGatewayTinyResponseResponseBodyTypedDict]
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""


class DvirDefectsObjectV20220913ResponseBody(BaseModel):
    r"""A description of a DVIR defect"""

    created_at_time: Annotated[str, pydantic.Field(alias="createdAtTime")]
    r"""Time when the defect was created. UTC timestamp in RFC 3339 format."""

    defect_type: Annotated[str, pydantic.Field(alias="defectType")]
    r"""The type of DVIR defect."""

    id: str
    r"""The ID of the defect."""

    is_resolved: Annotated[bool, pydantic.Field(alias="isResolved")]
    r"""Signifies if this defect is resolved."""

    comment: Optional[str] = None
    r"""Comment on the defect."""

    mechanic_notes: Annotated[Optional[str], pydantic.Field(alias="mechanicNotes")] = (
        None
    )
    r"""The mechanic notes on this defect."""

    mechanic_notes_updated_at_time: Annotated[
        Optional[str], pydantic.Field(alias="mechanicNotesUpdatedAtTime")
    ] = None
    r"""Time when mechanic notes were last updated. UTC timestamp in RFC 3339 format."""

    resolved_at_time: Annotated[
        Optional[str], pydantic.Field(alias="resolvedAtTime")
    ] = None
    r"""Time when this defect was resolved. Will not be returned if the defect is unresolved. UTC timestamp in RFC 3339 format."""

    resolved_by: Annotated[
        Optional[DvirResolvedByObjectResponseBody], pydantic.Field(alias="resolvedBy")
    ] = None
    r"""The person who resolved this defect."""

    trailer: Optional[GoaTrailerTinyResponseResponseBody] = None
    r"""A minified trailer object"""

    vehicle: Optional[VehicleWithGatewayTinyResponseResponseBody] = None
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""
