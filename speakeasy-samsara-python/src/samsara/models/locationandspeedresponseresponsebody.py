"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .assetresponseresponsebody import (
    AssetResponseResponseBody,
    AssetResponseResponseBodyTypedDict,
)
from .locationresponseresponsebody import (
    LocationResponseResponseBody,
    LocationResponseResponseBodyTypedDict,
)
from .speedresponseresponsebody import (
    SpeedResponseResponseBody,
    SpeedResponseResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class LocationAndSpeedResponseResponseBodyTypedDict(TypedDict):
    r"""Full location and speed objects."""

    asset: AssetResponseResponseBodyTypedDict
    r"""Asset that the location readings are tied to."""
    happened_at_time: str
    r"""UTC timestamp in RFC 3339 format of the event."""
    location: LocationResponseResponseBodyTypedDict
    r"""Location object."""
    speed: NotRequired[SpeedResponseResponseBodyTypedDict]
    r"""Speed object."""


class LocationAndSpeedResponseResponseBody(BaseModel):
    r"""Full location and speed objects."""

    asset: AssetResponseResponseBody
    r"""Asset that the location readings are tied to."""

    happened_at_time: Annotated[str, pydantic.Field(alias="happenedAtTime")]
    r"""UTC timestamp in RFC 3339 format of the event."""

    location: LocationResponseResponseBody
    r"""Location object."""

    speed: Optional[SpeedResponseResponseBody] = None
    r"""Speed object."""
