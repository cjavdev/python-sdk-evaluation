"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .goavehicletinyresponseresponsebody import (
    GoaVehicleTinyResponseResponseBody,
    GoaVehicleTinyResponseResponseBodyTypedDict,
)
from .idlingreporteventaddressresponsebody import (
    IdlingReportEventAddressResponseBody,
    IdlingReportEventAddressResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing_extensions import Annotated, TypedDict


class IdlingReportEventResponseBodyTypedDict(TypedDict):
    r"""A summary of the idling event."""

    address: IdlingReportEventAddressResponseBodyTypedDict
    r"""Address where the idling event took place."""
    duration_ms: int
    r"""The duration of this idling event in milliseconds."""
    end_time: str
    r"""The end time of this idling event in RFC 3339 format."""
    fuel_consumption_ml: float
    r"""The amount of fuel consumed in milliliters during this idling event."""
    is_pto_active: bool
    r"""Whether or not power take-off was active during this idling event."""
    start_time: str
    r"""The start time of this idling event in RFC 3339 format."""
    vehicle: GoaVehicleTinyResponseResponseBodyTypedDict
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""


class IdlingReportEventResponseBody(BaseModel):
    r"""A summary of the idling event."""

    address: IdlingReportEventAddressResponseBody
    r"""Address where the idling event took place."""

    duration_ms: Annotated[int, pydantic.Field(alias="durationMs")]
    r"""The duration of this idling event in milliseconds."""

    end_time: Annotated[str, pydantic.Field(alias="endTime")]
    r"""The end time of this idling event in RFC 3339 format."""

    fuel_consumption_ml: Annotated[float, pydantic.Field(alias="fuelConsumptionMl")]
    r"""The amount of fuel consumed in milliliters during this idling event."""

    is_pto_active: Annotated[bool, pydantic.Field(alias="isPtoActive")]
    r"""Whether or not power take-off was active during this idling event."""

    start_time: Annotated[str, pydantic.Field(alias="startTime")]
    r"""The start time of this idling event in RFC 3339 format."""

    vehicle: GoaVehicleTinyResponseResponseBody
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""
