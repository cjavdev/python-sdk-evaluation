"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HosStatusType(str, Enum):
    r"""The Hours of Service status type.  If the driver app is disconnected, an empty string will be returned. To reconnect the app and return updated values, drivers should have the app open with good cell service. Valid values: `offDuty`, `sleeperBed`, `driving`, `onDuty`, `yardMove`, `personalConveyance`."""

    OFF_DUTY = "offDuty"
    SLEEPER_BED = "sleeperBed"
    DRIVING = "driving"
    ON_DUTY = "onDuty"
    YARD_MOVE = "yardMove"
    PERSONAL_CONVEYANCE = "personalConveyance"


class CurrentDutyStatusTypedDict(TypedDict):
    r"""The current HOS status type and time the driver started being in this status."""

    hos_status_type: NotRequired[HosStatusType]
    r"""The Hours of Service status type.  If the driver app is disconnected, an empty string will be returned. To reconnect the app and return updated values, drivers should have the app open with good cell service. Valid values: `offDuty`, `sleeperBed`, `driving`, `onDuty`, `yardMove`, `personalConveyance`."""


class CurrentDutyStatus(BaseModel):
    r"""The current HOS status type and time the driver started being in this status."""

    hos_status_type: Annotated[
        Optional[HosStatusType], pydantic.Field(alias="hosStatusType")
    ] = None
    r"""The Hours of Service status type.  If the driver app is disconnected, an empty string will be returned. To reconnect the app and return updated values, drivers should have the app open with good cell service. Valid values: `offDuty`, `sleeperBed`, `driving`, `onDuty`, `yardMove`, `personalConveyance`."""
