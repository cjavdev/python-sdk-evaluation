"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .assetsinputsassetresponseresponsebody import (
    AssetsInputsAssetResponseResponseBody,
    AssetsInputsAssetResponseResponseBodyTypedDict,
)
from .assetsinputsauxinputresponsebody import (
    AssetsInputsAuxInputResponseBody,
    AssetsInputsAuxInputResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Units(str, Enum):
    r"""Units of the values in the returned data.  Valid values: `boolean`, `millivolts`, `microamps`"""

    BOOLEAN = "boolean"
    MILLIVOLTS = "millivolts"
    MICROAMPS = "microamps"


class AssetsInputsResponseResponseBodyTypedDict(TypedDict):
    r"""Full assets inputs objects."""

    asset: AssetsInputsAssetResponseResponseBodyTypedDict
    r"""Asset that the input data is from."""
    happened_at_time: str
    r"""UTC timestamp in RFC 3339 format of the event."""
    units: Units
    r"""Units of the values in the returned data.  Valid values: `boolean`, `millivolts`, `microamps`"""
    value: str
    r"""Value of the data point."""
    aux_input: NotRequired[AssetsInputsAuxInputResponseBodyTypedDict]
    r"""Auxiliary input metadata"""


class AssetsInputsResponseResponseBody(BaseModel):
    r"""Full assets inputs objects."""

    asset: AssetsInputsAssetResponseResponseBody
    r"""Asset that the input data is from."""

    happened_at_time: Annotated[str, pydantic.Field(alias="happenedAtTime")]
    r"""UTC timestamp in RFC 3339 format of the event."""

    units: Units
    r"""Units of the values in the returned data.  Valid values: `boolean`, `millivolts`, `microamps`"""

    value: str
    r"""Value of the data point."""

    aux_input: Annotated[
        Optional[AssetsInputsAuxInputResponseBody], pydantic.Field(alias="auxInput")
    ] = None
    r"""Auxiliary input metadata"""
