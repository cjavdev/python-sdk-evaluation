"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .urlinfoobjectresponsebody import (
    URLInfoObjectResponseBody,
    URLInfoObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UploadedMediaObjectResponseBodyInput(str, Enum):
    r"""Input type for this media. Examples: dashcamForwardFacing  Valid values: `dashcamForwardFacing`, `dashcamInwardFacing`, `dashcamRearFacing`"""

    DASHCAM_FORWARD_FACING = "dashcamForwardFacing"
    DASHCAM_INWARD_FACING = "dashcamInwardFacing"
    DASHCAM_REAR_FACING = "dashcamRearFacing"


class UploadedMediaObjectResponseBodyMediaType(str, Enum):
    r"""Type of media. Examples: image  Valid values: `image`"""

    IMAGE = "image"


class TriggerReason(str, Enum):
    r"""Trigger reason for this media capture. Examples: api  Valid values: `api`, `panicButton`, `periodicStill`, `tripEndStill`, `tripStartStill`, `videoRetrieval`"""

    API = "api"
    PANIC_BUTTON = "panicButton"
    PERIODIC_STILL = "periodicStill"
    TRIP_END_STILL = "tripEndStill"
    TRIP_START_STILL = "tripStartStill"
    VIDEO_RETRIEVAL = "videoRetrieval"


class UploadedMediaObjectResponseBodyTypedDict(TypedDict):
    available_at_time: str
    r"""Timestamp, in RFC 3339 format, at which the media item was made available. Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00"""
    end_time: str
    r"""An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    input: UploadedMediaObjectResponseBodyInput
    r"""Input type for this media. Examples: dashcamForwardFacing  Valid values: `dashcamForwardFacing`, `dashcamInwardFacing`, `dashcamRearFacing`"""
    media_type: UploadedMediaObjectResponseBodyMediaType
    r"""Type of media. Examples: image  Valid values: `image`"""
    start_time: str
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    trigger_reason: TriggerReason
    r"""Trigger reason for this media capture. Examples: api  Valid values: `api`, `panicButton`, `periodicStill`, `tripEndStill`, `tripStartStill`, `videoRetrieval`"""
    vehicle_id: str
    r"""Vehicle ID for which this media was captured. Examples: 1234"""
    url_info: NotRequired[URLInfoObjectResponseBodyTypedDict]
    r"""URL info for this piece of media. This field is only populated when the 'status' response field is 'available'"""


class UploadedMediaObjectResponseBody(BaseModel):
    available_at_time: Annotated[str, pydantic.Field(alias="availableAtTime")]
    r"""Timestamp, in RFC 3339 format, at which the media item was made available. Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00"""

    end_time: Annotated[str, pydantic.Field(alias="endTime")]
    r"""An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    input: UploadedMediaObjectResponseBodyInput
    r"""Input type for this media. Examples: dashcamForwardFacing  Valid values: `dashcamForwardFacing`, `dashcamInwardFacing`, `dashcamRearFacing`"""

    media_type: Annotated[
        UploadedMediaObjectResponseBodyMediaType, pydantic.Field(alias="mediaType")
    ]
    r"""Type of media. Examples: image  Valid values: `image`"""

    start_time: Annotated[str, pydantic.Field(alias="startTime")]
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    trigger_reason: Annotated[TriggerReason, pydantic.Field(alias="triggerReason")]
    r"""Trigger reason for this media capture. Examples: api  Valid values: `api`, `panicButton`, `periodicStill`, `tripEndStill`, `tripStartStill`, `videoRetrieval`"""

    vehicle_id: Annotated[str, pydantic.Field(alias="vehicleId")]
    r"""Vehicle ID for which this media was captured. Examples: 1234"""

    url_info: Annotated[
        Optional[URLInfoObjectResponseBody], pydantic.Field(alias="urlInfo")
    ] = None
    r"""URL info for this piece of media. This field is only populated when the 'status' response field is 'available'"""
