"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .createroutesstoprequestobjectrequestbody import (
    CreateRoutesStopRequestObjectRequestBody,
    CreateRoutesStopRequestObjectRequestBodyTypedDict,
)
from .routesettingsrequestbody import (
    RouteSettingsRequestBody,
    RouteSettingsRequestBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RoutesCreateRouteRequestBodyTypedDict(TypedDict):
    name: str
    r"""Name for the route"""
    stops: List[CreateRoutesStopRequestObjectRequestBodyTypedDict]
    r"""List of stops along the route. For each stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job."""
    driver_id: NotRequired[str]
    r"""ID of the driver. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver."""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    notes: NotRequired[str]
    r"""Notes about the route."""
    settings: NotRequired[RouteSettingsRequestBodyTypedDict]
    r"""An optional dictionary, only necessary to override the defaults for route start and end conditions."""
    vehicle_id: NotRequired[str]
    r"""ID of the vehicle. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle."""


class RoutesCreateRouteRequestBody(BaseModel):
    name: str
    r"""Name for the route"""

    stops: List[CreateRoutesStopRequestObjectRequestBody]
    r"""List of stops along the route. For each stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job."""

    driver_id: Annotated[Optional[str], pydantic.Field(alias="driverId")] = None
    r"""ID of the driver. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    notes: Optional[str] = None
    r"""Notes about the route."""

    settings: Optional[RouteSettingsRequestBody] = None
    r"""An optional dictionary, only necessary to override the defaults for route start and end conditions."""

    vehicle_id: Annotated[Optional[str], pydantic.Field(alias="vehicleId")] = None
    r"""ID of the vehicle. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle."""
