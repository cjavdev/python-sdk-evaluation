"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .attributevaluetiny import AttributeValueTiny, AttributeValueTinyTypedDict
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AttributeType(str, Enum):
    r"""Denotes the data type of the attribute's values. Valid values: `string`, `number`."""

    STRING = "string"
    NUMBER = "number"


class AttributeValueQuantity(str, Enum):
    r"""Defines whether or not this attribute can be used on the same entity many times (with different values). Valid values: `single`, `multi`."""

    SINGLE = "single"
    MULTI = "multi"


class EntityType(str, Enum):
    r"""Denotes the type of entity, driver or asset. Valid values: `driver`, `asset`."""

    DRIVER = "driver"
    ASSET = "asset"


class AttributeTypedDict(TypedDict):
    attribute_type: NotRequired[AttributeType]
    r"""Denotes the data type of the attribute's values. Valid values: `string`, `number`."""
    attribute_value_quantity: NotRequired[AttributeValueQuantity]
    r"""Defines whether or not this attribute can be used on the same entity many times (with different values). Valid values: `single`, `multi`."""
    entity_type: NotRequired[EntityType]
    r"""Denotes the type of entity, driver or asset. Valid values: `driver`, `asset`."""
    id: NotRequired[str]
    r"""The samsara id of the attribute object."""
    name: NotRequired[str]
    r"""Name of attribute."""
    number_values: NotRequired[List[float]]
    r"""Number values that can be associated with this attribute"""
    string_values: NotRequired[List[str]]
    r"""String values that can be associated with this attribute"""
    values: NotRequired[List[AttributeValueTinyTypedDict]]
    r"""Representation of values that includes ids."""


class Attribute(BaseModel):
    attribute_type: Annotated[
        Optional[AttributeType], pydantic.Field(alias="attributeType")
    ] = AttributeType.STRING
    r"""Denotes the data type of the attribute's values. Valid values: `string`, `number`."""

    attribute_value_quantity: Annotated[
        Optional[AttributeValueQuantity], pydantic.Field(alias="attributeValueQuantity")
    ] = AttributeValueQuantity.MULTI
    r"""Defines whether or not this attribute can be used on the same entity many times (with different values). Valid values: `single`, `multi`."""

    entity_type: Annotated[Optional[EntityType], pydantic.Field(alias="entityType")] = (
        None
    )
    r"""Denotes the type of entity, driver or asset. Valid values: `driver`, `asset`."""

    id: Optional[str] = None
    r"""The samsara id of the attribute object."""

    name: Optional[str] = None
    r"""Name of attribute."""

    number_values: Annotated[
        Optional[List[float]], pydantic.Field(alias="numberValues")
    ] = None
    r"""Number values that can be associated with this attribute"""

    string_values: Annotated[
        Optional[List[str]], pydantic.Field(alias="stringValues")
    ] = None
    r"""String values that can be associated with this attribute"""

    values: Optional[List[AttributeValueTiny]] = None
    r"""Representation of values that includes ids."""
