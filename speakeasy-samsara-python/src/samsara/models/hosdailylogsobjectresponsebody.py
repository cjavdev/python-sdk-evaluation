"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .distancetraveledobjectresponsebody import (
    DistanceTraveledObjectResponseBody,
    DistanceTraveledObjectResponseBodyTypedDict,
)
from .driverwithtimezoneeldsettingsobjectresponsebody import (
    DriverWithTimezoneEldSettingsObjectResponseBody,
    DriverWithTimezoneEldSettingsObjectResponseBodyTypedDict,
)
from .dutystatusdurationobjectresponsebody import (
    DutyStatusDurationObjectResponseBody,
    DutyStatusDurationObjectResponseBodyTypedDict,
)
from .logmetadataobjectresponsebody import (
    LogMetaDataObjectResponseBody,
    LogMetaDataObjectResponseBodyTypedDict,
)
from .pendingdutystatusdurationsobjectresponsebody import (
    PendingDutyStatusDurationsObjectResponseBody,
    PendingDutyStatusDurationsObjectResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HosDailyLogsObjectResponseBodyTypedDict(TypedDict):
    driver: DriverWithTimezoneEldSettingsObjectResponseBodyTypedDict
    r"""The driver the log applies to."""
    end_time: str
    r"""The end time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver."""
    start_time: str
    r"""The start time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver."""
    distance_traveled: NotRequired[DistanceTraveledObjectResponseBodyTypedDict]
    r"""The distance traveled information of the log."""
    duty_status_durations: NotRequired[DutyStatusDurationObjectResponseBodyTypedDict]
    r"""The currently applied duty status durations on the driver's log."""
    log_meta_data: NotRequired[LogMetaDataObjectResponseBodyTypedDict]
    r"""The metadata of the log."""
    pending_duty_status_durations: NotRequired[
        PendingDutyStatusDurationsObjectResponseBodyTypedDict
    ]
    r"""What the duty status durations on the driver’s log would be if all pending carrier edits are accepted by the driver."""


class HosDailyLogsObjectResponseBody(BaseModel):
    driver: DriverWithTimezoneEldSettingsObjectResponseBody
    r"""The driver the log applies to."""

    end_time: Annotated[str, pydantic.Field(alias="endTime")]
    r"""The end time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver."""

    start_time: Annotated[str, pydantic.Field(alias="startTime")]
    r"""The start time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver."""

    distance_traveled: Annotated[
        Optional[DistanceTraveledObjectResponseBody],
        pydantic.Field(alias="distanceTraveled"),
    ] = None
    r"""The distance traveled information of the log."""

    duty_status_durations: Annotated[
        Optional[DutyStatusDurationObjectResponseBody],
        pydantic.Field(alias="dutyStatusDurations"),
    ] = None
    r"""The currently applied duty status durations on the driver's log."""

    log_meta_data: Annotated[
        Optional[LogMetaDataObjectResponseBody], pydantic.Field(alias="logMetaData")
    ] = None
    r"""The metadata of the log."""

    pending_duty_status_durations: Annotated[
        Optional[PendingDutyStatusDurationsObjectResponseBody],
        pydantic.Field(alias="pendingDutyStatusDurations"),
    ] = None
    r"""What the duty status durations on the driver’s log would be if all pending carrier edits are accepted by the driver."""
