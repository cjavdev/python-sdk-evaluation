"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .drivertinyresponse import DriverTinyResponse, DriverTinyResponseTypedDict
from .hosloglocation import HosLogLocation, HosLogLocationTypedDict
from .vehicletinyresponse import VehicleTinyResponse, VehicleTinyResponseTypedDict
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HosLogEntryHosStatusType(str, Enum):
    r"""The Hours of Service status type. Valid values: `offDuty`, `sleeperBed`, `driving`, `onDuty`, `yardMove`, `personalConveyance`."""

    OFF_DUTY = "offDuty"
    SLEEPER_BED = "sleeperBed"
    DRIVING = "driving"
    ON_DUTY = "onDuty"
    YARD_MOVE = "yardMove"
    PERSONAL_CONVEYANCE = "personalConveyance"


class HosLogEntryTypedDict(TypedDict):
    r"""A single HOS log entry."""

    log_start_time: str
    r"""UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`."""
    codrivers: NotRequired[List[DriverTinyResponseTypedDict]]
    r"""The codriver information."""
    hos_status_type: NotRequired[HosLogEntryHosStatusType]
    r"""The Hours of Service status type. Valid values: `offDuty`, `sleeperBed`, `driving`, `onDuty`, `yardMove`, `personalConveyance`."""
    log_end_time: NotRequired[str]
    r"""UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`."""
    log_recorded_location: NotRequired[HosLogLocationTypedDict]
    r"""Location associated with the duty status change"""
    remark: NotRequired[str]
    r"""Remark associated with the log entry."""
    vehicle: NotRequired[VehicleTinyResponseTypedDict]
    r"""A minified vehicle object."""


class HosLogEntry(BaseModel):
    r"""A single HOS log entry."""

    log_start_time: Annotated[str, pydantic.Field(alias="logStartTime")]
    r"""UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`."""

    codrivers: Optional[List[DriverTinyResponse]] = None
    r"""The codriver information."""

    hos_status_type: Annotated[
        Optional[HosLogEntryHosStatusType], pydantic.Field(alias="hosStatusType")
    ] = None
    r"""The Hours of Service status type. Valid values: `offDuty`, `sleeperBed`, `driving`, `onDuty`, `yardMove`, `personalConveyance`."""

    log_end_time: Annotated[Optional[str], pydantic.Field(alias="logEndTime")] = None
    r"""UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`."""

    log_recorded_location: Annotated[
        Optional[HosLogLocation], pydantic.Field(alias="logRecordedLocation")
    ] = None
    r"""Location associated with the duty status change"""

    remark: Optional[str] = None
    r"""Remark associated with the log entry."""

    vehicle: Optional[VehicleTinyResponse] = None
    r"""A minified vehicle object."""
