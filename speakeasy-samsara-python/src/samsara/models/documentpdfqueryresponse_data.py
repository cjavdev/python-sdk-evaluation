"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class JobStatus(str, Enum):
    r"""Describes status of the PDF generation job. Valid values: `requested`, `processing`, `completed`."""

    REQUESTED = "requested"
    PROCESSING = "processing"
    COMPLETED = "completed"


class DocumentPdfQueryResponseDataTypedDict(TypedDict):
    completed_at_time: NotRequired[str]
    r"""Time that PDF generation was completed, in RFC 3339 format."""
    document_id: NotRequired[str]
    r"""ID of the document."""
    download_document_pdf_url: NotRequired[str]
    r"""S3 pre-signed URL to download PDF file."""
    id: NotRequired[str]
    r"""ID of the PDF file generated or being generated for the document"""
    job_status: NotRequired[JobStatus]
    r"""Describes status of the PDF generation job. Valid values: `requested`, `processing`, `completed`."""
    requested_at_time: NotRequired[str]
    r"""Time that PDF generation was requested, in RFC 3339 format."""


class DocumentPdfQueryResponseData(BaseModel):
    completed_at_time: Annotated[
        Optional[str], pydantic.Field(alias="completedAtTime")
    ] = None
    r"""Time that PDF generation was completed, in RFC 3339 format."""

    document_id: Annotated[Optional[str], pydantic.Field(alias="documentId")] = None
    r"""ID of the document."""

    download_document_pdf_url: Annotated[
        Optional[str], pydantic.Field(alias="downloadDocumentPdfUrl")
    ] = None
    r"""S3 pre-signed URL to download PDF file."""

    id: Optional[str] = None
    r"""ID of the PDF file generated or being generated for the document"""

    job_status: Annotated[Optional[JobStatus], pydantic.Field(alias="jobStatus")] = None
    r"""Describes status of the PDF generation job. Valid values: `requested`, `processing`, `completed`."""

    requested_at_time: Annotated[
        Optional[str], pydantic.Field(alias="requestedAtTime")
    ] = None
    r"""Time that PDF generation was requested, in RFC 3339 format."""
