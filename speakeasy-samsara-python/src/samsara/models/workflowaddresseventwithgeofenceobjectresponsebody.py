"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .workflowgeofenceresponsebody import (
    WorkflowGeofenceResponseBody,
    WorkflowGeofenceResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class WorkflowAddressEventWithGeofenceObjectResponseBodyTypedDict(TypedDict):
    r"""A minimal Address object representation used in AddressEventObject objects"""

    formatted_address: str
    r"""The full street address for this address/geofence, as it might be recognized by Google Maps."""
    id: str
    r"""Id of the address"""
    name: str
    r"""Name of the address"""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    geofence: NotRequired[WorkflowGeofenceResponseBodyTypedDict]
    r"""The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both."""


class WorkflowAddressEventWithGeofenceObjectResponseBody(BaseModel):
    r"""A minimal Address object representation used in AddressEventObject objects"""

    formatted_address: Annotated[str, pydantic.Field(alias="formattedAddress")]
    r"""The full street address for this address/geofence, as it might be recognized by Google Maps."""

    id: str
    r"""Id of the address"""

    name: str
    r"""Name of the address"""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    geofence: Optional[WorkflowGeofenceResponseBody] = None
    r"""The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both."""
