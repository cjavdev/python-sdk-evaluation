"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Catalyst(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class Comprehensive(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class Egr(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class EvapSystem(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class Fuel(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class HeatedCatalyst(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class HeatedO2Sensor(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class IsoSaeReserved(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class Misfire(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class O2Sensor(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class SecondaryAir(str, Enum):
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    N = "N"
    R = "R"
    U = "U"


class VehicleStatsFaultCodesValueObdiiMonitorStatusTypedDict(TypedDict):
    r"""Readings from engine sensors"""

    catalyst: NotRequired[Catalyst]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    comprehensive: NotRequired[Comprehensive]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    egr: NotRequired[Egr]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    evap_system: NotRequired[EvapSystem]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    fuel: NotRequired[Fuel]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    heated_catalyst: NotRequired[HeatedCatalyst]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    heated_o2_sensor: NotRequired[HeatedO2Sensor]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    iso_sae_reserved: NotRequired[IsoSaeReserved]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    misfire: NotRequired[Misfire]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    not_ready_count: NotRequired[int]
    r"""Count of the number of sensors reporting N: Not Complete"""
    o2_sensor: NotRequired[O2Sensor]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
    secondary_air: NotRequired[SecondaryAir]
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """


class VehicleStatsFaultCodesValueObdiiMonitorStatus(BaseModel):
    r"""Readings from engine sensors"""

    catalyst: Optional[Catalyst] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    comprehensive: Optional[Comprehensive] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    egr: Optional[Egr] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    evap_system: Annotated[Optional[EvapSystem], pydantic.Field(alias="evapSystem")] = (
        None
    )
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    fuel: Optional[Fuel] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    heated_catalyst: Annotated[
        Optional[HeatedCatalyst], pydantic.Field(alias="heatedCatalyst")
    ] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    heated_o2_sensor: Annotated[
        Optional[HeatedO2Sensor], pydantic.Field(alias="heatedO2Sensor")
    ] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    iso_sae_reserved: Annotated[
        Optional[IsoSaeReserved], pydantic.Field(alias="isoSaeReserved")
    ] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    misfire: Optional[Misfire] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    not_ready_count: Annotated[Optional[int], pydantic.Field(alias="notReadyCount")] = (
        None
    )
    r"""Count of the number of sensors reporting N: Not Complete"""

    o2_sensor: Annotated[Optional[O2Sensor], pydantic.Field(alias="o2Sensor")] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """

    secondary_air: Annotated[
        Optional[SecondaryAir], pydantic.Field(alias="secondaryAir")
    ] = None
    r"""Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete

    """
