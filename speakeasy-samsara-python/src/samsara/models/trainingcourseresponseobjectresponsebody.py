"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .trainingcategoryobjectresponsebody import (
    TrainingCategoryObjectResponseBody,
    TrainingCategoryObjectResponseBodyTypedDict,
)
from .trainingcourselabelobjectresponsebody import (
    TrainingCourseLabelObjectResponseBody,
    TrainingCourseLabelObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TrainingCourseResponseObjectResponseBodyStatus(str, Enum):
    r"""Status of the training course. Always returned.
    Note: Only courses in a ‘published’ state are assignable to learners. Archiving a course deletes only ‘inProgress’ assignments associated with that course, and deleting a course deletes all assignments associated with that course.  Valid values: `published`, `deleted`, `archived`, `unknown`
    """

    PUBLISHED = "published"
    DELETED = "deleted"
    ARCHIVED = "archived"
    UNKNOWN = "unknown"


class TrainingCourseResponseObjectResponseBodyTypedDict(TypedDict):
    r"""Training Course response object."""

    category: TrainingCategoryObjectResponseBodyTypedDict
    r"""Category of the training course."""
    estimated_time_to_complete_minutes: int
    r"""Estimated time it takes to complete the course."""
    id: str
    r"""ID of the training course."""
    revision_id: str
    r"""ID of the course's specific version."""
    status: TrainingCourseResponseObjectResponseBodyStatus
    r"""Status of the training course. Always returned.
    Note: Only courses in a ‘published’ state are assignable to learners. Archiving a course deletes only ‘inProgress’ assignments associated with that course, and deleting a course deletes all assignments associated with that course.  Valid values: `published`, `deleted`, `archived`, `unknown`
    """
    title: str
    r"""Title of the course."""
    description: NotRequired[str]
    r"""Description of the course."""
    label: NotRequired[TrainingCourseLabelObjectResponseBodyTypedDict]
    r"""Label of the training course."""


class TrainingCourseResponseObjectResponseBody(BaseModel):
    r"""Training Course response object."""

    category: TrainingCategoryObjectResponseBody
    r"""Category of the training course."""

    estimated_time_to_complete_minutes: Annotated[
        int, pydantic.Field(alias="estimatedTimeToCompleteMinutes")
    ]
    r"""Estimated time it takes to complete the course."""

    id: str
    r"""ID of the training course."""

    revision_id: Annotated[str, pydantic.Field(alias="revisionId")]
    r"""ID of the course's specific version."""

    status: TrainingCourseResponseObjectResponseBodyStatus
    r"""Status of the training course. Always returned.
    Note: Only courses in a ‘published’ state are assignable to learners. Archiving a course deletes only ‘inProgress’ assignments associated with that course, and deleting a course deletes all assignments associated with that course.  Valid values: `published`, `deleted`, `archived`, `unknown`
    """

    title: str
    r"""Title of the course."""

    description: Optional[str] = None
    r"""Description of the course."""

    label: Optional[TrainingCourseLabelObjectResponseBody] = None
    r"""Label of the training course."""
