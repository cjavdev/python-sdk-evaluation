"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1assetreeferresponse import V1AssetReeferResponse, V1AssetReeferResponseTypedDict
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class V1getAssetReeferRequestTypedDict(TypedDict):
    asset_id: int
    r"""ID of the asset. Must contain only digits 0-9."""
    start_ms: int
    r"""Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."""
    end_ms: int
    r"""Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."""


class V1getAssetReeferRequest(BaseModel):
    asset_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""ID of the asset. Must contain only digits 0-9."""

    start_ms: Annotated[
        int,
        pydantic.Field(alias="startMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs."""

    end_ms: Annotated[
        int,
        pydantic.Field(alias="endMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs."""


V1getAssetReeferResponseTypedDict = TypeAliasType(
    "V1getAssetReeferResponseTypedDict", Union[V1AssetReeferResponseTypedDict, str]
)


V1getAssetReeferResponse = TypeAliasType(
    "V1getAssetReeferResponse", Union[V1AssetReeferResponse, str]
)
