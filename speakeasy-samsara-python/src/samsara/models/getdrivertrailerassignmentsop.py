"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .trailerassignmentsgetdrivertrailerassignmentsbadrequesterrorresponsebody import (
    TrailerAssignmentsGetDriverTrailerAssignmentsBadRequestErrorResponseBody,
    TrailerAssignmentsGetDriverTrailerAssignmentsBadRequestErrorResponseBodyTypedDict,
)
from .trailerassignmentsgetdrivertrailerassignmentsresponsebody import (
    TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody,
    TrailerAssignmentsGetDriverTrailerAssignmentsResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetDriverTrailerAssignmentsRequestTypedDict(TypedDict):
    driver_ids: List[str]
    r"""A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"""
    after: NotRequired[str]
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""
    include_external_ids: NotRequired[bool]
    r"""Optional boolean indicating whether to return external IDs on supported entities"""


class GetDriverTrailerAssignmentsRequest(BaseModel):
    driver_ids: Annotated[
        List[str],
        pydantic.Field(alias="driverIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ]
    r"""A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"""

    after: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""

    include_external_ids: Annotated[
        Optional[bool],
        pydantic.Field(alias="includeExternalIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Optional boolean indicating whether to return external IDs on supported entities"""


GetDriverTrailerAssignmentsResponseTypedDict = TypeAliasType(
    "GetDriverTrailerAssignmentsResponseTypedDict",
    Union[
        TrailerAssignmentsGetDriverTrailerAssignmentsResponseBodyTypedDict,
        TrailerAssignmentsGetDriverTrailerAssignmentsBadRequestErrorResponseBodyTypedDict,
    ],
)


GetDriverTrailerAssignmentsResponse = TypeAliasType(
    "GetDriverTrailerAssignmentsResponse",
    Union[
        TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody,
        TrailerAssignmentsGetDriverTrailerAssignmentsBadRequestErrorResponseBody,
    ],
)
