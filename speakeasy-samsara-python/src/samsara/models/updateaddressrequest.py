"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .updateaddressrequest_geofence import (
    UpdateAddressRequestGeofence,
    UpdateAddressRequestGeofenceTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateAddressRequestAddressTypes(str, Enum):
    YARD = "yard"
    SHORT_HAUL = "shortHaul"
    WORKFORCE_SITE = "workforceSite"
    RISK_ZONE = "riskZone"
    INDUSTRIAL_SITE = "industrialSite"
    ALERTS_ONLY = "alertsOnly"


class UpdateAddressRequestTypedDict(TypedDict):
    r"""A request body to update an Address."""

    address_types: NotRequired[List[UpdateAddressRequestAddressTypes]]
    r"""Reporting location type associated with the address (used for ELD reporting purposes). Valid values: `yard`, `shortHaul`, `workforceSite`, `riskZone`, `industrialSite`, `alertsOnly`."""
    contact_ids: NotRequired[List[str]]
    r"""An array of Contact IDs associated with this Address."""
    external_ids: NotRequired[Dict[str, str]]
    r"""The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object."""
    formatted_address: NotRequired[str]
    r"""The full street address for this address/geofence, as it might be recognized by Google Maps."""
    geofence: NotRequired[UpdateAddressRequestGeofenceTypedDict]
    r"""The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both."""
    latitude: NotRequired[float]
    r"""Latitude of the address. Will be geocoded from `formattedAddress` if not provided."""
    longitude: NotRequired[float]
    r"""Longitude of the address. Will be geocoded from `formattedAddress` if not provided."""
    name: NotRequired[str]
    r"""Name of the address."""
    notes: NotRequired[str]
    r"""Notes about the address."""
    tag_ids: NotRequired[List[str]]
    r"""An array of IDs of tags to associate with this address."""


class UpdateAddressRequest(BaseModel):
    r"""A request body to update an Address."""

    address_types: Annotated[
        Optional[List[UpdateAddressRequestAddressTypes]],
        pydantic.Field(alias="addressTypes"),
    ] = None
    r"""Reporting location type associated with the address (used for ELD reporting purposes). Valid values: `yard`, `shortHaul`, `workforceSite`, `riskZone`, `industrialSite`, `alertsOnly`."""

    contact_ids: Annotated[Optional[List[str]], pydantic.Field(alias="contactIds")] = (
        None
    )
    r"""An array of Contact IDs associated with this Address."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object."""

    formatted_address: Annotated[
        Optional[str], pydantic.Field(alias="formattedAddress")
    ] = None
    r"""The full street address for this address/geofence, as it might be recognized by Google Maps."""

    geofence: Optional[UpdateAddressRequestGeofence] = None
    r"""The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both."""

    latitude: Optional[float] = None
    r"""Latitude of the address. Will be geocoded from `formattedAddress` if not provided."""

    longitude: Optional[float] = None
    r"""Longitude of the address. Will be geocoded from `formattedAddress` if not provided."""

    name: Optional[str] = None
    r"""Name of the address."""

    notes: Optional[str] = None
    r"""Notes about the address."""

    tag_ids: Annotated[Optional[List[str]], pydantic.Field(alias="tagIds")] = None
    r"""An array of IDs of tags to associate with this address."""
