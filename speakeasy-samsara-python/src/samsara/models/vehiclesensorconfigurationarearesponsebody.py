"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .sensorresponsebody import SensorResponseBody, SensorResponseBodyTypedDict
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Position(str, Enum):
    r"""Position of the area on vehicle  Valid values: `back`, `front`, `middle`"""

    BACK = "back"
    FRONT = "front"
    MIDDLE = "middle"


class VehicleSensorConfigurationAreaResponseBodyTypedDict(TypedDict):
    r"""A configured sensor area on the vehicle with its associated sensors"""

    position: Position
    r"""Position of the area on vehicle  Valid values: `back`, `front`, `middle`"""
    cargo_sensors: NotRequired[List[SensorResponseBodyTypedDict]]
    humidity_sensors: NotRequired[List[SensorResponseBodyTypedDict]]
    temperature_sensors: NotRequired[List[SensorResponseBodyTypedDict]]


class VehicleSensorConfigurationAreaResponseBody(BaseModel):
    r"""A configured sensor area on the vehicle with its associated sensors"""

    position: Position
    r"""Position of the area on vehicle  Valid values: `back`, `front`, `middle`"""

    cargo_sensors: Annotated[
        Optional[List[SensorResponseBody]], pydantic.Field(alias="cargoSensors")
    ] = None

    humidity_sensors: Annotated[
        Optional[List[SensorResponseBody]], pydantic.Field(alias="humiditySensors")
    ] = None

    temperature_sensors: Annotated[
        Optional[List[SensorResponseBody]], pydantic.Field(alias="temperatureSensors")
    ] = None
