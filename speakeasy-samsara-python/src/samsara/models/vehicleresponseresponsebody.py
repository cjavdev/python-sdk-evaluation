"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class VehicleResponseResponseBodyAssetType(str, Enum):
    r"""The type of the asset.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`"""

    UNCATEGORIZED = "uncategorized"
    TRAILER = "trailer"
    EQUIPMENT = "equipment"
    UNPOWERED = "unpowered"
    VEHICLE = "vehicle"


class VehicleResponseResponseBodyTypedDict(TypedDict):
    r"""A vehicle object"""

    asset_type: NotRequired[VehicleResponseResponseBodyAssetType]
    r"""The type of the asset.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`"""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    id: NotRequired[str]
    r"""ID of the vehicle"""
    license_plate: NotRequired[str]
    r"""The license plate of the vehicle."""
    name: NotRequired[str]
    r"""Name of the vehicle"""
    vehicle_vin: NotRequired[str]
    r"""The VIN of the vehicle."""


class VehicleResponseResponseBody(BaseModel):
    r"""A vehicle object"""

    asset_type: Annotated[
        Optional[VehicleResponseResponseBodyAssetType],
        pydantic.Field(alias="assetType"),
    ] = None
    r"""The type of the asset.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`"""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    id: Optional[str] = None
    r"""ID of the vehicle"""

    license_plate: Annotated[Optional[str], pydantic.Field(alias="licensePlate")] = None
    r"""The license plate of the vehicle."""

    name: Optional[str] = None
    r"""Name of the vehicle"""

    vehicle_vin: Annotated[Optional[str], pydantic.Field(alias="vehicleVin")] = None
    r"""The VIN of the vehicle."""
