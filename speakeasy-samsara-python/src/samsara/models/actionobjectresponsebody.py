"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .actionparamsobjectresponsebody import (
    ActionParamsObjectResponseBody,
    ActionParamsObjectResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ActionObjectResponseBodyTypedDict(TypedDict):
    r"""Action to take."""

    action_type_id: int
    r"""The id of the of the action type. Reference the following list for the ids:
    The following action types are in Beta:
    Driver App Push = 5
    The following action types are Stable:
    Notification (Email, Text, Samsara Fleet Push) = 1
    Dashboard Notification = 3
    Webhook = 4
    Slack = 6

    """
    action_params: NotRequired[ActionParamsObjectResponseBodyTypedDict]
    r"""The action type specific details. Set webhookIds for Slack or Webhook actions. Set recipients for Notifications. Set driverAppNotification for Driver App Push. Other action types don't need to set a param."""


class ActionObjectResponseBody(BaseModel):
    r"""Action to take."""

    action_type_id: Annotated[int, pydantic.Field(alias="actionTypeId")]
    r"""The id of the of the action type. Reference the following list for the ids:
    The following action types are in Beta:
    Driver App Push = 5
    The following action types are Stable:
    Notification (Email, Text, Samsara Fleet Push) = 1
    Dashboard Notification = 3
    Webhook = 4
    Slack = 6

    """

    action_params: Annotated[
        Optional[ActionParamsObjectResponseBody], pydantic.Field(alias="actionParams")
    ] = None
    r"""The action type specific details. Set webhookIds for Slack or Webhook actions. Set recipients for Notifications. Set driverAppNotification for Driver App Push. Other action types don't need to set a param."""
