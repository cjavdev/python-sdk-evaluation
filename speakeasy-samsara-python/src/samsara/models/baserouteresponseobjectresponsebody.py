"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .goadrivertinyresponseresponsebody import (
    GoaDriverTinyResponseResponseBody,
    GoaDriverTinyResponseResponseBodyTypedDict,
)
from .goavehicletinyresponseresponsebody import (
    GoaVehicleTinyResponseResponseBody,
    GoaVehicleTinyResponseResponseBodyTypedDict,
)
from .livesharinglinkresponseobjectresponsebody import (
    LiveSharingLinkResponseObjectResponseBody,
    LiveSharingLinkResponseObjectResponseBodyTypedDict,
)
from .routesettingsresponsebody import (
    RouteSettingsResponseBody,
    RouteSettingsResponseBodyTypedDict,
)
from .routesstopresponseobjectresponsebody import (
    RoutesStopResponseObjectResponseBody,
    RoutesStopResponseObjectResponseBodyTypedDict,
)
from datetime import datetime
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class BaseRouteResponseObjectResponseBodyTypedDict(TypedDict):
    id: str
    r"""ID of the route"""
    actual_route_end_time: NotRequired[datetime]
    r"""Actual end time, if it exists, for the route in RFC 3339 format."""
    actual_route_start_time: NotRequired[datetime]
    r"""Actual start time, if it exists, for the route in RFC 3339 format."""
    driver: NotRequired[GoaDriverTinyResponseResponseBodyTypedDict]
    r"""A minified driver object. This object is only returned if the route is assigned to the driver."""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    name: NotRequired[str]
    r"""Route name"""
    notes: NotRequired[str]
    r"""Notes for the route"""
    org_local_timezone: NotRequired[str]
    r"""The local timezone, as defined in Settings for your organization. Timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html)."""
    recurring_route_live_sharing_links: NotRequired[
        List[LiveSharingLinkResponseObjectResponseBodyTypedDict]
    ]
    r"""List of shareable, non-expired 'By recurring Route' Live Sharing Links."""
    scheduled_route_end_time: NotRequired[datetime]
    r"""Scheduled end time, if it exists, for the route in RFC 3339 format."""
    scheduled_route_start_time: NotRequired[datetime]
    r"""Scheduled start time, if it exists, for the route in RFC 3339 format."""
    settings: NotRequired[RouteSettingsResponseBodyTypedDict]
    r"""An optional dictionary, only necessary to override the defaults for route start and end conditions."""
    stops: NotRequired[List[RoutesStopResponseObjectResponseBodyTypedDict]]
    r"""List of stops along the route"""
    vehicle: NotRequired[GoaVehicleTinyResponseResponseBodyTypedDict]
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""


class BaseRouteResponseObjectResponseBody(BaseModel):
    id: str
    r"""ID of the route"""

    actual_route_end_time: Annotated[
        Optional[datetime], pydantic.Field(alias="actualRouteEndTime")
    ] = None
    r"""Actual end time, if it exists, for the route in RFC 3339 format."""

    actual_route_start_time: Annotated[
        Optional[datetime], pydantic.Field(alias="actualRouteStartTime")
    ] = None
    r"""Actual start time, if it exists, for the route in RFC 3339 format."""

    driver: Optional[GoaDriverTinyResponseResponseBody] = None
    r"""A minified driver object. This object is only returned if the route is assigned to the driver."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    name: Optional[str] = None
    r"""Route name"""

    notes: Optional[str] = None
    r"""Notes for the route"""

    org_local_timezone: Annotated[
        Optional[str], pydantic.Field(alias="orgLocalTimezone")
    ] = None
    r"""The local timezone, as defined in Settings for your organization. Timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html)."""

    recurring_route_live_sharing_links: Annotated[
        Optional[List[LiveSharingLinkResponseObjectResponseBody]],
        pydantic.Field(alias="recurringRouteLiveSharingLinks"),
    ] = None
    r"""List of shareable, non-expired 'By recurring Route' Live Sharing Links."""

    scheduled_route_end_time: Annotated[
        Optional[datetime], pydantic.Field(alias="scheduledRouteEndTime")
    ] = None
    r"""Scheduled end time, if it exists, for the route in RFC 3339 format."""

    scheduled_route_start_time: Annotated[
        Optional[datetime], pydantic.Field(alias="scheduledRouteStartTime")
    ] = None
    r"""Scheduled start time, if it exists, for the route in RFC 3339 format."""

    settings: Optional[RouteSettingsResponseBody] = None
    r"""An optional dictionary, only necessary to override the defaults for route start and end conditions."""

    stops: Optional[List[RoutesStopResponseObjectResponseBody]] = None
    r"""List of stops along the route"""

    vehicle: Optional[GoaVehicleTinyResponseResponseBody] = None
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""
