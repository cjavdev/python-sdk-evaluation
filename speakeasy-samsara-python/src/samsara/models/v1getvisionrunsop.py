"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1visionrunsresponse import V1VisionRunsResponse, V1VisionRunsResponseTypedDict
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class V1getVisionRunsRequestTypedDict(TypedDict):
    duration_ms: int
    r"""DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"""
    end_ms: NotRequired[int]
    r"""EndMs is an optional param. It will default to the current time."""


class V1getVisionRunsRequest(BaseModel):
    duration_ms: Annotated[
        int,
        pydantic.Field(alias="durationMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"""

    end_ms: Annotated[
        Optional[int],
        pydantic.Field(alias="endMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""EndMs is an optional param. It will default to the current time."""


V1getVisionRunsResponseTypedDict = TypeAliasType(
    "V1getVisionRunsResponseTypedDict", Union[V1VisionRunsResponseTypedDict, str]
)


V1getVisionRunsResponse = TypeAliasType(
    "V1getVisionRunsResponse", Union[V1VisionRunsResponse, str]
)
