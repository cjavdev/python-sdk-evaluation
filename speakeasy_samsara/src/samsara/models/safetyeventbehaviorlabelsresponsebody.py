"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class SafetyEventBehaviorLabelsResponseBodyType(str, Enum):
    r"""Type of the BehaviorLabel.  Valid values: `Acceleration`, `Braking`, `Crash`, `DefensiveDriving`, `DidNotYield`, `Drinking`, `Drowsy`, `Eating`, `EatingDrinking`, `EdgeDistractedDriving`, `EdgeRailroadCrossingViolation`, `FollowingDistance`, `FollowingDistanceModerate`, `FollowingDistanceSevere`, `ForwardCollisionWarning`, `GenericDistraction`, `GenericTailgating`, `HarshTurn`, `Invalid`, `LaneDeparture`, `LateResponse`, `MobileUsage`, `NearCollison`, `NoSeatbelt`, `ObstructedCamera`, `PolicyViolationMask`, `RanRedLight`, `RollingStop`, `RolloverProtection`, `Smoking`, `Speeding`, `VulnerableRoadUserCollisionWarning`, `YawControl`"""

    ACCELERATION = "Acceleration"
    BRAKING = "Braking"
    CRASH = "Crash"
    DEFENSIVE_DRIVING = "DefensiveDriving"
    DID_NOT_YIELD = "DidNotYield"
    DRINKING = "Drinking"
    DROWSY = "Drowsy"
    EATING = "Eating"
    EATING_DRINKING = "EatingDrinking"
    EDGE_DISTRACTED_DRIVING = "EdgeDistractedDriving"
    EDGE_RAILROAD_CROSSING_VIOLATION = "EdgeRailroadCrossingViolation"
    FOLLOWING_DISTANCE = "FollowingDistance"
    FOLLOWING_DISTANCE_MODERATE = "FollowingDistanceModerate"
    FOLLOWING_DISTANCE_SEVERE = "FollowingDistanceSevere"
    FORWARD_COLLISION_WARNING = "ForwardCollisionWarning"
    GENERIC_DISTRACTION = "GenericDistraction"
    GENERIC_TAILGATING = "GenericTailgating"
    HARSH_TURN = "HarshTurn"
    INVALID = "Invalid"
    LANE_DEPARTURE = "LaneDeparture"
    LATE_RESPONSE = "LateResponse"
    MOBILE_USAGE = "MobileUsage"
    NEAR_COLLISON = "NearCollison"
    NO_SEATBELT = "NoSeatbelt"
    OBSTRUCTED_CAMERA = "ObstructedCamera"
    POLICY_VIOLATION_MASK = "PolicyViolationMask"
    RAN_RED_LIGHT = "RanRedLight"
    ROLLING_STOP = "RollingStop"
    ROLLOVER_PROTECTION = "RolloverProtection"
    SMOKING = "Smoking"
    SPEEDING = "Speeding"
    VULNERABLE_ROAD_USER_COLLISION_WARNING = "VulnerableRoadUserCollisionWarning"
    YAW_CONTROL = "YawControl"


class SafetyEventBehaviorLabelsResponseBodyTypedDict(TypedDict):
    r"""Behavior label for a safety event."""

    name: NotRequired[str]
    r"""Name of the behavior label."""
    type: NotRequired[SafetyEventBehaviorLabelsResponseBodyType]
    r"""Type of the BehaviorLabel.  Valid values: `Acceleration`, `Braking`, `Crash`, `DefensiveDriving`, `DidNotYield`, `Drinking`, `Drowsy`, `Eating`, `EatingDrinking`, `EdgeDistractedDriving`, `EdgeRailroadCrossingViolation`, `FollowingDistance`, `FollowingDistanceModerate`, `FollowingDistanceSevere`, `ForwardCollisionWarning`, `GenericDistraction`, `GenericTailgating`, `HarshTurn`, `Invalid`, `LaneDeparture`, `LateResponse`, `MobileUsage`, `NearCollison`, `NoSeatbelt`, `ObstructedCamera`, `PolicyViolationMask`, `RanRedLight`, `RollingStop`, `RolloverProtection`, `Smoking`, `Speeding`, `VulnerableRoadUserCollisionWarning`, `YawControl`"""


class SafetyEventBehaviorLabelsResponseBody(BaseModel):
    r"""Behavior label for a safety event."""

    name: Optional[str] = None
    r"""Name of the behavior label."""

    type: Optional[SafetyEventBehaviorLabelsResponseBodyType] = None
    r"""Type of the BehaviorLabel.  Valid values: `Acceleration`, `Braking`, `Crash`, `DefensiveDriving`, `DidNotYield`, `Drinking`, `Drowsy`, `Eating`, `EatingDrinking`, `EdgeDistractedDriving`, `EdgeRailroadCrossingViolation`, `FollowingDistance`, `FollowingDistanceModerate`, `FollowingDistanceSevere`, `ForwardCollisionWarning`, `GenericDistraction`, `GenericTailgating`, `HarshTurn`, `Invalid`, `LaneDeparture`, `LateResponse`, `MobileUsage`, `NearCollison`, `NoSeatbelt`, `ObstructedCamera`, `PolicyViolationMask`, `RanRedLight`, `RollingStop`, `RolloverProtection`, `Smoking`, `Speeding`, `VulnerableRoadUserCollisionWarning`, `YawControl`"""
