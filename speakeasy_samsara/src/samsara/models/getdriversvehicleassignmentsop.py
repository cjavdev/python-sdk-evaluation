"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .driversvehicleassignmentsgetdriversvehicleassignmentsbadrequesterrorresponsebody import (
    DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestErrorResponseBody,
    DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestErrorResponseBodyTypedDict,
)
from .driversvehicleassignmentsgetdriversvehicleassignmentsresponsebody import (
    DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody,
    DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetDriversVehicleAssignmentsQueryParamDriverActivationStatus(str, Enum):
    r"""If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"""

    ACTIVE = "active"
    DEACTIVATED = "deactivated"


class GetDriversVehicleAssignmentsRequestTypedDict(TypedDict):
    driver_ids: NotRequired[List[str]]
    r"""A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"""
    start_time: NotRequired[str]
    r"""A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."""
    end_time: NotRequired[str]
    r"""An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."""
    tag_ids: NotRequired[str]
    r"""A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`"""
    parent_tag_ids: NotRequired[str]
    r"""A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"""
    driver_activation_status: NotRequired[
        GetDriversVehicleAssignmentsQueryParamDriverActivationStatus
    ]
    r"""If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"""
    after: NotRequired[str]
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""


class GetDriversVehicleAssignmentsRequest(BaseModel):
    driver_ids: Annotated[
        Optional[List[str]],
        pydantic.Field(alias="driverIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`"""

    start_time: Annotated[
        Optional[str],
        pydantic.Field(alias="startTime"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."""

    end_time: Annotated[
        Optional[str],
        pydantic.Field(alias="endTime"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days."""

    tag_ids: Annotated[
        Optional[str],
        pydantic.Field(alias="tagIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`"""

    parent_tag_ids: Annotated[
        Optional[str],
        pydantic.Field(alias="parentTagIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`"""

    driver_activation_status: Annotated[
        Optional[GetDriversVehicleAssignmentsQueryParamDriverActivationStatus],
        pydantic.Field(alias="driverActivationStatus"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = GetDriversVehicleAssignmentsQueryParamDriverActivationStatus.ACTIVE
    r"""If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`"""

    after: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""


GetDriversVehicleAssignmentsResponseTypedDict = TypeAliasType(
    "GetDriversVehicleAssignmentsResponseTypedDict",
    Union[
        DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBodyTypedDict,
        DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestErrorResponseBodyTypedDict,
    ],
)


GetDriversVehicleAssignmentsResponse = TypeAliasType(
    "GetDriversVehicleAssignmentsResponse",
    Union[
        DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody,
        DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestErrorResponseBody,
    ],
)
