"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .attributetiny import AttributeTiny, AttributeTinyTypedDict
from .driveractivationstatus import DriverActivationStatus
from .drivercarriersettings import DriverCarrierSettings, DriverCarrierSettingsTypedDict
from .drivereldsettings import DriverEldSettings, DriverEldSettingsTypedDict
from .driverexternalids import DriverExternalIds, DriverExternalIdsTypedDict
from .driverlocale import DriverLocale
from .driverstaticassignedvehicle import (
    DriverStaticAssignedVehicle,
    DriverStaticAssignedVehicleTypedDict,
)
from .drivervehiclegrouptag import DriverVehicleGroupTag, DriverVehicleGroupTagTypedDict
from .tagtinyresponse import TagTinyResponse, TagTinyResponseTypedDict
from .usdriverrulesetoverride import (
    UsDriverRulesetOverride,
    UsDriverRulesetOverrideTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DriverTypedDict(TypedDict):
    r"""A driver object"""

    attributes: NotRequired[List[AttributeTinyTypedDict]]
    r"""A minified attribute"""
    carrier_settings: NotRequired[DriverCarrierSettingsTypedDict]
    r"""Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver."""
    created_at_time: NotRequired[str]
    r"""The date and time this driver was created in RFC 3339 format."""
    current_id_card_code: NotRequired[str]
    r"""The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature."""
    driver_activation_status: NotRequired[DriverActivationStatus]
    r"""A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`."""
    eld_adverse_weather_exemption_enabled: NotRequired[bool]
    r"""Flag indicating this driver may use Adverse Weather exemptions in ELD logs."""
    eld_big_day_exemption_enabled: NotRequired[bool]
    r"""Flag indicating this driver may use Big Day exemption in ELD logs."""
    eld_day_start_hour: NotRequired[int]
    r"""`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours."""
    eld_exempt: NotRequired[bool]
    r"""Flag indicating this driver is exempt from the Electronic Logging Mandate."""
    eld_exempt_reason: NotRequired[str]
    r"""Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt)."""
    eld_pc_enabled: NotRequired[bool]
    r"""Flag indicating this driver may select the Personal Conveyance duty status in ELD logs."""
    eld_settings: NotRequired[DriverEldSettingsTypedDict]
    r"""The driver's ELD settings."""
    eld_ym_enabled: NotRequired[bool]
    r"""Flag indicating this driver may select the Yard Move duty status in ELD logs."""
    external_ids: NotRequired[DriverExternalIdsTypedDict]
    r"""The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object."""
    has_driving_features_hidden: NotRequired[bool]
    r"""A boolean indicating whether the driver has driving-related features hidden in the Driver App, including Vehicle selection, HOS, Routing, Team Driving, Documents, and Trip Logs. Default value is false if omitted. Note: only available to customers of Connected Forms."""
    id: NotRequired[str]
    r"""Samsara ID for the driver."""
    is_deactivated: NotRequired[bool]
    r"""[DEPRECATED] A boolean indicating whether or not the driver is deactivated. Use `driverActivationStatus` instead."""
    license_number: NotRequired[str]
    r"""Driver's state issued license number. The combination of this number and `licenseState` must be unique."""
    license_state: NotRequired[str]
    r"""Abbreviation of US state, Canadian province, or US territory that issued driver's license."""
    locale: NotRequired[DriverLocale]
    r"""Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`."""
    name: NotRequired[str]
    r"""Driver's name."""
    notes: NotRequired[str]
    r"""Notes about the driver."""
    peer_group_tag: NotRequired[TagTinyResponseTypedDict]
    r"""A minified tag object"""
    phone: NotRequired[str]
    r"""Phone number of the driver."""
    static_assigned_vehicle: NotRequired[DriverStaticAssignedVehicleTypedDict]
    r"""Vehicle assigned to the driver for static vehicle assignments. (uncommon)."""
    tachograph_card_number: NotRequired[str]
    r"""Driver's assigned tachograph card number (Europe specific)"""
    tags: NotRequired[List[TagTinyResponseTypedDict]]
    r"""The tags this driver belongs to."""
    timezone: NotRequired[str]
    r"""Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html)."""
    updated_at_time: NotRequired[str]
    r"""The date and time this driver was last updated in RFC 3339 format."""
    us_driver_ruleset_override: NotRequired[UsDriverRulesetOverrideTypedDict]
    r"""US Driver Ruleset override for a given driver. If the driver is operating under a ruleset different from the organization default, the override is used. Updating this value only updates the override setting for this driver. Explicitly setting this field to `null` will delete driver's ruleset override. If the driver does not have an override ruleset set, the response will not include any usDriverRulesetOverride information."""
    username: NotRequired[str]
    r"""Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique."""
    vehicle_group_tag: NotRequired[DriverVehicleGroupTagTypedDict]
    r"""Tag which determines which vehicles a driver will see when selecting vehicles."""
    waiting_time_duty_status_enabled: NotRequired[bool]
    r"""Flag indicating this driver may select waiting time duty status in ELD logs."""


class Driver(BaseModel):
    r"""A driver object"""

    attributes: Optional[List[AttributeTiny]] = None
    r"""A minified attribute"""

    carrier_settings: Annotated[
        Optional[DriverCarrierSettings], pydantic.Field(alias="carrierSettings")
    ] = None
    r"""Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver."""

    created_at_time: Annotated[Optional[str], pydantic.Field(alias="createdAtTime")] = (
        None
    )
    r"""The date and time this driver was created in RFC 3339 format."""

    current_id_card_code: Annotated[
        Optional[str], pydantic.Field(alias="currentIdCardCode")
    ] = None
    r"""The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature."""

    driver_activation_status: Annotated[
        Optional[DriverActivationStatus], pydantic.Field(alias="driverActivationStatus")
    ] = None
    r"""A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`."""

    eld_adverse_weather_exemption_enabled: Annotated[
        Optional[bool], pydantic.Field(alias="eldAdverseWeatherExemptionEnabled")
    ] = False
    r"""Flag indicating this driver may use Adverse Weather exemptions in ELD logs."""

    eld_big_day_exemption_enabled: Annotated[
        Optional[bool], pydantic.Field(alias="eldBigDayExemptionEnabled")
    ] = False
    r"""Flag indicating this driver may use Big Day exemption in ELD logs."""

    eld_day_start_hour: Annotated[
        Optional[int], pydantic.Field(alias="eldDayStartHour")
    ] = 0
    r"""`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours."""

    eld_exempt: Annotated[Optional[bool], pydantic.Field(alias="eldExempt")] = False
    r"""Flag indicating this driver is exempt from the Electronic Logging Mandate."""

    eld_exempt_reason: Annotated[
        Optional[str], pydantic.Field(alias="eldExemptReason")
    ] = None
    r"""Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt)."""

    eld_pc_enabled: Annotated[Optional[bool], pydantic.Field(alias="eldPcEnabled")] = (
        False
    )
    r"""Flag indicating this driver may select the Personal Conveyance duty status in ELD logs."""

    eld_settings: Annotated[
        Optional[DriverEldSettings], pydantic.Field(alias="eldSettings")
    ] = None
    r"""The driver's ELD settings."""

    eld_ym_enabled: Annotated[Optional[bool], pydantic.Field(alias="eldYmEnabled")] = (
        False
    )
    r"""Flag indicating this driver may select the Yard Move duty status in ELD logs."""

    external_ids: Annotated[
        Optional[DriverExternalIds], pydantic.Field(alias="externalIds")
    ] = None
    r"""The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object."""

    has_driving_features_hidden: Annotated[
        Optional[bool], pydantic.Field(alias="hasDrivingFeaturesHidden")
    ] = None
    r"""A boolean indicating whether the driver has driving-related features hidden in the Driver App, including Vehicle selection, HOS, Routing, Team Driving, Documents, and Trip Logs. Default value is false if omitted. Note: only available to customers of Connected Forms."""

    id: Optional[str] = None
    r"""Samsara ID for the driver."""

    is_deactivated: Annotated[Optional[bool], pydantic.Field(alias="isDeactivated")] = (
        None
    )
    r"""[DEPRECATED] A boolean indicating whether or not the driver is deactivated. Use `driverActivationStatus` instead."""

    license_number: Annotated[Optional[str], pydantic.Field(alias="licenseNumber")] = (
        None
    )
    r"""Driver's state issued license number. The combination of this number and `licenseState` must be unique."""

    license_state: Annotated[Optional[str], pydantic.Field(alias="licenseState")] = None
    r"""Abbreviation of US state, Canadian province, or US territory that issued driver's license."""

    locale: Optional[DriverLocale] = None
    r"""Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`."""

    name: Optional[str] = None
    r"""Driver's name."""

    notes: Optional[str] = None
    r"""Notes about the driver."""

    peer_group_tag: Annotated[
        Optional[TagTinyResponse], pydantic.Field(alias="peerGroupTag")
    ] = None
    r"""A minified tag object"""

    phone: Optional[str] = None
    r"""Phone number of the driver."""

    static_assigned_vehicle: Annotated[
        Optional[DriverStaticAssignedVehicle],
        pydantic.Field(alias="staticAssignedVehicle"),
    ] = None
    r"""Vehicle assigned to the driver for static vehicle assignments. (uncommon)."""

    tachograph_card_number: Annotated[
        Optional[str], pydantic.Field(alias="tachographCardNumber")
    ] = None
    r"""Driver's assigned tachograph card number (Europe specific)"""

    tags: Optional[List[TagTinyResponse]] = None
    r"""The tags this driver belongs to."""

    timezone: Optional[str] = "America/Los_Angeles"
    r"""Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html)."""

    updated_at_time: Annotated[Optional[str], pydantic.Field(alias="updatedAtTime")] = (
        None
    )
    r"""The date and time this driver was last updated in RFC 3339 format."""

    us_driver_ruleset_override: Annotated[
        Optional[UsDriverRulesetOverride],
        pydantic.Field(alias="usDriverRulesetOverride"),
    ] = None
    r"""US Driver Ruleset override for a given driver. If the driver is operating under a ruleset different from the organization default, the override is used. Updating this value only updates the override setting for this driver. Explicitly setting this field to `null` will delete driver's ruleset override. If the driver does not have an override ruleset set, the response will not include any usDriverRulesetOverride information."""

    username: Optional[str] = None
    r"""Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique."""

    vehicle_group_tag: Annotated[
        Optional[DriverVehicleGroupTag], pydantic.Field(alias="vehicleGroupTag")
    ] = None
    r"""Tag which determines which vehicles a driver will see when selecting vehicles."""

    waiting_time_duty_status_enabled: Annotated[
        Optional[bool], pydantic.Field(alias="waitingTimeDutyStatusEnabled")
    ] = False
    r"""Flag indicating this driver may select waiting time duty status in ELD logs."""
