"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1asset_cable import V1AssetCable, V1AssetCableTypedDict
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1AssetTypedDict(TypedDict):
    r"""Basic information of an asset"""

    id: int
    r"""Asset ID"""
    asset_serial_number: NotRequired[str]
    r"""Serial number of the host asset"""
    cable: NotRequired[V1AssetCableTypedDict]
    r"""The cable connected to the asset"""
    engine_hours: NotRequired[int]
    r"""Engine hours"""
    name: NotRequired[str]
    r"""Asset name"""
    vehicle_id: NotRequired[int]
    r"""The ID of the Vehicle associated to the Asset (if present)"""


class V1Asset(BaseModel):
    r"""Basic information of an asset"""

    id: int
    r"""Asset ID"""

    asset_serial_number: Annotated[
        Optional[str], pydantic.Field(alias="assetSerialNumber")
    ] = None
    r"""Serial number of the host asset"""

    cable: Optional[V1AssetCable] = None
    r"""The cable connected to the asset"""

    engine_hours: Annotated[Optional[int], pydantic.Field(alias="engineHours")] = None
    r"""Engine hours"""

    name: Optional[str] = None
    r"""Asset name"""

    vehicle_id: Annotated[Optional[int], pydantic.Field(alias="vehicleId")] = None
    r"""The ID of the Vehicle associated to the Asset (if present)"""
