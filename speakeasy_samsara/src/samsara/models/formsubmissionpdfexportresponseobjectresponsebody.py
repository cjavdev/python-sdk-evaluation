"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FormSubmissionPdfExportResponseObjectResponseBodyJobStatus(str, Enum):
    r"""Status of the PDF export job.  Valid values: `unknown`, `pending`, `done`, `failed`"""

    UNKNOWN = "unknown"
    PENDING = "pending"
    DONE = "done"
    FAILED = "failed"


class FormSubmissionPdfExportResponseObjectResponseBodyTypedDict(TypedDict):
    r"""Form Submission PDF export response object."""

    expires_at_time: datetime
    r"""Time when the PDF export job expires. After expiration, GET requests for this job will fail and clients must create a new one with another POST request. UTC timestamp in RFC 3339 format."""
    id: str
    r"""ID of the form submission being exported."""
    job_status: FormSubmissionPdfExportResponseObjectResponseBodyJobStatus
    r"""Status of the PDF export job.  Valid values: `unknown`, `pending`, `done`, `failed`"""
    pdf_id: str
    r"""Unique ID for the PDF export that is created."""
    requested_at_time: datetime
    r"""Time when the PDF export POST request was made. UTC timestamp in RFC 3339 format."""
    completed_at_time: NotRequired[datetime]
    r"""Time when the PDF export job was completed. Included if 'jobStatus' is 'done'. UTC timestamp in RFC 3339 format."""
    error_message: NotRequired[str]
    r"""An error message for failed PDF export jobs. Included if 'jobStatus' is 'failed'."""
    pdf_url: NotRequired[str]
    r"""URL to download the PDF file. Expires at time specified in 'pdfUrlExpiresAtTime'. Included if 'jobStatus' is 'done'."""
    pdf_url_expires_at_time: NotRequired[datetime]
    r"""Time when the PDF export's 'pdfUrl' expires. After expiration, clients can retrieve a fresh url with another GET request. UTC timestamp in RFC 3339 format."""


class FormSubmissionPdfExportResponseObjectResponseBody(BaseModel):
    r"""Form Submission PDF export response object."""

    expires_at_time: Annotated[datetime, pydantic.Field(alias="expiresAtTime")]
    r"""Time when the PDF export job expires. After expiration, GET requests for this job will fail and clients must create a new one with another POST request. UTC timestamp in RFC 3339 format."""

    id: str
    r"""ID of the form submission being exported."""

    job_status: Annotated[
        FormSubmissionPdfExportResponseObjectResponseBodyJobStatus,
        pydantic.Field(alias="jobStatus"),
    ]
    r"""Status of the PDF export job.  Valid values: `unknown`, `pending`, `done`, `failed`"""

    pdf_id: Annotated[str, pydantic.Field(alias="pdfId")]
    r"""Unique ID for the PDF export that is created."""

    requested_at_time: Annotated[datetime, pydantic.Field(alias="requestedAtTime")]
    r"""Time when the PDF export POST request was made. UTC timestamp in RFC 3339 format."""

    completed_at_time: Annotated[
        Optional[datetime], pydantic.Field(alias="completedAtTime")
    ] = None
    r"""Time when the PDF export job was completed. Included if 'jobStatus' is 'done'. UTC timestamp in RFC 3339 format."""

    error_message: Annotated[Optional[str], pydantic.Field(alias="errorMessage")] = None
    r"""An error message for failed PDF export jobs. Included if 'jobStatus' is 'failed'."""

    pdf_url: Annotated[Optional[str], pydantic.Field(alias="pdfUrl")] = None
    r"""URL to download the PDF file. Expires at time specified in 'pdfUrlExpiresAtTime'. Included if 'jobStatus' is 'done'."""

    pdf_url_expires_at_time: Annotated[
        Optional[datetime], pydantic.Field(alias="pdfUrlExpiresAtTime")
    ] = None
    r"""Time when the PDF export's 'pdfUrl' expires. After expiration, clients can retrieve a fresh url with another GET request. UTC timestamp in RFC 3339 format."""
