"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List
from typing_extensions import Annotated, TypedDict


class Inputs(str, Enum):
    r"""input  Valid values: `dashcamRoadFacing`, `dashcamDriverFacing`, `analog`"""

    DASHCAM_ROAD_FACING = "dashcamRoadFacing"
    DASHCAM_DRIVER_FACING = "dashcamDriverFacing"
    ANALOG = "analog"


class MediaRetrievalPostMediaRetrievalRequestBodyMediaType(str, Enum):
    r"""The desired media type. If a video is requested, endTime must be after startTime. If an image is requested, endTime must be the same as startTime. Must be one of: IMAGE, VIDEO_HIGH_RES, VIDEO_LOW_RES. Examples: IMAGE, VIDEO_HIGH_RES, VIDEO_LOW_RES  Valid values: `IMAGE`, `VIDEO_HIGH_RES`, `VIDEO_LOW_RES`"""

    IMAGE = "IMAGE"
    VIDEO_HIGH_RES = "VIDEO_HIGH_RES"
    VIDEO_LOW_RES = "VIDEO_LOW_RES"


class MediaRetrievalPostMediaRetrievalRequestBodyTypedDict(TypedDict):
    end_time: str
    r"""An end time in RFC 3339 format. If endTime is the same as startTime, an image will be captured at startTime. Must be equal to or after startTime and no more than 60 seconds after startTime (Examples: 2019-06-13T19:08:55Z, 2019-06-13T19:08:55.455Z, OR 2015-09-15T14:00:42-04:00)."""
    inputs: List[Inputs]
    r"""A list of desired camera inputs for which to capture media. Only media with valid inputs (e.g. device has that input stream and device was recording at the time) will be uploaded. An empty list is invalid."""
    media_type: MediaRetrievalPostMediaRetrievalRequestBodyMediaType
    r"""The desired media type. If a video is requested, endTime must be after startTime. If an image is requested, endTime must be the same as startTime. Must be one of: IMAGE, VIDEO_HIGH_RES, VIDEO_LOW_RES. Examples: IMAGE, VIDEO_HIGH_RES, VIDEO_LOW_RES  Valid values: `IMAGE`, `VIDEO_HIGH_RES`, `VIDEO_LOW_RES`"""
    start_time: str
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    vehicle_id: str
    r"""Vehicle ID for which to initiate media capture. Examples: 1234"""


class MediaRetrievalPostMediaRetrievalRequestBody(BaseModel):
    end_time: Annotated[str, pydantic.Field(alias="endTime")]
    r"""An end time in RFC 3339 format. If endTime is the same as startTime, an image will be captured at startTime. Must be equal to or after startTime and no more than 60 seconds after startTime (Examples: 2019-06-13T19:08:55Z, 2019-06-13T19:08:55.455Z, OR 2015-09-15T14:00:42-04:00)."""

    inputs: List[Inputs]
    r"""A list of desired camera inputs for which to capture media. Only media with valid inputs (e.g. device has that input stream and device was recording at the time) will be uploaded. An empty list is invalid."""

    media_type: Annotated[
        MediaRetrievalPostMediaRetrievalRequestBodyMediaType,
        pydantic.Field(alias="mediaType"),
    ]
    r"""The desired media type. If a video is requested, endTime must be after startTime. If an image is requested, endTime must be the same as startTime. Must be one of: IMAGE, VIDEO_HIGH_RES, VIDEO_LOW_RES. Examples: IMAGE, VIDEO_HIGH_RES, VIDEO_LOW_RES  Valid values: `IMAGE`, `VIDEO_HIGH_RES`, `VIDEO_LOW_RES`"""

    start_time: Annotated[str, pydantic.Field(alias="startTime")]
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    vehicle_id: Annotated[str, pydantic.Field(alias="vehicleId")]
    r"""Vehicle ID for which to initiate media capture. Examples: 1234"""
