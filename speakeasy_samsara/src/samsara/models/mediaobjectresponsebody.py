"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .urlinfoobjectresponsebody import (
    URLInfoObjectResponseBody,
    URLInfoObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Input(str, Enum):
    r"""Input type for this media. Examples: dashcamDriverFacing  Valid values: `dashcamDriverFacing`, `dashcamRoadFacing`"""

    DASHCAM_DRIVER_FACING = "dashcamDriverFacing"
    DASHCAM_ROAD_FACING = "dashcamRoadFacing"


class MediaType(str, Enum):
    r"""Type of media. Examples: image  Valid values: `image`"""

    IMAGE = "image"


class MediaObjectResponseBodyStatus(str, Enum):
    r"""Status of the media. Examples: invalid, pending, requested, available.  Valid values: `available`, `invalid`, `pending`, `requested`"""

    AVAILABLE = "available"
    INVALID = "invalid"
    PENDING = "pending"
    REQUESTED = "requested"


class MediaObjectResponseBodyTypedDict(TypedDict):
    end_time: str
    r"""An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    input: Input
    r"""Input type for this media. Examples: dashcamDriverFacing  Valid values: `dashcamDriverFacing`, `dashcamRoadFacing`"""
    media_type: MediaType
    r"""Type of media. Examples: image  Valid values: `image`"""
    start_time: str
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    status: MediaObjectResponseBodyStatus
    r"""Status of the media. Examples: invalid, pending, requested, available.  Valid values: `available`, `invalid`, `pending`, `requested`"""
    vehicle_id: str
    r"""Vehicle ID for which this media was captured. Examples: 1234"""
    available_at_time: NotRequired[str]
    r"""Timestamp, in RFC 3339 format, at which the media item was made available. Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00"""
    url_info: NotRequired[URLInfoObjectResponseBodyTypedDict]
    r"""URL info for this piece of media. This field is only populated when the 'status' response field is 'available'"""


class MediaObjectResponseBody(BaseModel):
    end_time: Annotated[str, pydantic.Field(alias="endTime")]
    r"""An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    input: Input
    r"""Input type for this media. Examples: dashcamDriverFacing  Valid values: `dashcamDriverFacing`, `dashcamRoadFacing`"""

    media_type: Annotated[MediaType, pydantic.Field(alias="mediaType")]
    r"""Type of media. Examples: image  Valid values: `image`"""

    start_time: Annotated[str, pydantic.Field(alias="startTime")]
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    status: MediaObjectResponseBodyStatus
    r"""Status of the media. Examples: invalid, pending, requested, available.  Valid values: `available`, `invalid`, `pending`, `requested`"""

    vehicle_id: Annotated[str, pydantic.Field(alias="vehicleId")]
    r"""Vehicle ID for which this media was captured. Examples: 1234"""

    available_at_time: Annotated[
        Optional[str], pydantic.Field(alias="availableAtTime")
    ] = None
    r"""Timestamp, in RFC 3339 format, at which the media item was made available. Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00"""

    url_info: Annotated[
        Optional[URLInfoObjectResponseBody], pydantic.Field(alias="urlInfo")
    ] = None
    r"""URL info for this piece of media. This field is only populated when the 'status' response field is 'available'"""
