"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .trainingassignmentsposttrainingassignmentsbadrequesterrorresponsebody import (
    TrainingAssignmentsPostTrainingAssignmentsBadRequestErrorResponseBody,
    TrainingAssignmentsPostTrainingAssignmentsBadRequestErrorResponseBodyTypedDict,
)
from .trainingassignmentsposttrainingassignmentsresponsebody import (
    TrainingAssignmentsPostTrainingAssignmentsResponseBody,
    TrainingAssignmentsPostTrainingAssignmentsResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class PostTrainingAssignmentsRequestTypedDict(TypedDict):
    course_id: str
    r"""String for the course ID."""
    due_at_time: str
    r"""Due date of the training assignment in RFC 3339 format. Millisecond precision and timezones are supported."""
    learner_ids: List[str]
    r"""Optional string of comma separated learner IDs. If learner ID is present, training assignments for the specified learner(s) will be returned. Max value for this value is 100 objects. Example: `learnerIds=driver-281474,driver-46282156`"""


class PostTrainingAssignmentsRequest(BaseModel):
    course_id: Annotated[
        str,
        pydantic.Field(alias="courseId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""String for the course ID."""

    due_at_time: Annotated[
        str,
        pydantic.Field(alias="dueAtTime"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Due date of the training assignment in RFC 3339 format. Millisecond precision and timezones are supported."""

    learner_ids: Annotated[
        List[str],
        pydantic.Field(alias="learnerIds"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ]
    r"""Optional string of comma separated learner IDs. If learner ID is present, training assignments for the specified learner(s) will be returned. Max value for this value is 100 objects. Example: `learnerIds=driver-281474,driver-46282156`"""


PostTrainingAssignmentsResponseTypedDict = TypeAliasType(
    "PostTrainingAssignmentsResponseTypedDict",
    Union[
        TrainingAssignmentsPostTrainingAssignmentsResponseBodyTypedDict,
        TrainingAssignmentsPostTrainingAssignmentsBadRequestErrorResponseBodyTypedDict,
    ],
)


PostTrainingAssignmentsResponse = TypeAliasType(
    "PostTrainingAssignmentsResponse",
    Union[
        TrainingAssignmentsPostTrainingAssignmentsResponseBody,
        TrainingAssignmentsPostTrainingAssignmentsBadRequestErrorResponseBody,
    ],
)
