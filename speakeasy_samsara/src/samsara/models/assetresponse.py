"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .assetdataoutput import AssetDataOutput, AssetDataOutputTypedDict
from .assetlocation import AssetLocation, AssetLocationTypedDict
from .assetresponse_locationdatainput import (
    AssetResponseLocationDataInput,
    AssetResponseLocationDataInputTypedDict,
)
from .assetresponse_parentasset import (
    AssetResponseParentAsset,
    AssetResponseParentAssetTypedDict,
)
from .assetresponse_runningstatusdatainput import (
    AssetResponseRunningStatusDataInput,
    AssetResponseRunningStatusDataInputTypedDict,
)
from .locationtype import LocationType
from .tagtinyresponse import TagTinyResponse, TagTinyResponseTypedDict
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AssetResponseTypedDict(TypedDict):
    r"""Asset"""

    id: str
    r"""The id of the asset"""
    is_running: bool
    r"""The running status of the asset. Returns True for On, and False for Off."""
    name: str
    r"""The name of the asset."""
    custom_metadata: NotRequired[Dict[str, str]]
    r"""The custom fields of an asset."""
    data_outputs: NotRequired[List[AssetDataOutputTypedDict]]
    r"""The list of data outputs configured on the asset."""
    location: NotRequired[AssetLocationTypedDict]
    r"""For locationType \"point\", latitude and longitude are required. For \"address\", formattedAddress must be provided, and lat/long can be optionally included for displaying a dot on the assets map. For \"dataInput\", this object should not be passed in."""
    location_data_input: NotRequired[AssetResponseLocationDataInputTypedDict]
    r"""The associated location data input (only applicable when locationType is \"dataInput\")."""
    location_type: NotRequired[LocationType]
    r"""The format of the location. This field is required if a location is provided. Valid values: `point`, `address`, `dataInput`."""
    parent_asset: NotRequired[AssetResponseParentAssetTypedDict]
    r"""The asset's parent"""
    running_status_data_input: NotRequired[AssetResponseRunningStatusDataInputTypedDict]
    r"""The associated running status data input. isRunning will be true when the data input's value is 1."""
    tags: NotRequired[List[TagTinyResponseTypedDict]]
    r"""The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Industrial Asset. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time."""


class AssetResponse(BaseModel):
    r"""Asset"""

    id: str
    r"""The id of the asset"""

    is_running: Annotated[bool, pydantic.Field(alias="isRunning")]
    r"""The running status of the asset. Returns True for On, and False for Off."""

    name: str
    r"""The name of the asset."""

    custom_metadata: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="customMetadata")
    ] = None
    r"""The custom fields of an asset."""

    data_outputs: Annotated[
        Optional[List[AssetDataOutput]], pydantic.Field(alias="dataOutputs")
    ] = None
    r"""The list of data outputs configured on the asset."""

    location: Optional[AssetLocation] = None
    r"""For locationType \"point\", latitude and longitude are required. For \"address\", formattedAddress must be provided, and lat/long can be optionally included for displaying a dot on the assets map. For \"dataInput\", this object should not be passed in."""

    location_data_input: Annotated[
        Optional[AssetResponseLocationDataInput],
        pydantic.Field(alias="locationDataInput"),
    ] = None
    r"""The associated location data input (only applicable when locationType is \"dataInput\")."""

    location_type: Annotated[
        Optional[LocationType], pydantic.Field(alias="locationType")
    ] = None
    r"""The format of the location. This field is required if a location is provided. Valid values: `point`, `address`, `dataInput`."""

    parent_asset: Annotated[
        Optional[AssetResponseParentAsset], pydantic.Field(alias="parentAsset")
    ] = None
    r"""The asset's parent"""

    running_status_data_input: Annotated[
        Optional[AssetResponseRunningStatusDataInput],
        pydantic.Field(alias="runningStatusDataInput"),
    ] = None
    r"""The associated running status data input. isRunning will be true when the data input's value is 1."""

    tags: Optional[List[TagTinyResponse]] = None
    r"""The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Industrial Asset. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time."""
