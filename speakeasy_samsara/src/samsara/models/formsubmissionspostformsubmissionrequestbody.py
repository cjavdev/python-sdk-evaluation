"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .formsubmissionrequestassignedtorequestbody import (
    FormSubmissionRequestAssignedToRequestBody,
    FormSubmissionRequestAssignedToRequestBodyTypedDict,
)
from .formsubmissionrequestfieldinputobjectrequestbody import (
    FormSubmissionRequestFieldInputObjectRequestBody,
    FormSubmissionRequestFieldInputObjectRequestBodyTypedDict,
)
from .formtemplatereferenceobjectrequestbody import (
    FormTemplateReferenceObjectRequestBody,
    FormTemplateReferenceObjectRequestBodyTypedDict,
)
from datetime import datetime
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FormSubmissionsPostFormSubmissionRequestBodyStatus(str, Enum):
    r"""Status of the form submission.  Valid values: `toDo`"""

    TO_DO = "toDo"


class FormSubmissionsPostFormSubmissionRequestBodyTypedDict(TypedDict):
    r"""Form submission fields to create."""

    form_template: FormTemplateReferenceObjectRequestBodyTypedDict
    r"""Form template reference object."""
    status: FormSubmissionsPostFormSubmissionRequestBodyStatus
    r"""Status of the form submission.  Valid values: `toDo`"""
    assigned_to: NotRequired[FormSubmissionRequestAssignedToRequestBodyTypedDict]
    r"""Form submission assignee update object"""
    due_at_time: NotRequired[datetime]
    r"""Due date of the form submission. UTC timestamp in RFC 3339 format."""
    fields: NotRequired[List[FormSubmissionRequestFieldInputObjectRequestBodyTypedDict]]
    r"""List of field inputs in a form submission."""
    is_required: NotRequired[bool]
    r"""Indicates whether the worker is required to complete this form or not at a specific route stop. Defaults to `true` if the form is assigned to a user or driver. When true, the worker cannot depart the route stop until this form submission is `submitted`."""
    route_stop_id: NotRequired[str]
    r"""ID of the route stop the form submission is assigned to. Must be a unique Samsara ID."""
    title: NotRequired[str]
    r"""Title of the form submission."""


class FormSubmissionsPostFormSubmissionRequestBody(BaseModel):
    r"""Form submission fields to create."""

    form_template: Annotated[
        FormTemplateReferenceObjectRequestBody, pydantic.Field(alias="formTemplate")
    ]
    r"""Form template reference object."""

    status: FormSubmissionsPostFormSubmissionRequestBodyStatus
    r"""Status of the form submission.  Valid values: `toDo`"""

    assigned_to: Annotated[
        Optional[FormSubmissionRequestAssignedToRequestBody],
        pydantic.Field(alias="assignedTo"),
    ] = None
    r"""Form submission assignee update object"""

    due_at_time: Annotated[Optional[datetime], pydantic.Field(alias="dueAtTime")] = None
    r"""Due date of the form submission. UTC timestamp in RFC 3339 format."""

    fields: Optional[List[FormSubmissionRequestFieldInputObjectRequestBody]] = None
    r"""List of field inputs in a form submission."""

    is_required: Annotated[Optional[bool], pydantic.Field(alias="isRequired")] = None
    r"""Indicates whether the worker is required to complete this form or not at a specific route stop. Defaults to `true` if the form is assigned to a user or driver. When true, the worker cannot depart the route stop until this form submission is `submitted`."""

    route_stop_id: Annotated[Optional[str], pydantic.Field(alias="routeStopId")] = None
    r"""ID of the route stop the form submission is assigned to. Must be a unique Samsara ID."""

    title: Optional[str] = None
    r"""Title of the form submission."""
