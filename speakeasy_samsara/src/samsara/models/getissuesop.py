"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .issuesgetissuesbadrequesterrorresponsebody import (
    IssuesGetIssuesBadRequestErrorResponseBody,
    IssuesGetIssuesBadRequestErrorResponseBodyTypedDict,
)
from .issuesgetissuesresponsebody import (
    IssuesGetIssuesResponseBody,
    IssuesGetIssuesResponseBodyTypedDict,
)
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetIssuesRequestTypedDict(TypedDict):
    ids: List[str]
    r"""A comma-separated list containing up to 100 issue IDs to filter on. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the issue."""
    include: NotRequired[List[str]]
    r"""A comma separated list of additional fields to include on requested objects. Valid values: `externalIds`"""


class GetIssuesRequest(BaseModel):
    ids: Annotated[
        List[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=False))
    ]
    r"""A comma-separated list containing up to 100 issue IDs to filter on. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the issue."""

    include: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""A comma separated list of additional fields to include on requested objects. Valid values: `externalIds`"""


GetIssuesResponseTypedDict = TypeAliasType(
    "GetIssuesResponseTypedDict",
    Union[
        IssuesGetIssuesResponseBodyTypedDict,
        IssuesGetIssuesBadRequestErrorResponseBodyTypedDict,
    ],
)


GetIssuesResponse = TypeAliasType(
    "GetIssuesResponse",
    Union[IssuesGetIssuesResponseBody, IssuesGetIssuesBadRequestErrorResponseBody],
)
