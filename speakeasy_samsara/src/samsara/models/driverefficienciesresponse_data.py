"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .driverefficiency import DriverEfficiency, DriverEfficiencyTypedDict
from datetime import datetime
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DriverEfficienciesResponseDataTypedDict(TypedDict):
    driver_summaries: NotRequired[List[DriverEfficiencyTypedDict]]
    r"""A list of driver and associated vehicle efficiency data."""
    summary_end_time: NotRequired[datetime]
    r"""End time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-16T16:00:00Z`"""
    summary_start_time: NotRequired[datetime]
    r"""Start time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-15T16:00:00Z`"""


class DriverEfficienciesResponseData(BaseModel):
    driver_summaries: Annotated[
        Optional[List[DriverEfficiency]], pydantic.Field(alias="driverSummaries")
    ] = None
    r"""A list of driver and associated vehicle efficiency data."""

    summary_end_time: Annotated[
        Optional[datetime], pydantic.Field(alias="summaryEndTime")
    ] = None
    r"""End time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-16T16:00:00Z`"""

    summary_start_time: Annotated[
        Optional[datetime], pydantic.Field(alias="summaryStartTime")
    ] = None
    r"""Start time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-15T16:00:00Z`"""
