"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .equipmentenginerpm import EquipmentEngineRpm, EquipmentEngineRpmTypedDict
from .equipmentengineseconds import (
    EquipmentEngineSeconds,
    EquipmentEngineSecondsTypedDict,
)
from .equipmentenginestate import EquipmentEngineState, EquipmentEngineStateTypedDict
from .equipmentfuelpercent import EquipmentFuelPercent, EquipmentFuelPercentTypedDict
from .equipmentgatewayengineseconds import (
    EquipmentGatewayEngineSeconds,
    EquipmentGatewayEngineSecondsTypedDict,
)
from .equipmentgatewayenginestate import (
    EquipmentGatewayEngineState,
    EquipmentGatewayEngineStateTypedDict,
)
from .equipmentgatewayj1939engineseconds import (
    EquipmentGatewayJ1939EngineSeconds,
    EquipmentGatewayJ1939EngineSecondsTypedDict,
)
from .equipmentgpsodometermeters import (
    EquipmentGpsOdometerMeters,
    EquipmentGpsOdometerMetersTypedDict,
)
from .equipmentobdengineseconds import (
    EquipmentObdEngineSeconds,
    EquipmentObdEngineSecondsTypedDict,
)
from .equipmentobdenginestate import (
    EquipmentObdEngineState,
    EquipmentObdEngineStateTypedDict,
)
from .equipmentstatsgps import EquipmentStatsGps, EquipmentStatsGpsTypedDict
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class EquipmentStatsListResponseDataTypedDict(TypedDict):
    r"""A unit of equipment and its time-series of stats events."""

    id: str
    r"""Unique Samsara ID for the equipment."""
    name: str
    r"""Name of the equipment."""
    engine_rpm: NotRequired[List[EquipmentEngineRpmTypedDict]]
    r"""A time-series of engine RPM readings for the given unit of equipment."""
    engine_seconds: NotRequired[List[EquipmentEngineSecondsTypedDict]]
    r"""[DEPRECATED] Please use either `gatewayEngineSeconds`, `obdEngineSeconds`, or `gatewayJ1939EngineSeconds`."""
    engine_states: NotRequired[List[EquipmentEngineStateTypedDict]]
    r"""[DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`."""
    fuel_percents: NotRequired[List[EquipmentFuelPercentTypedDict]]
    r"""A time-series of fuel percent level changes for the given unit of equipment."""
    gateway_engine_seconds: NotRequired[List[EquipmentGatewayEngineSecondsTypedDict]]
    r"""A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG26's aux/digio cable."""
    gateway_engine_states: NotRequired[List[EquipmentGatewayEngineStateTypedDict]]
    r"""A time-series of engine state changes (as read from the AG26's aux/digio cable) for the given unit of equipment."""
    gateway_j1939_engine_seconds: NotRequired[
        List[EquipmentGatewayJ1939EngineSecondsTypedDict]
    ]
    r"""A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG26's CAT/J1939 cable."""
    gps: NotRequired[List[EquipmentStatsGpsTypedDict]]
    r"""A time-series of GPS locations."""
    gps_odometer_meters: NotRequired[List[EquipmentGpsOdometerMetersTypedDict]]
    r"""A time-series of GPS odometer readings for the given unit of equipment."""
    obd_engine_seconds: NotRequired[List[EquipmentObdEngineSecondsTypedDict]]
    r"""A time-series of engine seconds readings for the given unit of equipment directly from on-board diagnostics."""
    obd_engine_states: NotRequired[List[EquipmentObdEngineStateTypedDict]]
    r"""A time-series of engine state changes (as read from on-board diagnostics) for the given unit of equipment."""


class EquipmentStatsListResponseData(BaseModel):
    r"""A unit of equipment and its time-series of stats events."""

    id: str
    r"""Unique Samsara ID for the equipment."""

    name: str
    r"""Name of the equipment."""

    engine_rpm: Annotated[
        Optional[List[EquipmentEngineRpm]], pydantic.Field(alias="engineRpm")
    ] = None
    r"""A time-series of engine RPM readings for the given unit of equipment."""

    engine_seconds: Annotated[
        Optional[List[EquipmentEngineSeconds]], pydantic.Field(alias="engineSeconds")
    ] = None
    r"""[DEPRECATED] Please use either `gatewayEngineSeconds`, `obdEngineSeconds`, or `gatewayJ1939EngineSeconds`."""

    engine_states: Annotated[
        Optional[List[EquipmentEngineState]], pydantic.Field(alias="engineStates")
    ] = None
    r"""[DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`."""

    fuel_percents: Annotated[
        Optional[List[EquipmentFuelPercent]], pydantic.Field(alias="fuelPercents")
    ] = None
    r"""A time-series of fuel percent level changes for the given unit of equipment."""

    gateway_engine_seconds: Annotated[
        Optional[List[EquipmentGatewayEngineSeconds]],
        pydantic.Field(alias="gatewayEngineSeconds"),
    ] = None
    r"""A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG26's aux/digio cable."""

    gateway_engine_states: Annotated[
        Optional[List[EquipmentGatewayEngineState]],
        pydantic.Field(alias="gatewayEngineStates"),
    ] = None
    r"""A time-series of engine state changes (as read from the AG26's aux/digio cable) for the given unit of equipment."""

    gateway_j1939_engine_seconds: Annotated[
        Optional[List[EquipmentGatewayJ1939EngineSeconds]],
        pydantic.Field(alias="gatewayJ1939EngineSeconds"),
    ] = None
    r"""A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG26's CAT/J1939 cable."""

    gps: Optional[List[EquipmentStatsGps]] = None
    r"""A time-series of GPS locations."""

    gps_odometer_meters: Annotated[
        Optional[List[EquipmentGpsOdometerMeters]],
        pydantic.Field(alias="gpsOdometerMeters"),
    ] = None
    r"""A time-series of GPS odometer readings for the given unit of equipment."""

    obd_engine_seconds: Annotated[
        Optional[List[EquipmentObdEngineSeconds]],
        pydantic.Field(alias="obdEngineSeconds"),
    ] = None
    r"""A time-series of engine seconds readings for the given unit of equipment directly from on-board diagnostics."""

    obd_engine_states: Annotated[
        Optional[List[EquipmentObdEngineState]], pydantic.Field(alias="obdEngineStates")
    ] = None
    r"""A time-series of engine state changes (as read from on-board diagnostics) for the given unit of equipment."""
