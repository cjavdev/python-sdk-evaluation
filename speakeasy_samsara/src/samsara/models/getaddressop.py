"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .addressresponse import AddressResponse, AddressResponseTypedDict
from .standarderrorresponse import StandardErrorResponse, StandardErrorResponseTypedDict
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetAddressRequestTypedDict(TypedDict):
    id: str
    r"""ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"""


class GetAddressRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`"""


GetAddressResponseTypedDict = TypeAliasType(
    "GetAddressResponseTypedDict",
    Union[AddressResponseTypedDict, StandardErrorResponseTypedDict],
)


GetAddressResponse = TypeAliasType(
    "GetAddressResponse", Union[AddressResponse, StandardErrorResponse]
)
