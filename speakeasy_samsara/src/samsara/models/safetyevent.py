"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .drivertinyresponse import DriverTinyResponse, DriverTinyResponseTypedDict
from .location import Location, LocationTypedDict
from .safetyeventbehaviorlabel import (
    SafetyEventBehaviorLabel,
    SafetyEventBehaviorLabelTypedDict,
)
from .safetyeventcoachingstate import SafetyEventCoachingState
from .vehicletinyresponse import VehicleTinyResponse, VehicleTinyResponseTypedDict
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SafetyEventTypedDict(TypedDict):
    r"""A safety event."""

    behavior_labels: NotRequired[List[SafetyEventBehaviorLabelTypedDict]]
    r"""The most up-to-date behavior labels associated with the safety event. These labels can be updated by the Safety Report Admin."""
    coaching_state: NotRequired[SafetyEventCoachingState]
    r"""The current coaching status of the event.  Valid values: `needsReview`, `coached`, `dismissed`, `reviewed`, `archived`, `manualReview`, `needsCoaching`, `autoDismissed`, `needsRecognition`, `recognized`, `invalid`."""
    download_forward_video_url: NotRequired[str]
    r"""URL to download the forward video."""
    download_inward_video_url: NotRequired[str]
    r"""URL to download the inward video."""
    download_tracked_inward_video_url: NotRequired[str]
    r"""URL to download the tracked inward video."""
    driver: NotRequired[DriverTinyResponseTypedDict]
    r"""A minified driver object."""
    id: NotRequired[str]
    r"""The unique Samsara ID of the safety event."""
    location: NotRequired[LocationTypedDict]
    r"""Location object"""
    max_acceleration_g_force: NotRequired[float]
    r"""The maximum acceleration value as a multiplier on the force of gravity (g)."""
    time: NotRequired[str]
    r"""The time the safety event occurred in RFC 3339 milliseconds format."""
    vehicle: NotRequired[VehicleTinyResponseTypedDict]
    r"""A minified vehicle object."""


class SafetyEvent(BaseModel):
    r"""A safety event."""

    behavior_labels: Annotated[
        Optional[List[SafetyEventBehaviorLabel]], pydantic.Field(alias="behaviorLabels")
    ] = None
    r"""The most up-to-date behavior labels associated with the safety event. These labels can be updated by the Safety Report Admin."""

    coaching_state: Annotated[
        Optional[SafetyEventCoachingState], pydantic.Field(alias="coachingState")
    ] = None
    r"""The current coaching status of the event.  Valid values: `needsReview`, `coached`, `dismissed`, `reviewed`, `archived`, `manualReview`, `needsCoaching`, `autoDismissed`, `needsRecognition`, `recognized`, `invalid`."""

    download_forward_video_url: Annotated[
        Optional[str], pydantic.Field(alias="downloadForwardVideoUrl")
    ] = None
    r"""URL to download the forward video."""

    download_inward_video_url: Annotated[
        Optional[str], pydantic.Field(alias="downloadInwardVideoUrl")
    ] = None
    r"""URL to download the inward video."""

    download_tracked_inward_video_url: Annotated[
        Optional[str], pydantic.Field(alias="downloadTrackedInwardVideoUrl")
    ] = None
    r"""URL to download the tracked inward video."""

    driver: Optional[DriverTinyResponse] = None
    r"""A minified driver object."""

    id: Optional[str] = None
    r"""The unique Samsara ID of the safety event."""

    location: Optional[Location] = None
    r"""Location object"""

    max_acceleration_g_force: Annotated[
        Optional[float], pydantic.Field(alias="maxAccelerationGForce")
    ] = None
    r"""The maximum acceleration value as a multiplier on the force of gravity (g)."""

    time: Optional[str] = None
    r"""The time the safety event occurred in RFC 3339 milliseconds format."""

    vehicle: Optional[VehicleTinyResponse] = None
    r"""A minified vehicle object."""
