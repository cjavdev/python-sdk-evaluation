"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1vehicleharsheventresponse import (
    V1VehicleHarshEventResponse,
    V1VehicleHarshEventResponseTypedDict,
)
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class V1getVehicleHarshEventRequestTypedDict(TypedDict):
    vehicle_id: int
    r"""ID of the vehicle. Must contain only digits 0-9."""
    timestamp: int
    r"""Timestamp in milliseconds representing the timestamp of a harsh event."""


class V1getVehicleHarshEventRequest(BaseModel):
    vehicle_id: Annotated[
        int,
        pydantic.Field(alias="vehicleId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""ID of the vehicle. Must contain only digits 0-9."""

    timestamp: Annotated[
        int, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""Timestamp in milliseconds representing the timestamp of a harsh event."""


V1getVehicleHarshEventResponseTypedDict = TypeAliasType(
    "V1getVehicleHarshEventResponseTypedDict",
    Union[V1VehicleHarshEventResponseTypedDict, str],
)


V1getVehicleHarshEventResponse = TypeAliasType(
    "V1getVehicleHarshEventResponse", Union[V1VehicleHarshEventResponse, str]
)
