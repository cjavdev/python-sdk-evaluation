"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .carrierproposedassignmentdriver import (
    CarrierProposedAssignmentDriver,
    CarrierProposedAssignmentDriverTypedDict,
)
from .carrierproposedassignmenttrailer import (
    CarrierProposedAssignmentTrailer,
    CarrierProposedAssignmentTrailerTypedDict,
)
from .carrierproposedassignmentvehicle import (
    CarrierProposedAssignmentVehicle,
    CarrierProposedAssignmentVehicleTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CarrierProposedAssignmentTypedDict(TypedDict):
    r"""A carrier proposed assignment object"""

    active_time: str
    r"""Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`."""
    id: str
    r"""Samsara ID for the assignment."""
    accepted_time: NotRequired[str]
    r"""Time when the driver accepted this assignment in the mobile app. Will be omitted if the driver hasn't accepted this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    driver: NotRequired[CarrierProposedAssignmentDriverTypedDict]
    first_seen_time: NotRequired[str]
    r"""Time when the driver first saw this assignment in the mobile app. Will be omitted if the driver hasn't seen this assignment yet. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    rejected_time: NotRequired[str]
    r"""Time when the driver rejected this assignment in the mobile app. Will be omitted if the driver hasn't rejected this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    shipping_docs: NotRequired[str]
    r"""Shipping Documents that this assignment will propose to the driver."""
    trailers: NotRequired[List[CarrierProposedAssignmentTrailerTypedDict]]
    r"""Trailers that this assignment will propose to the driver."""
    vehicle: NotRequired[CarrierProposedAssignmentVehicleTypedDict]


class CarrierProposedAssignment(BaseModel):
    r"""A carrier proposed assignment object"""

    active_time: Annotated[str, pydantic.Field(alias="activeTime")]
    r"""Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`."""

    id: str
    r"""Samsara ID for the assignment."""

    accepted_time: Annotated[Optional[str], pydantic.Field(alias="acceptedTime")] = None
    r"""Time when the driver accepted this assignment in the mobile app. Will be omitted if the driver hasn't accepted this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    driver: Optional[CarrierProposedAssignmentDriver] = None

    first_seen_time: Annotated[Optional[str], pydantic.Field(alias="firstSeenTime")] = (
        None
    )
    r"""Time when the driver first saw this assignment in the mobile app. Will be omitted if the driver hasn't seen this assignment yet. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    rejected_time: Annotated[Optional[str], pydantic.Field(alias="rejectedTime")] = None
    r"""Time when the driver rejected this assignment in the mobile app. Will be omitted if the driver hasn't rejected this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    shipping_docs: Annotated[Optional[str], pydantic.Field(alias="shippingDocs")] = None
    r"""Shipping Documents that this assignment will propose to the driver."""

    trailers: Optional[List[CarrierProposedAssignmentTrailer]] = None
    r"""Trailers that this assignment will propose to the driver."""

    vehicle: Optional[CarrierProposedAssignmentVehicle] = None
