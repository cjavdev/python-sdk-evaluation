"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gatewaysgetgatewaysbadrequesterrorresponsebody import (
    GatewaysGetGatewaysBadRequestErrorResponseBody,
    GatewaysGetGatewaysBadRequestErrorResponseBodyTypedDict,
)
from .gatewaysgetgatewaysresponsebody import (
    GatewaysGetGatewaysResponseBody,
    GatewaysGetGatewaysResponseBodyTypedDict,
)
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetGatewaysRequestTypedDict(TypedDict):
    models: NotRequired[List[str]]
    r"""Filter by a comma separated list of gateway models."""
    after: NotRequired[str]
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""


class GetGatewaysRequest(BaseModel):
    models: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Filter by a comma separated list of gateway models."""

    after: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""


GetGatewaysResponseTypedDict = TypeAliasType(
    "GetGatewaysResponseTypedDict",
    Union[
        GatewaysGetGatewaysResponseBodyTypedDict,
        GatewaysGetGatewaysBadRequestErrorResponseBodyTypedDict,
    ],
)


GetGatewaysResponse = TypeAliasType(
    "GetGatewaysResponse",
    Union[
        GatewaysGetGatewaysResponseBody, GatewaysGetGatewaysBadRequestErrorResponseBody
    ],
)
