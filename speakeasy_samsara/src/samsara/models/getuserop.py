"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .standarderrorresponse import StandardErrorResponse, StandardErrorResponseTypedDict
from .userresponse import UserResponse, UserResponseTypedDict
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetUserRequestTypedDict(TypedDict):
    id: str
    r"""Unique identifier for the user."""


class GetUserRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Unique identifier for the user."""


GetUserResponseTypedDict = TypeAliasType(
    "GetUserResponseTypedDict",
    Union[UserResponseTypedDict, StandardErrorResponseTypedDict],
)


GetUserResponse = TypeAliasType(
    "GetUserResponse", Union[UserResponse, StandardErrorResponse]
)
