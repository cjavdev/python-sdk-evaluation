"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .barcodevalueobjectrequestbody import (
    BarcodeValueObjectRequestBody,
    BarcodeValueObjectRequestBodyTypedDict,
)
from .datetimevalueobjectrequestbody import (
    DateTimeValueObjectRequestBody,
    DateTimeValueObjectRequestBodyTypedDict,
)
from .multiplechoicevalueobjectrequestbody import (
    MultipleChoiceValueObjectRequestBody,
    MultipleChoiceValueObjectRequestBodyTypedDict,
)
from .photovalueobjectrequestbody import (
    PhotoValueObjectRequestBody,
    PhotoValueObjectRequestBodyTypedDict,
)
from .scanneddocumentvalueobjectrequestbody import (
    ScannedDocumentValueObjectRequestBody,
    ScannedDocumentValueObjectRequestBodyTypedDict,
)
from .signaturevalueobjectrequestbody import (
    SignatureValueObjectRequestBody,
    SignatureValueObjectRequestBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FieldObjectValueRequestBodyTypedDict(TypedDict):
    r"""The value of the document field. The shape of value depends on the type."""

    barcode_value: NotRequired[List[BarcodeValueObjectRequestBodyTypedDict]]
    r"""The value of a barcode scanning field. Only present for barcode scanning fields."""
    date_time_value: NotRequired[DateTimeValueObjectRequestBodyTypedDict]
    r"""The value of a date time field. Only present for date time fields."""
    multiple_choice_value: NotRequired[
        List[MultipleChoiceValueObjectRequestBodyTypedDict]
    ]
    r"""The value of a multiple choice field. Only present for multiple choice fields."""
    number_value: NotRequired[float]
    r"""The value of a number field. Only present for number fields."""
    photo_value: NotRequired[List[PhotoValueObjectRequestBodyTypedDict]]
    r"""The value of a photo field. Only present for photo fields."""
    scanned_document_value: NotRequired[
        List[ScannedDocumentValueObjectRequestBodyTypedDict]
    ]
    r"""The value of a scanned document field. Only present for scanned document fields."""
    signature_value: NotRequired[SignatureValueObjectRequestBodyTypedDict]
    r"""The value of a signature field. Only present for signature fields."""
    string_value: NotRequired[str]
    r"""The value of a string field. Only present for string fields."""


class FieldObjectValueRequestBody(BaseModel):
    r"""The value of the document field. The shape of value depends on the type."""

    barcode_value: Annotated[
        Optional[List[BarcodeValueObjectRequestBody]],
        pydantic.Field(alias="barcodeValue"),
    ] = None
    r"""The value of a barcode scanning field. Only present for barcode scanning fields."""

    date_time_value: Annotated[
        Optional[DateTimeValueObjectRequestBody], pydantic.Field(alias="dateTimeValue")
    ] = None
    r"""The value of a date time field. Only present for date time fields."""

    multiple_choice_value: Annotated[
        Optional[List[MultipleChoiceValueObjectRequestBody]],
        pydantic.Field(alias="multipleChoiceValue"),
    ] = None
    r"""The value of a multiple choice field. Only present for multiple choice fields."""

    number_value: Annotated[Optional[float], pydantic.Field(alias="numberValue")] = None
    r"""The value of a number field. Only present for number fields."""

    photo_value: Annotated[
        Optional[List[PhotoValueObjectRequestBody]], pydantic.Field(alias="photoValue")
    ] = None
    r"""The value of a photo field. Only present for photo fields."""

    scanned_document_value: Annotated[
        Optional[List[ScannedDocumentValueObjectRequestBody]],
        pydantic.Field(alias="scannedDocumentValue"),
    ] = None
    r"""The value of a scanned document field. Only present for scanned document fields."""

    signature_value: Annotated[
        Optional[SignatureValueObjectRequestBody],
        pydantic.Field(alias="signatureValue"),
    ] = None
    r"""The value of a signature field. Only present for signature fields."""

    string_value: Annotated[Optional[str], pydantic.Field(alias="stringValue")] = None
    r"""The value of a string field. Only present for string fields."""
