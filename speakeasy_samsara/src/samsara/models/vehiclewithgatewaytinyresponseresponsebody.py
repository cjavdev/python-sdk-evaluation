"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .goagatewaytinyresponseresponsebody import (
    GoaGatewayTinyResponseResponseBody,
    GoaGatewayTinyResponseResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class VehicleWithGatewayTinyResponseResponseBodyAssetType(str, Enum):
    r"""The type of the asset.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`"""

    UNCATEGORIZED = "uncategorized"
    TRAILER = "trailer"
    EQUIPMENT = "equipment"
    UNPOWERED = "unpowered"
    VEHICLE = "vehicle"


class VehicleWithGatewayTinyResponseResponseBodyTypedDict(TypedDict):
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""

    asset_type: NotRequired[VehicleWithGatewayTinyResponseResponseBodyAssetType]
    r"""The type of the asset.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`"""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    gateway: NotRequired[GoaGatewayTinyResponseResponseBodyTypedDict]
    r"""A minified gateway object"""
    id: NotRequired[str]
    r"""ID of the vehicle"""
    license_plate: NotRequired[str]
    r"""The license plate of the vehicle."""
    name: NotRequired[str]
    r"""Name of the vehicle"""
    vin: NotRequired[str]
    r"""The VIN of the vehicle."""


class VehicleWithGatewayTinyResponseResponseBody(BaseModel):
    r"""A minified vehicle object. This object is only returned if the route is assigned to the vehicle."""

    asset_type: Annotated[
        Optional[VehicleWithGatewayTinyResponseResponseBodyAssetType],
        pydantic.Field(alias="assetType"),
    ] = None
    r"""The type of the asset.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`"""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    gateway: Optional[GoaGatewayTinyResponseResponseBody] = None
    r"""A minified gateway object"""

    id: Optional[str] = None
    r"""ID of the vehicle"""

    license_plate: Annotated[Optional[str], pydantic.Field(alias="licensePlate")] = None
    r"""The license plate of the vehicle."""

    name: Optional[str] = None
    r"""Name of the vehicle"""

    vin: Optional[str] = None
    r"""The VIN of the vehicle."""
