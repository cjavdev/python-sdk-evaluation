"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DriverVehicleAssignmentsV2DeleteDriverVehicleAssignmentsRequestBodyTypedDict(
    TypedDict
):
    r"""Driver assignments to be deleted"""

    vehicle_id: str
    r"""ID of the vehicle. This can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle."""
    assigned_at_time: NotRequired[str]
    r"""Assigned at time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    end_time: NotRequired[str]
    r"""An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
    is_passenger: NotRequired[bool]
    r"""Indicates if assigned driver is passenger"""
    start_time: NotRequired[str]
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""


class DriverVehicleAssignmentsV2DeleteDriverVehicleAssignmentsRequestBody(BaseModel):
    r"""Driver assignments to be deleted"""

    vehicle_id: Annotated[str, pydantic.Field(alias="vehicleId")]
    r"""ID of the vehicle. This can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle."""

    assigned_at_time: Annotated[
        Optional[str], pydantic.Field(alias="assignedAtTime")
    ] = None
    r"""Assigned at time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    end_time: Annotated[Optional[str], pydantic.Field(alias="endTime")] = None
    r"""An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""

    is_passenger: Annotated[Optional[bool], pydantic.Field(alias="isPassenger")] = None
    r"""Indicates if assigned driver is passenger"""

    start_time: Annotated[Optional[str], pydantic.Field(alias="startTime")] = None
    r"""A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00)."""
