"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DistanceTraveledObjectResponseBodyTypedDict(TypedDict):
    r"""The distance traveled information of the log."""

    drive_distance_meters: NotRequired[int]
    r"""Distance driven in meters, rounded to two decimal places."""
    personal_conveyance_distance_meters: NotRequired[int]
    r"""Distance driven for personal conveyance, rounded to two decimal places."""
    yard_move_distance_meters: NotRequired[int]
    r"""Distance driven for yard moves, rounded to two decimal places."""


class DistanceTraveledObjectResponseBody(BaseModel):
    r"""The distance traveled information of the log."""

    drive_distance_meters: Annotated[
        Optional[int], pydantic.Field(alias="driveDistanceMeters")
    ] = None
    r"""Distance driven in meters, rounded to two decimal places."""

    personal_conveyance_distance_meters: Annotated[
        Optional[int], pydantic.Field(alias="personalConveyanceDistanceMeters")
    ] = None
    r"""Distance driven for personal conveyance, rounded to two decimal places."""

    yard_move_distance_meters: Annotated[
        Optional[int], pydantic.Field(alias="yardMoveDistanceMeters")
    ] = None
    r"""Distance driven for yard moves, rounded to two decimal places."""
