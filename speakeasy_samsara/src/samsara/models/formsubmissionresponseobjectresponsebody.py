"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .formsassetobjectresponsebody import (
    FormsAssetObjectResponseBody,
    FormsAssetObjectResponseBodyTypedDict,
)
from .formsfieldinputobjectresponsebody import (
    FormsFieldInputObjectResponseBody,
    FormsFieldInputObjectResponseBodyTypedDict,
)
from .formslocationobjectresponsebody import (
    FormsLocationObjectResponseBody,
    FormsLocationObjectResponseBodyTypedDict,
)
from .formspolymorphicuserobjectresponsebody import (
    FormsPolymorphicUserObjectResponseBody,
    FormsPolymorphicUserObjectResponseBodyTypedDict,
)
from .formsscoreobjectresponsebody import (
    FormsScoreObjectResponseBody,
    FormsScoreObjectResponseBodyTypedDict,
)
from .formtemplatereferenceobjectresponsebody import (
    FormTemplateReferenceObjectResponseBody,
    FormTemplateReferenceObjectResponseBodyTypedDict,
)
from datetime import datetime
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Status(str, Enum):
    r"""State for the Form Submission. Always returned.  Valid values: `toDo`, `submitted`, `dismissed`, `inProgress`"""

    TO_DO = "toDo"
    SUBMITTED = "submitted"
    DISMISSED = "dismissed"
    IN_PROGRESS = "inProgress"


class FormSubmissionResponseObjectResponseBodyTypedDict(TypedDict):
    r"""Form Submission response object."""

    created_at_time: datetime
    r"""Creation time of the form submission. UTC timestamp in RFC 3339 format."""
    fields: List[FormsFieldInputObjectResponseBodyTypedDict]
    r"""List of field inputs in a form submission."""
    form_template: FormTemplateReferenceObjectResponseBodyTypedDict
    r"""Form template reference object."""
    id: str
    r"""ID of the form submission."""
    status: Status
    r"""State for the Form Submission. Always returned.  Valid values: `toDo`, `submitted`, `dismissed`, `inProgress`"""
    submitted_at_time: datetime
    r"""Submission time of the form submission. UTC timestamp in RFC 3339 format."""
    submitted_by: FormsPolymorphicUserObjectResponseBodyTypedDict
    r"""User or driver object."""
    updated_at_time: datetime
    r"""Update time of the form submission. UTC timestamp in RFC 3339 format."""
    asset: NotRequired[FormsAssetObjectResponseBodyTypedDict]
    r"""Tracked or untracked (i.e. manually entered) asset object."""
    assigned_at_time: NotRequired[datetime]
    r"""Assignment time of the form submission. Sometimes returned if the submission was assigned to a user or driver. UTC timestamp in RFC 3339 format."""
    assigned_to: NotRequired[FormsPolymorphicUserObjectResponseBodyTypedDict]
    r"""User or driver object."""
    due_at_time: NotRequired[datetime]
    r"""Time of when the submission is due. Sometimes returned, if the submission has a due date. UTC timestamp in RFC 3339 format."""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""
    is_required: NotRequired[bool]
    r"""Indicates whether the worker is required to complete this form or not. Sometimes returned if the submission was assigned to a worker or route stop."""
    location: NotRequired[FormsLocationObjectResponseBodyTypedDict]
    r"""Form template location object."""
    route_id: NotRequired[str]
    r"""ID of the route. Sometimes returned if the submission was assigned to a route stop."""
    route_stop_id: NotRequired[str]
    r"""ID of the route stop. Sometimes returned if the submission was assigned to a route stop."""
    score: NotRequired[FormsScoreObjectResponseBodyTypedDict]
    r"""Forms score object."""
    title: NotRequired[str]
    r"""Title of the form submission. Sometimes returned if the submission has a title."""


class FormSubmissionResponseObjectResponseBody(BaseModel):
    r"""Form Submission response object."""

    created_at_time: Annotated[datetime, pydantic.Field(alias="createdAtTime")]
    r"""Creation time of the form submission. UTC timestamp in RFC 3339 format."""

    fields: List[FormsFieldInputObjectResponseBody]
    r"""List of field inputs in a form submission."""

    form_template: Annotated[
        FormTemplateReferenceObjectResponseBody, pydantic.Field(alias="formTemplate")
    ]
    r"""Form template reference object."""

    id: str
    r"""ID of the form submission."""

    status: Status
    r"""State for the Form Submission. Always returned.  Valid values: `toDo`, `submitted`, `dismissed`, `inProgress`"""

    submitted_at_time: Annotated[datetime, pydantic.Field(alias="submittedAtTime")]
    r"""Submission time of the form submission. UTC timestamp in RFC 3339 format."""

    submitted_by: Annotated[
        FormsPolymorphicUserObjectResponseBody, pydantic.Field(alias="submittedBy")
    ]
    r"""User or driver object."""

    updated_at_time: Annotated[datetime, pydantic.Field(alias="updatedAtTime")]
    r"""Update time of the form submission. UTC timestamp in RFC 3339 format."""

    asset: Optional[FormsAssetObjectResponseBody] = None
    r"""Tracked or untracked (i.e. manually entered) asset object."""

    assigned_at_time: Annotated[
        Optional[datetime], pydantic.Field(alias="assignedAtTime")
    ] = None
    r"""Assignment time of the form submission. Sometimes returned if the submission was assigned to a user or driver. UTC timestamp in RFC 3339 format."""

    assigned_to: Annotated[
        Optional[FormsPolymorphicUserObjectResponseBody],
        pydantic.Field(alias="assignedTo"),
    ] = None
    r"""User or driver object."""

    due_at_time: Annotated[Optional[datetime], pydantic.Field(alias="dueAtTime")] = None
    r"""Time of when the submission is due. Sometimes returned, if the submission has a due date. UTC timestamp in RFC 3339 format."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""

    is_required: Annotated[Optional[bool], pydantic.Field(alias="isRequired")] = None
    r"""Indicates whether the worker is required to complete this form or not. Sometimes returned if the submission was assigned to a worker or route stop."""

    location: Optional[FormsLocationObjectResponseBody] = None
    r"""Form template location object."""

    route_id: Annotated[Optional[str], pydantic.Field(alias="routeId")] = None
    r"""ID of the route. Sometimes returned if the submission was assigned to a route stop."""

    route_stop_id: Annotated[Optional[str], pydantic.Field(alias="routeStopId")] = None
    r"""ID of the route stop. Sometimes returned if the submission was assigned to a route stop."""

    score: Optional[FormsScoreObjectResponseBody] = None
    r"""Forms score object."""

    title: Optional[str] = None
    r"""Title of the form submission. Sometimes returned if the submission has a title."""
