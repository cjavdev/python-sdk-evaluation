"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1VisionRunsResponseReportMetadataTypedDict(TypedDict):
    r"""The response includes 4 additional fields that are now deprecated"""

    items_per_minute: NotRequired[float]
    r"""Returns average scanned items per minute. Should be used instead of scanRate."""
    no_read_count: NotRequired[int]
    r"""Returns no read count for the run. Should be used instead of noReadScansCount"""
    reject_count: NotRequired[int]
    r"""Returns reject count for the run. Should be used instead of failedScansCount"""
    success_count: NotRequired[int]
    r"""Returns success count for the run. Should be used instead of successfulScansCount"""


class V1VisionRunsResponseReportMetadata(BaseModel):
    r"""The response includes 4 additional fields that are now deprecated"""

    items_per_minute: Annotated[
        Optional[float], pydantic.Field(alias="itemsPerMinute")
    ] = None
    r"""Returns average scanned items per minute. Should be used instead of scanRate."""

    no_read_count: Annotated[Optional[int], pydantic.Field(alias="noReadCount")] = None
    r"""Returns no read count for the run. Should be used instead of noReadScansCount"""

    reject_count: Annotated[Optional[int], pydantic.Field(alias="rejectCount")] = None
    r"""Returns reject count for the run. Should be used instead of failedScansCount"""

    success_count: Annotated[Optional[int], pydantic.Field(alias="successCount")] = None
    r"""Returns success count for the run. Should be used instead of successfulScansCount"""
