"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1visionrunsbycameraresponse import (
    V1VisionRunsByCameraResponse,
    V1VisionRunsByCameraResponseTypedDict,
)
import pydantic
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetVisionRunsByCameraRequestTypedDict(TypedDict):
    camera_id: int
    r"""The camera_id should be valid for the given accessToken."""
    duration_ms: int
    r"""DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"""
    end_ms: NotRequired[int]
    r"""EndMs is an optional param. It will default to the current time."""


class GetVisionRunsByCameraRequest(BaseModel):
    camera_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The camera_id should be valid for the given accessToken."""

    duration_ms: Annotated[
        int,
        pydantic.Field(alias="durationMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched"""

    end_ms: Annotated[
        Optional[int],
        pydantic.Field(alias="endMs"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""EndMs is an optional param. It will default to the current time."""


GetVisionRunsByCameraResponseTypedDict = TypeAliasType(
    "GetVisionRunsByCameraResponseTypedDict",
    Union[List[V1VisionRunsByCameraResponseTypedDict], str],
)


GetVisionRunsByCameraResponse = TypeAliasType(
    "GetVisionRunsByCameraResponse", Union[List[V1VisionRunsByCameraResponse], str]
)
