"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing_extensions import Annotated, TypedDict


class FieldT(str, Enum):
    r"""Field to query."""

    AMBIENT_TEMPERATURE = "ambientTemperature"
    CARGO_PERCENT = "cargoPercent"
    CURRENT_LOOP1_RAW = "currentLoop1Raw"
    CURRENT_LOOP1_MAPPED = "currentLoop1Mapped"
    CURRENT_LOOP2_RAW = "currentLoop2Raw"
    CURRENT_LOOP2_MAPPED = "currentLoop2Mapped"
    DOOR_CLOSED = "doorClosed"
    HUMIDITY = "humidity"
    PM_POWER_TOTAL = "pmPowerTotal"
    PM_PHASE1_POWER = "pmPhase1Power"
    PM_PHASE2_POWER = "pmPhase2Power"
    PM_PHASE3_POWER = "pmPhase3Power"
    PM_PHASE1_POWER_FACTOR = "pmPhase1PowerFactor"
    PM_PHASE2_POWER_FACTOR = "pmPhase2PowerFactor"
    PM_PHASE3_POWER_FACTOR = "pmPhase3PowerFactor"
    PROBE_TEMPERATURE = "probeTemperature"


class V1SensorsHistorySeriesTypedDict(TypedDict):
    r"""V1Sensor ID and field to query."""

    field: FieldT
    r"""Field to query."""
    widget_id: int
    r"""V1Sensor ID to query."""


class V1SensorsHistorySeries(BaseModel):
    r"""V1Sensor ID and field to query."""

    field: FieldT
    r"""Field to query."""

    widget_id: Annotated[int, pydantic.Field(alias="widgetId")]
    r"""V1Sensor ID to query."""
