"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dvirdefecttypegetdefecttypesbadrequesterrorresponsebody import (
    DvirDefectTypeGetDefectTypesBadRequestErrorResponseBody,
    DvirDefectTypeGetDefectTypesBadRequestErrorResponseBodyTypedDict,
)
from .dvirdefecttypegetdefecttypesresponsebody import (
    DvirDefectTypeGetDefectTypesResponseBody,
    DvirDefectTypeGetDefectTypesResponseBodyTypedDict,
)
from samsara.types import BaseModel
from samsara.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetDefectTypesRequestTypedDict(TypedDict):
    after: NotRequired[str]
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""
    limit: NotRequired[int]
    r"""The limit for how many objects will be in the response. Default and max for this value is 512 objects."""
    ids: NotRequired[List[str]]
    r"""A filter on the data based on this comma-separated list of defect type IDs."""


class GetDefectTypesRequest(BaseModel):
    after: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results."""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 512
    r"""The limit for how many objects will be in the response. Default and max for this value is 512 objects."""

    ids: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""A filter on the data based on this comma-separated list of defect type IDs."""


GetDefectTypesResponseTypedDict = TypeAliasType(
    "GetDefectTypesResponseTypedDict",
    Union[
        DvirDefectTypeGetDefectTypesResponseBodyTypedDict,
        DvirDefectTypeGetDefectTypesBadRequestErrorResponseBodyTypedDict,
    ],
)


GetDefectTypesResponse = TypeAliasType(
    "GetDefectTypesResponse",
    Union[
        DvirDefectTypeGetDefectTypesResponseBody,
        DvirDefectTypeGetDefectTypesBadRequestErrorResponseBody,
    ],
)
