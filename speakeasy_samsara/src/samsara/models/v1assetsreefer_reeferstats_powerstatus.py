"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1AssetsReeferReeferStatsPowerStatusStatus(str, Enum):
    r"""Power status of the reefer. Valid values: `Off`, `Active`, `Active (Start/Stop)`, `Active (Continuous)`."""

    OFF = "Off"
    ACTIVE = "Active"
    ACTIVE_START_STOP_ = "Active (Start/Stop)"
    ACTIVE_CONTINUOUS_ = "Active (Continuous)"


class V1AssetsReeferReeferStatsPowerStatusTypedDict(TypedDict):
    changed_at_ms: NotRequired[int]
    r"""Timestamp in Unix milliseconds since epoch."""
    status: NotRequired[V1AssetsReeferReeferStatsPowerStatusStatus]
    r"""Power status of the reefer. Valid values: `Off`, `Active`, `Active (Start/Stop)`, `Active (Continuous)`."""


class V1AssetsReeferReeferStatsPowerStatus(BaseModel):
    changed_at_ms: Annotated[Optional[int], pydantic.Field(alias="changedAtMs")] = None
    r"""Timestamp in Unix milliseconds since epoch."""

    status: Optional[V1AssetsReeferReeferStatsPowerStatusStatus] = None
    r"""Power status of the reefer. Valid values: `Off`, `Active`, `Active (Start/Stop)`, `Active (Continuous)`."""
