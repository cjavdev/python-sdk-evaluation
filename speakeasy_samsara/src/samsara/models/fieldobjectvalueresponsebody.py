"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .barcodevalueobjectresponsebody import (
    BarcodeValueObjectResponseBody,
    BarcodeValueObjectResponseBodyTypedDict,
)
from .datetimevalueobjectresponsebody import (
    DateTimeValueObjectResponseBody,
    DateTimeValueObjectResponseBodyTypedDict,
)
from .multiplechoicevalueobjectresponsebody import (
    MultipleChoiceValueObjectResponseBody,
    MultipleChoiceValueObjectResponseBodyTypedDict,
)
from .photovalueobjectresponsebody import (
    PhotoValueObjectResponseBody,
    PhotoValueObjectResponseBodyTypedDict,
)
from .scanneddocumentvalueobjectresponsebody import (
    ScannedDocumentValueObjectResponseBody,
    ScannedDocumentValueObjectResponseBodyTypedDict,
)
from .signaturevalueobjectresponsebody import (
    SignatureValueObjectResponseBody,
    SignatureValueObjectResponseBodyTypedDict,
)
import pydantic
from samsara.types import BaseModel
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FieldObjectValueResponseBodyTypedDict(TypedDict):
    r"""The value of the document field. The shape of value depends on the type."""

    barcode_value: NotRequired[List[BarcodeValueObjectResponseBodyTypedDict]]
    r"""The value of a barcode scanning field. Only present for barcode scanning fields."""
    date_time_value: NotRequired[DateTimeValueObjectResponseBodyTypedDict]
    r"""The value of a date time field. Only present for date time fields."""
    multiple_choice_value: NotRequired[
        List[MultipleChoiceValueObjectResponseBodyTypedDict]
    ]
    r"""The value of a multiple choice field. Only present for multiple choice fields."""
    number_value: NotRequired[float]
    r"""The value of a number field. Only present for number fields."""
    photo_value: NotRequired[List[PhotoValueObjectResponseBodyTypedDict]]
    r"""The value of a photo field. Only present for photo fields."""
    scanned_document_value: NotRequired[
        List[ScannedDocumentValueObjectResponseBodyTypedDict]
    ]
    r"""The value of a scanned document field. Only present for scanned document fields."""
    signature_value: NotRequired[SignatureValueObjectResponseBodyTypedDict]
    r"""The value of a signature field. Only present for signature fields."""
    string_value: NotRequired[str]
    r"""The value of a string field. Only present for string fields."""


class FieldObjectValueResponseBody(BaseModel):
    r"""The value of the document field. The shape of value depends on the type."""

    barcode_value: Annotated[
        Optional[List[BarcodeValueObjectResponseBody]],
        pydantic.Field(alias="barcodeValue"),
    ] = None
    r"""The value of a barcode scanning field. Only present for barcode scanning fields."""

    date_time_value: Annotated[
        Optional[DateTimeValueObjectResponseBody], pydantic.Field(alias="dateTimeValue")
    ] = None
    r"""The value of a date time field. Only present for date time fields."""

    multiple_choice_value: Annotated[
        Optional[List[MultipleChoiceValueObjectResponseBody]],
        pydantic.Field(alias="multipleChoiceValue"),
    ] = None
    r"""The value of a multiple choice field. Only present for multiple choice fields."""

    number_value: Annotated[Optional[float], pydantic.Field(alias="numberValue")] = None
    r"""The value of a number field. Only present for number fields."""

    photo_value: Annotated[
        Optional[List[PhotoValueObjectResponseBody]], pydantic.Field(alias="photoValue")
    ] = None
    r"""The value of a photo field. Only present for photo fields."""

    scanned_document_value: Annotated[
        Optional[List[ScannedDocumentValueObjectResponseBody]],
        pydantic.Field(alias="scannedDocumentValue"),
    ] = None
    r"""The value of a scanned document field. Only present for scanned document fields."""

    signature_value: Annotated[
        Optional[SignatureValueObjectResponseBody],
        pydantic.Field(alias="signatureValue"),
    ] = None
    r"""The value of a signature field. Only present for signature fields."""

    string_value: Annotated[Optional[str], pydantic.Field(alias="stringValue")] = None
    r"""The value of a string field. Only present for string fields."""
