"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HealthReasonCode(str, Enum):
    r"""The type of health reason detected.  Valid values: `assetUnplugged`, `cameraMisaligned`, `healthy`, `inwardCameraObstruction`, `irregularRecording`, `lowDeviceBattery`, `missingEldDiagnostics`, `missingVin`, `needsReplacement`, `newlyInstalledDevice`, `noGpsSignal`, `notDetected`, `outwardCameraObstruction`, `recordingTimeRequired`, `unknown`, `vgUnplugged`"""

    ASSET_UNPLUGGED = "assetUnplugged"
    CAMERA_MISALIGNED = "cameraMisaligned"
    HEALTHY = "healthy"
    INWARD_CAMERA_OBSTRUCTION = "inwardCameraObstruction"
    IRREGULAR_RECORDING = "irregularRecording"
    LOW_DEVICE_BATTERY = "lowDeviceBattery"
    MISSING_ELD_DIAGNOSTICS = "missingEldDiagnostics"
    MISSING_VIN = "missingVin"
    NEEDS_REPLACEMENT = "needsReplacement"
    NEWLY_INSTALLED_DEVICE = "newlyInstalledDevice"
    NO_GPS_SIGNAL = "noGpsSignal"
    NOT_DETECTED = "notDetected"
    OUTWARD_CAMERA_OBSTRUCTION = "outwardCameraObstruction"
    RECORDING_TIME_REQUIRED = "recordingTimeRequired"
    UNKNOWN = "unknown"
    VG_UNPLUGGED = "vgUnplugged"


class HealthReasonResponseResponseBodyTypedDict(TypedDict):
    r"""Information about an active health reason affecting the device."""

    health_reason_code: NotRequired[HealthReasonCode]
    r"""The type of health reason detected.  Valid values: `assetUnplugged`, `cameraMisaligned`, `healthy`, `inwardCameraObstruction`, `irregularRecording`, `lowDeviceBattery`, `missingEldDiagnostics`, `missingVin`, `needsReplacement`, `newlyInstalledDevice`, `noGpsSignal`, `notDetected`, `outwardCameraObstruction`, `recordingTimeRequired`, `unknown`, `vgUnplugged`"""
    start_time: NotRequired[datetime]
    r"""The timestamp when this health reason began, in RFC3339 format."""


class HealthReasonResponseResponseBody(BaseModel):
    r"""Information about an active health reason affecting the device."""

    health_reason_code: Annotated[
        Optional[HealthReasonCode], pydantic.Field(alias="healthReasonCode")
    ] = None
    r"""The type of health reason detected.  Valid values: `assetUnplugged`, `cameraMisaligned`, `healthy`, `inwardCameraObstruction`, `irregularRecording`, `lowDeviceBattery`, `missingEldDiagnostics`, `missingVin`, `needsReplacement`, `newlyInstalledDevice`, `noGpsSignal`, `notDetected`, `outwardCameraObstruction`, `recordingTimeRequired`, `unknown`, `vgUnplugged`"""

    start_time: Annotated[Optional[datetime], pydantic.Field(alias="startTime")] = None
    r"""The timestamp when this health reason began, in RFC3339 format."""
