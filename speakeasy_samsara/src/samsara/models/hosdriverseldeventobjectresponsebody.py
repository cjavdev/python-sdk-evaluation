"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .hoseldeventobjectresponsebody import (
    HosEldEventObjectResponseBody,
    HosEldEventObjectResponseBodyTypedDict,
)
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HosDriversEldEventObjectResponseBodyDriverActivationStatus(str, Enum):
    r"""A value indicating whether the driver is active or deactivated.  Valid values: `active`, `deactivated`"""

    ACTIVE = "active"
    DEACTIVATED = "deactivated"


class HosDriversEldEventObjectResponseBodyTypedDict(TypedDict):
    driver_activation_status: HosDriversEldEventObjectResponseBodyDriverActivationStatus
    r"""A value indicating whether the driver is active or deactivated.  Valid values: `active`, `deactivated`"""
    eld_events: List[HosEldEventObjectResponseBodyTypedDict]
    r"""List of ELD event objects."""
    id: str
    r"""ID of the driver."""
    name: str
    r"""Name of the driver."""
    external_ids: NotRequired[Dict[str, str]]
    r"""A map of external ids"""


class HosDriversEldEventObjectResponseBody(BaseModel):
    driver_activation_status: Annotated[
        HosDriversEldEventObjectResponseBodyDriverActivationStatus,
        pydantic.Field(alias="driverActivationStatus"),
    ]
    r"""A value indicating whether the driver is active or deactivated.  Valid values: `active`, `deactivated`"""

    eld_events: Annotated[
        List[HosEldEventObjectResponseBody], pydantic.Field(alias="eldEvents")
    ]
    r"""List of ELD event objects."""

    id: str
    r"""ID of the driver."""

    name: str
    r"""Name of the driver."""

    external_ids: Annotated[
        Optional[Dict[str, str]], pydantic.Field(alias="externalIds")
    ] = None
    r"""A map of external ids"""
