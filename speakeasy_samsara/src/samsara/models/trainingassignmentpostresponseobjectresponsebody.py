"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .trainingcourseobjectresponsebody import (
    TrainingCourseObjectResponseBody,
    TrainingCourseObjectResponseBodyTypedDict,
)
from .traininglearnerobjectresponsebody import (
    TrainingLearnerObjectResponseBody,
    TrainingLearnerObjectResponseBodyTypedDict,
)
from datetime import datetime
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TrainingAssignmentPostResponseObjectResponseBodyTypedDict(TypedDict):
    r"""Training Assignment response object."""

    course: TrainingCourseObjectResponseBodyTypedDict
    r"""Course that is associated with the training assignments."""
    created_at_time: datetime
    r"""Creation time of the training assignment. UTC timestamp in RFC 3339 format."""
    created_by_id: str
    r"""ID of the user who created the training assignment."""
    id: str
    r"""ID of the training assignment."""
    is_existing_assignment: bool
    r"""Indicates whether the training assignment was already created."""
    learner: TrainingLearnerObjectResponseBodyTypedDict
    r"""Learner that is associated with the training assignment. Only driver learners are supported currently."""
    due_at_time: NotRequired[datetime]
    r"""Time training assignment is due. UTC timestamp in RFC 3339 format. Returned when an assignment has a due date set by an admin."""


class TrainingAssignmentPostResponseObjectResponseBody(BaseModel):
    r"""Training Assignment response object."""

    course: TrainingCourseObjectResponseBody
    r"""Course that is associated with the training assignments."""

    created_at_time: Annotated[datetime, pydantic.Field(alias="createdAtTime")]
    r"""Creation time of the training assignment. UTC timestamp in RFC 3339 format."""

    created_by_id: Annotated[str, pydantic.Field(alias="createdById")]
    r"""ID of the user who created the training assignment."""

    id: str
    r"""ID of the training assignment."""

    is_existing_assignment: Annotated[
        bool, pydantic.Field(alias="isExistingAssignment")
    ]
    r"""Indicates whether the training assignment was already created."""

    learner: TrainingLearnerObjectResponseBody
    r"""Learner that is associated with the training assignment. Only driver learners are supported currently."""

    due_at_time: Annotated[Optional[datetime], pydantic.Field(alias="dueAtTime")] = None
    r"""Time training assignment is due. UTC timestamp in RFC 3339 format. Returned when an assignment has a due date set by an admin."""
