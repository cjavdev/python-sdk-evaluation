"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from samsara.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TachographActivityState(str, Enum):
    r"""Tachograph activity state. Valid values: `BREAK/REST`, `WORK`, `AVAILABILITY`, `DRIVING`, `UNKNOWN`."""

    BREAK_REST = "BREAK/REST"
    WORK = "WORK"
    AVAILABILITY = "AVAILABILITY"
    DRIVING = "DRIVING"
    UNKNOWN = "UNKNOWN"


class TachographActivityTypedDict(TypedDict):
    r"""Tachograph activity"""

    end_time: NotRequired[str]
    r"""End time of state in RFC 3339 format."""
    is_manual_entry: NotRequired[bool]
    r"""A flag indicating whether the activity was manually entered by the driver. If this is `true`, the state cannot be \"UNKNOWN\" """
    start_time: NotRequired[str]
    r"""Start time of state in RFC 3339 format."""
    state: NotRequired[TachographActivityState]
    r"""Tachograph activity state. Valid values: `BREAK/REST`, `WORK`, `AVAILABILITY`, `DRIVING`, `UNKNOWN`."""


class TachographActivity(BaseModel):
    r"""Tachograph activity"""

    end_time: Annotated[Optional[str], pydantic.Field(alias="endTime")] = None
    r"""End time of state in RFC 3339 format."""

    is_manual_entry: Annotated[
        Optional[bool], pydantic.Field(alias="isManualEntry")
    ] = None
    r"""A flag indicating whether the activity was manually entered by the driver. If this is `true`, the state cannot be \"UNKNOWN\" """

    start_time: Annotated[Optional[str], pydantic.Field(alias="startTime")] = None
    r"""Start time of state in RFC 3339 format."""

    state: Optional[TachographActivityState] = None
    r"""Tachograph activity state. Valid values: `BREAK/REST`, `WORK`, `AVAILABILITY`, `DRIVING`, `UNKNOWN`."""
